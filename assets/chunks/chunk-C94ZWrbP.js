import{kl as W,s as d,fM as I,eU as A,km as $,kn as X,ko as j,je as q,dL as V,kp as P,bZ as B,kq as H,W as R,X as J,$ as L,jN as C,kr as U}from"./chunk-CuaFhuP3.js";import"./chunk-Dpk1TJd9.js";import"./chunk-iOPJXyP1.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-DGmg3LSc.js";class G{constructor(e,t=null){if(this.tile=e,t!=null&&e!=null){const i=e.extent;this._samplerData=new W(t,i)}}get zmin(){return this._samplerData!=null?this._samplerData.data.minValue:0}get zmax(){return this._samplerData!=null?this._samplerData.data.maxValue:0}get hasNoDataValues(){return!!this._samplerData?.data.hasNoDataValues}sample(e,t){if(this._samplerData==null)return;const{safeWidth:i,data:n,dx:l,dy:o,y1:s,x0:r}=this._samplerData,{width:c,values:u,noDataValue:f}=n,p=O(o*(s-t),0,i),h=O(l*(e-r),0,i),T=Math.floor(p),M=Math.floor(h),x=T*c+M,F=x+c,_=u[x],E=u[F],z=u[x+1],S=u[F+1];if(_!==f&&E!==f&&z!==f&&S!==f){const k=h-M,b=_+(z-_)*k;return b+(E+(S-E)*k-b)*(p-T)}}}function O(a,e,t){return a<e?e:a>t?t:a}class Be{async queryAll(e,t,i){if(!(e=i?.ignoreInvisibleLayers?e.filter((c=>c.visible)):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const n=y.fromGeometry(t);let l=!1;i?.returnSampleInfo||(l=!0);const o={...v,...i,returnSampleInfo:!0},s=await this.query(e[e.length-1],n,o),r=await this._queryAllContinue(e,s,o);return r.geometry=r.geometry.export(),l&&delete r.sampleInfo,r}async query(e,t,i){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||!(t instanceof y)&&t.type!=="point"&&t.type!=="multipoint"&&t.type!=="polyline")throw new d("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const n={...v,...i},l=new K(e,t.spatialReference,n),o=n.signal;return await e.load({signal:o}),await ee(l,t,o),await this._selectTiles(l,o),await g(l,o),se(l),ae(l,o)}async createSampler(e,t,i){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...v,...i};return this._createSampler(e,t,n)}async createSamplerAll(e,t,i){if(!(e=i?.ignoreInvisibleLayers?e.filter((o=>o.visible)):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...v,...i,returnSampleInfo:!0},l=await this._createSampler(e[e.length-1],t,n);return this._createSamplerAllContinue(e,t,l,n)}async _createSampler(e,t,i,n){const l=i.signal;await e.load({signal:l});const o=t.spatialReference,s=e.tileInfo.spatialReference;o.equals(s)||(await I([{source:o,dest:s}],{signal:l}),t=A(t,s));const r=new Y(e,t,i,n);return await this._selectTiles(r,l),await g(r,l),new $(r.elevationTiles,r.layer.tileInfo,r.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const l=i.samplers.filter((c=>!c.tile.hasNoDataValues)).map((c=>X(c.extent))),o=await this._createSampler(e[e.length-1],t,n,l);if(o.samplers.length===0)return i;const s=i.samplers.concat(o.samplers),r=new $(s,n.noDataValue);return this._createSamplerAllContinue(e,t,r,n)}async _queryAllContinue(e,t,i){const n=e.pop(),l=t.geometry.coordinates,o=t.sampleInfo;j(o);const s=[],r=[];for(let p=0;p<l.length;p++){const h=o[p];h.demResolution>=0?h.source||(h.source=n):e.length&&(s.push(l[p]),r.push(p))}if(!e.length||s.length===0)return t;const c=t.geometry.clone(s),u=await this.query(e[e.length-1],c,i),f=u.sampleInfo;if(!f)throw new Error("no sampleInfo");return r.forEach(((p,h)=>{l[p].z=u.geometry.coordinates[h].z,o[p].demResolution=f[h].demResolution})),this._queryAllContinue(e,t,i)}async _selectTiles(e,t){e.type==="geometry"&&te(e);const i=e.options.demResolution;if(typeof i=="number")ne(e,i);else if(i==="finest-contiguous")await this._selectTilesFinestContiguous(e,t);else{if(i!=="auto")throw new d("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${i}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,t)}}async _selectTilesFinestContiguous(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,l=Q(i,n,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,l,t)}async _selectTilesFinestContiguousAt(e,t,i){const n=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const l=n.tilemapCache,o=e.getTilesToFetch();try{if(l&&!D(l))await q(Promise.all(o.map((s=>l.fetchAvailability(s.level,s.row,s.col,{signal:i})))),i);else if(await g(e,i),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new d("elevation-query:has-unavailable-tiles","Some elevation tiles are unavailable")}catch(s){V(s),await this._selectTilesFinestContiguousAt(e,t-1,i)}}async _selectTilesAuto(e,t){le(e),oe(e);const i=e.layer.tilemapCache;if(!i||D(i))return this._selectTilesAutoPrefetchUpsample(e,t);const n=e.getTilesToFetch(),l={},o=n.map((async s=>{const r=new P(null,0,0,0,B()),c=await H(i.fetchAvailabilityUpsample(s.level,s.row,s.col,r,{signal:t}));c.ok!==!1?s.id!=null&&(l[s.id]=r):V(c.error)}));await q(Promise.all(o),t),e.remapTiles(l)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await g(e,t);let n=!1;e.forEachTileToFetch(((l,o)=>{i.upsampleTile(l)?n=!0:o()})),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}}class y{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new y;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((i=>i.clone())),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await I([{source:this.spatialReference,dest:e}],{signal:t});const i=new R({spatialReference:this.spatialReference,points:this.coordinates.map((s=>[s.x,s.y]))}),n=A(i,e);if(!n)return null;const l=this.coordinates.map(((s,r)=>{const c=s.clone(),u=n.points[r];return c.x=u[0],c.y=u[1],c})),o=this.clone(l);return o.spatialReference=e,o}static fromGeometry(e){const t=new y;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof y)t.coordinates=e.coordinates.map((i=>i.clone())),t._exporter=(i,n)=>{const l=e.clone(i);return l.spatialReference=n,l};else switch(e.type){case"point":{const i=e,{hasZ:n,hasM:l}=i;t.coordinates=n&&l?[new m(i.x,i.y,i.z,i.m)]:n?[new m(i.x,i.y,i.z)]:l?[new m(i.x,i.y,null,i.m)]:[new m(i.x,i.y)],t._exporter=(o,s)=>e.hasM?new L(o[0].x,o[0].y,o[0].z,o[0].m,s):new L(o[0].x,o[0].y,o[0].z,s);break}case"multipoint":{const i=e,{hasZ:n,hasM:l}=i;t.coordinates=n&&l?i.points.map((o=>new m(o[0],o[1],o[2],o[3]))):n?i.points.map((o=>new m(o[0],o[1],o[2]))):l?i.points.map((o=>new m(o[0],o[1],null,o[2]))):i.points.map((o=>new m(o[0],o[1]))),t._exporter=(o,s)=>e.hasM?new R({points:o.map((r=>[r.x,r.y,r.z,r.m])),hasZ:!0,hasM:!0,spatialReference:s}):new R(o.map((r=>[r.x,r.y,r.z])),s);break}case"polyline":{const i=e,n=[],l=[],{hasZ:o,hasM:s}=e;let r=0;for(const c of i.paths)if(l.push([r,r+c.length]),r+=c.length,o&&s)for(const u of c)n.push(new m(u[0],u[1],u[2],u[3]));else if(o)for(const u of c)n.push(new m(u[0],u[1],u[2]));else if(s)for(const u of c)n.push(new m(u[0],u[1],null,u[2]));else for(const u of c)n.push(new m(u[0],u[1]));t.coordinates=n,t._exporter=(c,u)=>{const f=e.hasM?c.map((h=>[h.x,h.y,h.z??0,h.m??0])):c.map((h=>[h.x,h.y,h.z??0])),p=l.map((h=>f.slice(h[0],h[1])));return new J({paths:p,hasM:e.hasM,hasZ:!0,spatialReference:u})};break}}return t}}class m{constructor(e,t,i=null,n=null,l=null,o=null){this.x=e,this.y=t,this.z=i,this.m=n,this.tile=l,this.elevationTile=o}clone(){return new m(this.x,this.y,this.z,this.m)}}class N{constructor(e,t){this.layer=e,this.options=t}}class K extends N{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((t=>t.tile=null));else{const{tileInfo:t,tilemapCache:i}=this.layer,n=w(t,i)[e].level;this.geometry.coordinates.forEach((l=>l.tile=t.tileAt(n,l.x,l.y)))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const n=i.tile;if(!n)continue;const l=i.tile?.id;i.elevationTile||!l||e[l]||(e[l]=n,t.push(n))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>{t.tile=null}))}}class Y extends N{constructor(e,t,i,n){super(e,i),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.clone().intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const{tileInfo:t,tilemapCache:i}=this.layer,n=w(t,i);if(!e)return n.length-1;const l=this.extent;if(l==null)return-1;for(let o=n.length-1;o>=0;o--){const s=n[o],r=s.resolution*t.size[0],c=s.resolution*t.size[1];if(Math.ceil(l.width/r)*Math.ceil(l.height/c)<=e)return o}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=Z(this._candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach((n=>{if(this._fetchedCandidates.has(n))return void(t&&t(n));let l=!1;e(n,(()=>l=!0)),l?t&&t(n):this._candidateTiles.push(n)})),this._candidateTiles=Z(this._candidateTiles,t)}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(t==null)return;const{tileInfo:i,tilemapCache:n}=this.layer,l=w(i,n)[e],o=i.tileAt(l.level,t.xmin,t.ymin),s=o.extent;if(s==null)return;const r=l.resolution*i.size[0],c=l.resolution*i.size[1],u=Math.ceil((t.xmax-s[0])/r),f=Math.ceil((t.ymax-s[1])/c);for(let p=0;p<f;p++)for(let h=0;h<u;h++){const T=new P(null,o.level,o.row-p,o.col+h);i.updateTileInfo(T),this._tileIsMasked(T)||this._candidateTiles.push(T)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>e.extent&&U(t,e.extent)))}}function Q(a,e,t=0){const i=w(a,e);let n=i.length-1;if(t>0){const l=t/C(a.spatialReference),o=i.findIndex((s=>s.resolution<l));o===0?n=0:o>0&&(n=o-1)}return n}const v={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};async function ee(a,e,t){let i;const n=a.layer.tileInfo.spatialReference;if(e instanceof y?i=await e.project(n,t):(await I([{source:e.spatialReference,dest:n}],{signal:t}),i=A(e,n)),!i)throw new d("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${e.spatialReference.wkid}' on an elevation service in '${n.wkid}'`);a.geometry=y.fromGeometry(i)}function te(a){if(a.layer.fullExtent==null)return;const e=new G(null);e.sample=()=>a.options.noDataValue,a.outsideExtentTile=e;const t=a.layer.fullExtent;a.geometry.coordinates.forEach((i=>{const n=i.x,l=i.y;(n<t.xmin||n>t.xmax||l<t.ymin||l>t.ymax)&&(i.elevationTile=e)}))}function ie(a,e){const{tileInfo:t,tilemapCache:i}=a.layer,n=e/C(t.spatialReference),l=w(t,i);let o=l[0],s=0;for(let r=1;r<l.length;r++){const c=l[r];Math.abs(c.resolution-n)<Math.abs(o.resolution-n)&&(o=c,s=r)}return s}function ne(a,e){const t=ie(a,e);a.selectTilesAtLOD(t)}function le(a){const{tileInfo:e,tilemapCache:t}=a.layer,i=Q(e,t,a.options.minDemResolution);a.selectTilesAtLOD(i,a.options.maximumAutoTileRequests)}function w(a,e){const t=a.lods;if(D(e)){const{effectiveMinLOD:i,effectiveMaxLOD:n}=e;return t.filter((l=>l.level>=i&&l.level<=n))}return t}async function g(a,e){const t=a.getTilesToFetch(),i={},n=a.options.cache,l=a.options.noDataValue,o=t.map((async s=>{if(s.id==null)return;const r=`${a.layer.uid}:${s.id}:${l}`,c=n!=null?n.get(r):null,u=c??await a.layer.fetchTile(s.level,s.row,s.col,{noDataValue:l,signal:e});n?.put(r,u),i[s.id]=new G(s,u)}));await q(Promise.allSettled(o),e),a.populateElevationTiles(i)}function oe(a){const e=a.layer.tileInfo;let t=0;const i={},n=s=>{s.id!=null&&(s.id in i?i[s.id]++:(i[s.id]=1,t++))},l=s=>{if(s.id==null)return;const r=i[s.id];r===1?(delete i[s.id],t--):i[s.id]=r-1};a.forEachTileToFetch(n,l);let o=!0;for(;o&&(o=!1,a.forEachTileToFetch((s=>{t<=a.options.maximumAutoTileRequests||(l(s),e.upsampleTile(s)&&(o=!0),n(s))}),l),o););}function se(a){a.geometry.coordinates.forEach((e=>{const t=e.elevationTile;let i=a.options.noDataValue;if(t){const n=t.sample(e.x,e.y);n!=null?i=n:e.elevationTile=null}e.z=i}))}function Z(a,e){const t={},i=[];for(const l of a){const o=l.id;o&&!t[o]?(t[o]=l,i.push(l)):e&&e(l)}const n=i.sort(((l,o)=>l.level-o.level));return n.filter(((l,o)=>{for(let s=0;s<o;s++){const r=n[s].extent;if(r&&l.extent&&U(r,l.extent))return e&&e(l),!1}return!0}))}async function ae(a,e){const t=await a.geometry.project(a.outSpatialReference,e);j(t);const i={geometry:t.export(),noDataValue:a.options.noDataValue};return a.options.returnSampleInfo&&(i.sampleInfo=re(a)),a.geometry.coordinates.forEach((n=>{n.tile=null,n.elevationTile=null})),i}function re(a){const e=a.layer.tileInfo,t=C(e.spatialReference);return a.geometry.coordinates.map((i=>{let n=-1;return i.elevationTile&&i.elevationTile!==a.outsideExtentTile&&(n=e.lodAt(i.elevationTile.tile.level).resolution*t),{demResolution:n}}))}function D(a){return a?.tileInfo!=null}export{Be as ElevationQuery,y as GeometryDescriptor,Q as getFinestLodIndex};
