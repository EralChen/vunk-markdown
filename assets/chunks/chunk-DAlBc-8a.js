import{m as p}from"./chunk-BUVSeX7E.js";import{x as a}from"./chunk-RvJNgVq9.js";import{d0 as h}from"./chunk-CuaFhuP3.js";import"./chunk-Dpk1TJd9.js";import"./chunk-iOPJXyP1.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-DGmg3LSc.js";const l={uniform:0,conformal:1,rigid:2,"rigid-motion":3,general:4},m=n=>n.map((t=>new p(t.x,t.y)));class tt{constructor(){this.transform=new a}calculateErrors(t,r){const i=t.length,o=r.length;if(i!==o)throw new Error(`The input length (${i}) is not the same as output length (${o})`);const s=[];return{rms:this.transform.calculateErrors(i,m(t),m(r),s),errorsOut:s}}flipX(t,r){return this.transform.flipX(t,r),this}flipY(t,r){return this.transform.flipY(t,r),this}initializeFromControlPoints(t,r,i,o){const s=r.length,e=i.length;if(s!==e)throw new Error(`The input length (${s}) is not the same as output length (${e})`);this.transform.initializeFromControlPoints(l[t],s,m(r),m(i),o?.transform)}isIdentity(){return this.transform.isIdentity()}rotate(t,r,i){const o=h(t);return r!=null&&i!=null?this.transform.rotateAngleAbout(o,new p(r,i)):this.transform.rotateAngle(o),this}scale(t,r){return this.transform.scale(t,r),this}setIdentity(){this.transform.setIdentity()}setSwapCoordinates(){return this.transform.setSwapCoordinates(),this}shear(t,r){return this.transform.shear(t,r),this}shift(t,r){return this.transform.shiftCoords(t,r),this}}export{tt as default};
