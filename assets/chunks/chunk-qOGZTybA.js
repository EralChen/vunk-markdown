import{a as c,m as M}from"./chunk-BUVSeX7E.js";import"./chunk-Da9IW-EP.js";import{O as V,Y as w,e as f,r as P,a as Z}from"./chunk-A9ItisFv.js";import{Y as v,X as R,W as E,U as d,$ as h}from"./chunk-CuaFhuP3.js";import{toGeometry as g,fromGeometryToGXGeometry as y}from"./chunk-BoBj9ZcI.js";import"./chunk-RvJNgVq9.js";import"./chunk-B92kdZ15.js";import"./chunk-DP7_WWTp.js";import"./chunk-Dpk1TJd9.js";import"./chunk-iOPJXyP1.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-DGmg3LSc.js";const n="_gxVersion",x=2,C=1;function Gt(t){return Array.isArray(t)?t[0].spatialReference:t.spatialReference}function $t(t){switch(t.type){case"point":return X(t);case"multipoint":return z(t);case"polyline":return $(t);case"polygon":return G(t);case"extent":return Y(t);default:throw new Error(`Unsupported geometry type: ${t.type}`)}}function Y(t){if(!t.getCacheValue(n)){const r=new P;r.setCoords(t.xmin,t.ymin,t.xmax,t.ymax),t.hasM&&r.setInterval(x,0,t.mmin,t.mmax),t.hasZ&&r.setInterval(C,0,t.zmin,t.zmax),t.setCacheValue(n,r)}return t.getCacheValue(n)}function z(t){if(!t.getCacheValue(n)){const r=new Z,e=new f,a=t.points,o=t.hasM,i=t.hasZ,s=i?3:2;for(let m=0,p=a.length;m<p;m++){const u=a[m];e.setXYCoords(u[0],u[1]),i&&e.setZ(u[2]??0),o&&e.setM(u[s]??NaN),r.add(e)}t.setCacheValue(n,r)}return t.getCacheValue(n)}function X(t){if(!t.getCacheValue(n)){const r=new f;r.setXYCoords(t.x,t.y),t.hasM&&r.setM(t.m),t.hasZ&&r.setZ(t.z),t.setCacheValue(n,r)}return t.getCacheValue(n)}function G(t){if(!t.getCacheValue(n)){const{curveRings:r,hasM:e,hasZ:a,rings:o}=t,i=y({curveRings:r,hasM:e,hasZ:a,rings:o});t.setCacheValue(n,i)}return t.getCacheValue(n)}function $(t){if(!t.getCacheValue(n)){const{curvePaths:r,hasM:e,hasZ:a,paths:o}=t,i=y({curvePaths:r,hasM:e,hasZ:a,paths:o});t.setCacheValue(n,i)}return t.getCacheValue(n)}function kt(t){if(t.wkid)return V(t.wkid);const r=t.wkt2||t.wkt;return r?w(r):null}function It(t,r){if(t)switch(t.getGeometryType()){case c.enumPoint:return N(t,r);case c.enumEnvelope:return k(t,r);case c.enumMultiPoint:return I(t,r);case c.enumPolyline:return S(t,r);case c.enumPolygon:return O(t,r)}return null}function k(t,r){if(t.isEmpty())return null;const e=new d({xmin:t.getXMin(),ymin:t.getYMin(),xmax:t.getXMax(),ymax:t.getYMax(),spatialReference:r}),a=t.getDescription();if(a.hasM()){const o=t.queryInterval(x,0);e.mmin=o.vmin,e.mmax=o.vmax}if(a.hasZ()){const o=t.queryInterval(C,0);e.zmin=o.vmin,e.zmax=o.vmax}return e.setCacheValue(n,t),e}function I(t,r){if(t.isEmpty())return null;const e=t.getDescription(),a=e.hasM(),o=e.hasZ(),i=[],s=new f;for(let p=0,u=t.getPointCount();p<u;p++){t.getPointByVal(p,s);const l=[s.getX(),s.getY()];o&&l.push(s.getZ()),a&&l.push(s.getM()),i.push(l)}const m=new E({hasM:a,hasZ:o,points:i,spatialReference:r});return m.setCacheValue(n,t),m}function N(t,r){if(t instanceof M)return new h({x:t.x,y:t.y,spatialReference:r});if(t.isEmpty())return null;const e=new h({x:t.getX(),y:t.getY(),spatialReference:r}),a=t.getDescription();return a.hasM()&&(e.m=t.getM()),a.hasZ()&&(e.z=t.getZ()),e.setCacheValue(n,t),e}function O(t,r){if(t.isEmpty())return null;const e=v.fromJSON({spatialReference:r,...g(t,null)});return e.setCacheValue(n,t),e}function S(t,r){if(t.isEmpty())return null;const e=R.fromJSON({spatialReference:r,...g(t,null)});return e.setCacheValue(n,t),e}export{Y as fromExtent,$t as fromGeometry,z as fromMultipoint,X as fromPoint,G as fromPolygon,$ as fromPolyline,kt as fromSpatialReference,Gt as getSpatialReference,k as toExtent,It as toGeometry,I as toMultipoint,N as toPoint,O as toPolygon,S as toPolyline};
