import{as as _,jr as v,n as h,aq as S,ar as u,aK as w,e3 as b,js as k,ju as E,jv as $,jt as C,gg as A,fW as F,jw as P,a2 as G,jx as m,eq as I,f2 as H,fr as O,aY as R,jy as j,b$ as x,fm as Z,aj as n,ak as l,am as z}from"./chunk-XGpVqsM_.js";import{t as L}from"./chunk-DmxaQ-k8.js";import{a as M}from"./chunk-bVDAhtkp.js";import{u as W}from"./chunk-Bs2FV5Yv.js";import{f as q}from"./chunk-B_Ihmwjk.js";import{L as N}from"./chunk-IKXz-qeP.js";import{i as T,o as J}from"./chunk-BiC0AAdD.js";import{i as y,r as B,n as g}from"./chunk-CnLGIWyr.js";import"./chunk-DyqHK6XP.js";import"./chunk-Dix477Sg.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CrMA_peF.js";import"./chunk-TII7h--m.js";import"./chunk-BjJztz3_.js";import"./chunk-CxK2Oj-r.js";import"./chunk-UhNHdoQU.js";import"./chunk-CTlztY7w.js";import"./chunk-DhzMXUWC.js";import"./chunk-DGkpYqI6.js";import"./chunk-C57AUuqt.js";import"./chunk-Cg5--1gk.js";const f="graphics-collections";let a=class extends _{get updating(){return this._updatingHandles.updating}get _hasZ(){const e=this.view;return e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,i=e!=null&&e.type==="3d";if(!i||t.type==="map-notes")return y();const r=async(o,s)=>(await v(e.whenLayerView(t),s)).elevationAlignPointsInFeatures(o,s);return y(i,{elevationInfo:t.elevationInfo,alignPointsInFeatures:r})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes";return B(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource,i=e!=null&&e.type==="3d",r=this._extrudedPolygonSymbolsCount>0;return i&&t.type!=="map-notes"&&r?g(r,(async(o,s)=>{const p=await e.whenLayerView(t);return h(s),p.queryForSymbologySnapping({candidates:o,spatialReference:e.spatialReference},s)})):g()}constructor(e){super(e),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0,this._updatingHandles=new S,this._memoizedMakeGetGroundElevation=L(T)}destroy(){for(const e of this._pendingAdds)e.task.abort();this._pendingAdds.length=0,this._mapSources((e=>this._destroySource(e))),this._updatingHandles.destroy()}initialize(){this._updatingHandles.add((()=>this.getGraphicsLayers()),(i=>{this._updatingHandles.removeHandles(f);for(const r of i)this._addMany(r.graphics.toArray()),this.addHandles([r.on("graphic-update",(o=>this._onGraphicUpdate(o))),this._updatingHandles.addOnCollectionChange((()=>r.graphics),(o=>this._onGraphicsChanged(o)))],f)}),u);const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="map-notes"&&e.elevationProvider&&this.addHandles([e.elevationProvider.on("elevation-change",(({context:i})=>{k(i,t.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()})),w((()=>t.elevationInfo),(()=>this._snappingElevationAligner.notifyElevationSourceChange()),u),b((()=>t),["edits","apply-edits","graphic-update"],(()=>this._symbologySnappingFetcher.notifySymbologyChange()))])}async fetchCandidates(e,t){const{point:i,coordinateHelper:{spatialReference:r}}=e,o=await E(this._mapSources((d=>this._fetchCandidatesForSource(d,e,t))));h(t);const s=this._memoizedMakeGetGroundElevation(this.view,r),p=o.flat().map((d=>J(d,s)));return $(i,p),p}async _fetchCandidatesForSource(e,t,i){const r=C({parameters:t,mode:this.view?.type??"2d"}),o=await W(e.queryEngine,r,i);h(i);const s=await this._snappingElevationAligner.alignCandidates(o.candidates,t.coordinateHelper.spatialReference,i);h(i);const p=await this._symbologySnappingFetcher.fetch(s,i);h(i);const d=p.length===0?s:[...s,...p];return this._snappingElevationFilter.filter(r,d)}refresh(){}_onGraphicUpdate(e){if(this.getGraphicsLayers().some((t=>t.graphics.includes(e.graphic))))switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],i=new Map;for(const r of e)r.geometry!=null&&(this._needsInitializeProjection(r.geometry.spatialReference)?(t.push(r.geometry.spatialReference),i.set(r.uid,r)):this._add(r));this._createPendingAdd(t,i)}_createPendingAdd(e,t){if(!e.length)return;const i=A((async s=>{await F(e.map((p=>({source:p,dest:this.spatialReference}))),{signal:s}),this._markLoadedSpatialReferences(e);for(const p of t.values())this._add(p)}));this._updatingHandles.addPromise(i.promise);const r={task:i,graphics:t},o=()=>P(this._pendingAdds,r);i.promise.then(o,o),this._pendingAdds.push(r)}_markLoadedSpatialReferences(e){for(const t of e){t.wkid!=null&&this._loadedWkids.add(t.wkid);const i=t.wkt2||t.wkt;i&&this._loadedWkts.add(i)}}_add(e){if(e.geometry==null||!e.visible)return;let t=e.geometry;if(t.type==="mesh")return;t.type==="extent"&&(t=G.fromExtent(t));const i=this._ensureSource(t.type);if(i==null)return;const r=this._createOptimizedFeature(e.uid,t);r!=null&&(i.featureStore.add(r),m(e.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(e){if(e.wkid!=null&&this._loadedWkids.has(e.wkid))return!1;const t=e.wkt2||e.wkt;return(!t||!this._loadedWkts.has(t))&&!I(e,this.spatialReference)}_createOptimizedFeature(e,t){const i=H(M(t),this.spatialReference);if(!i)return null;const r=this._ensureGeometryHasZ(i),o=O(r,this._hasZ,!1);return new R(o,{[c]:e},null,e)}_ensureGeometryHasZ(e){if(!this._hasZ)return e;const t=r=>{for(;r.length<3;)r.push(0)},i=e.clone();switch(i.hasZ=!0,i.type){case"point":i.z=i.z??0;break;case"multipoint":i.points.forEach(t);break;case"polyline":i.paths.forEach((r=>r.forEach(t)));break;case"polygon":i.rings.forEach((r=>r.forEach(t)))}return i}_ensureSource(e){const t=this._sources[e];if(t!=null)return t;const i=this._createSource(e);return this._sources[e]=i,i}_createSource(e){const t=j.toJSON(e),i=this._hasZ,r=new q({geometryType:t,hasZ:i,hasM:!1});return{featureStore:r,queryEngine:new N({featureStore:r,fieldsIndex:Z.fromLayerJSON({fields:[{name:c,type:"esriFieldTypeOID",alias:c}]}),geometryType:t,hasM:!1,hasZ:i,featureIdInfo:{type:"object-id",fieldName:c},spatialReference:this.spatialReference,priority:x.SNAPPING,scheduler:this.view!=null&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources((t=>this._removeFromSource(t,e)));for(const t of this._pendingAdds)t.graphics.delete(e.uid),t.graphics.size===0&&t.task.abort()}_removeFromSource(e,t){const i=t.uid;e.featureStore.has(i)&&(e.featureStore.removeById(t.uid),m(t.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(e){e.queryEngine.destroy(),this._sources[e.type]=null}_mapSources(e){const{point:t,polygon:i,polyline:r,multipoint:o}=this._sources,s=[];return t!=null&&s.push(e(t)),i!=null&&s.push(e(i)),r!=null&&s.push(e(r)),o!=null&&s.push(e(o)),s}};n([l()],a.prototype,"getGraphicsLayers",void 0),n([l({constructOnly:!0})],a.prototype,"layerSource",void 0),n([l({constructOnly:!0})],a.prototype,"spatialReference",void 0),n([l({constructOnly:!0})],a.prototype,"view",void 0),n([l({readOnly:!0})],a.prototype,"updating",null),n([l({readOnly:!0})],a.prototype,"availability",void 0),n([l()],a.prototype,"_hasZ",null),n([l()],a.prototype,"_snappingElevationAligner",null),n([l()],a.prototype,"_snappingElevationFilter",null),n([l()],a.prototype,"_symbologySnappingFetcher",null),n([l()],a.prototype,"_extrudedPolygonSymbolsCount",void 0),a=n([z("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],a);const c="OBJECTID";export{a as GraphicsSnappingSource};
