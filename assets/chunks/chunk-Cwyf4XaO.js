import{HO as P,HU as $,HP as A,Ih as C,Ii as y,Ij as b,HQ as S,HR as w,HS as D,b8 as p,HV as E,HN as _,HT as R,HY as N,HZ as H,H_ as L,H$ as M,Ik as x,Il as F,Im as V,In as q,I1 as U,Io as j,I3 as B,Ip as W,I4 as z,I5 as Q,I2 as k,I6 as g,I7 as G,ky as v,rF as Y,I8 as Z,af as a,I9 as i,qD as l,Iq as f,Ir as O,Is as J,It as K,rL as X,u2 as ee,d3 as te,Iu as se,Iv as re,Iw as ae,no as ie,Ic as oe}from"./chunk-CuaFhuP3.js";import{r as ne}from"./chunk-B6pR6iCC.js";import{_ as le}from"./chunk-iOPJXyP1.js";import"./chunk-Dpk1TJd9.js";function I(s){const e=new P,{vertex:t,fragment:o,attributes:n,varyings:u}=e,{vvColor:h,hasVertexColors:c}=s;return $(t,s),e.include(A,s),e.include(C,s),e.include(y,s),e.include(b,s),o.include(S,s),e.include(w,s),e.include(D,s),n.add(p.POSITION,"vec3"),h&&n.add(p.COLORFEATUREATTRIBUTE,"float"),c||u.add("vColor","vec4"),u.add("vpos","vec3",{invariant:!0}),t.uniforms.add(new E("uColor",(d=>d.color))),t.main.add(_`
      vpos = position;
      forwardNormalizedVertexColor();
      forwardObjectAndLayerIdColor();

      ${c?"vColor *= uColor;":h?"vColor = uColor * interpolateVVColor(colorFeatureAttribute);":"vColor = uColor;"}
      forwardViewPosDepth((view * vec4(vpos, 1.0)).xyz);
      gl_Position = transformPosition(proj, view, vpos);`),o.include(R),o.main.add(_`discardBySlice(vpos);
discardByTerrainDepth();
outputColorHighlightOID(vColor, vpos, vColor.rgb);`),e}const pe=Object.freeze(Object.defineProperty({__proto__:null,build:I},Symbol.toStringTag,{value:"Module"}));class ue extends N{constructor(e,t){super(e,t,new H(pe,(()=>le(()=>Promise.resolve().then(()=>fe),void 0))))}_createPipeline(e,t){const{oitPass:o,output:n,transparent:u,cullFace:h,draped:c,hasOccludees:d,polygonOffset:T}=e,m=o===L.NONE;return M({blending:g(n)&&u?Q(o):null,culling:z(h),depthTest:c?null:{func:W(o)},depthWrite:B(e),drawBuffers:j(n,k(o,n)),colorWrite:U,stencilWrite:d?q:null,stencilTest:d?t?F:V:null,polygonOffset:m?T?he:null:x(e)})}initializePipeline(e){return this._occludeePipelineState=this._createPipeline(e,!0),this._createPipeline(e,!1)}getPipeline(e){return e?this._occludeePipelineState:super.getPipeline()}}const he={factor:1,units:1};class r extends G{constructor(){super(...arguments),this.cullFace=v.None,this.hasVertexColors=!1,this.transparent=!1,this.discardInvisibleFragments=!1,this.polygonOffset=!1,this.enableOffset=!0,this.writeDepth=!0,this.hasOccludees=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.objectAndLayerIdColorInstanced=!1,this.vvColor=!1,this.draped=!1,this.textureCoordinateType=Y.None,this.emissionSource=Z.None,this.occlusionPass=!1,this.hasVvInstancing=!0,this.vvSize=!1,this.vvOpacity=!1,this.snowCover=!1}}a([i({count:v.COUNT})],r.prototype,"cullFace",void 0),a([i()],r.prototype,"hasVertexColors",void 0),a([i()],r.prototype,"transparent",void 0),a([i()],r.prototype,"discardInvisibleFragments",void 0),a([i()],r.prototype,"polygonOffset",void 0),a([i()],r.prototype,"enableOffset",void 0),a([i()],r.prototype,"writeDepth",void 0),a([i()],r.prototype,"hasOccludees",void 0),a([i()],r.prototype,"terrainDepthTest",void 0),a([i()],r.prototype,"cullAboveTerrain",void 0),a([i()],r.prototype,"objectAndLayerIdColorInstanced",void 0),a([i()],r.prototype,"vvColor",void 0),a([i()],r.prototype,"draped",void 0);class Ie extends ne{constructor(e){super(e,de),this._configuration=new r,this.supportsEdges=!0,this.produces=new Map([[l.OPAQUE_MATERIAL,t=>this._isOpaqueMaterialPass(t)],[l.OPAQUE_MATERIAL_WITHOUT_NORMALS,t=>this._isOpaqueNoSSAODepthPass(t)],[l.TRANSPARENT_MATERIAL,t=>f(t)&&this._transparent&&this.parameters.writeDepth],[l.TRANSPARENT_MATERIAL_WITHOUT_NORMALS,t=>O(t)&&this._transparent&&this.parameters.writeDepth],[l.TRANSPARENT_MATERIAL_WITHOUT_DEPTH,t=>f(t)&&this._transparent&&!this.parameters.writeDepth],[l.DRAPED_MATERIAL,t=>J(t)]])}getConfiguration(e,t){return super.getConfiguration(e,t,this._configuration),this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasVertexColors=this.parameters.hasVertexColors&&!this.parameters.vvColor,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this._transparent,this._configuration.discardInvisibleFragments=this._transparent&&!this._isOpaquePass(e)&&this.parameters.discardInvisibleFragments,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.hasOccludees=t.hasOccludees,this._configuration.oitPass=t.oitPass,this._configuration.enableOffset=t.camera.relativeElevation<K,this._configuration.terrainDepthTest=t.terrainDepthTest&&g(e),this._configuration.cullAboveTerrain=t.cullAboveTerrain,this._configuration.vvColor=!!this.parameters.vvColor,this._configuration.draped=this.parameters.draped,this._configuration}get visible(){return this.parameters.color[3]>=X}get _transparent(){return this.parameters.color[3]<1||this.parameters.forceTransparentMode}_isOpaquePass(e){return this._isOpaqueMaterialPass(e)||this._isOpaqueNoSSAODepthPass(e)}_isOpaqueMaterialPass(e){return e===ee.Highlight||f(e)&&!this._transparent}_isOpaqueNoSSAODepthPass(e){return O(e)&&this.parameters.writeDepth&&!this._transparent}createGLMaterial(e){return new ce(e)}createBufferWriter(){const e=te().vec3f(p.POSITION);return re()&&e.vec4u8(p.OLIDCOLOR),this.parameters.vvColor?e.f32(p.COLORFEATUREATTRIBUTE):e.vec4u8(p.COLOR),new se(e)}}class ce extends oe{beginSlot(e){return this.getTechnique(ue,e)}}class de extends ae{constructor(){super(...arguments),this.color=ie,this.forceTransparentMode=!1,this.writeDepth=!0,this.hasVertexColors=!1,this.polygonOffset=!1,this.hasSlicePlane=!1,this.cullFace=v.None,this.draped=!1,this.discardInvisibleFragments=!1}}const fe=Object.freeze(Object.defineProperty({__proto__:null,build:I},Symbol.toStringTag,{value:"Module"}));export{Ie as A};
