import{s as n,n9 as m,na as v,nb as c,nc as g,nd as q,ne as h,nf as x,ng as y}from"./chunk-DadqOv6U.js";import"./chunk-CPKck_yD.js";function E(e,s){if(!e.view)throw new n(`${s}:missing-parameters`,"'view' parameter is required for binning");if(e.sqlExpression)throw new n(`${s}:invalid-parameters`,"'sqlExpression' parameter is not supported for binning");if(e.view.type==="3d")throw new n(`${s}:invalid-parameters`,"3d view is not supported for binning")}async function b(e){if(!e?.layer||!e.field&&!e.valueExpression)throw new n("unique-values:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");const s=e.valueExpression||e.sqlExpression,r=s&&!e.sqlExpression;if(s){if(r){if(!e.view)throw new n("unique-values:missing-parameters","View is required when 'valueExpression' is specified")}else if(!e.valueExpression)throw new n("unique-values:missing-parameters","'valueExpression' parameters are required")}e.forBinning&&E(e,"unique-values");const{layer:u,...f}=e,d=[...m,v.ImageryLayer],t=e.forBinning?c:d,a=g(u,t,e.forBinning);if(!a)throw new n("unique-values:invalid-parameters","'layer' must be one of these types: "+q(t).join(", "));const i={layerAdapter:a,...f},p=i.signal!=null?{signal:i.signal}:null;await a.load(p);const w=await h({field:i.field,field2:i.field2,field3:i.field3,valueExpression:i.valueExpression}),l=x(a,w,"unique-values:invalid-parameters");if(l)throw l;i.filter&&!i.filter.spatialRelationship&&(i.filter.spatialRelationship="intersects");const o=y(i.filter,"summary-statistics:invalid-parameters");if(o)throw o;return i}async function A(e){const{layerAdapter:s,...r}=await b(e);return s.uniqueValues(r)}export{A as default};
