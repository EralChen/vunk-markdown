import{bE as f,ie as c,eG as u}from"./chunk-XGpVqsM_.js";import{createMesh as l}from"./chunk-DirGMDoV.js";import"./chunk-DyqHK6XP.js";import"./chunk-Dix477Sg.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CrMA_peF.js";import"./chunk-DXi67G30.js";import"./chunk-C7gn2wxf.js";import"./chunk-Cj6q1fp6.js";import"./chunk-Bx7fkuVu.js";import"./chunk-cMC_YIeN.js";import"./chunk-DtU9Beb_.js";import"./chunk-jK6zzuUE.js";import"./chunk-F2mY9cXg.js";import"./chunk-pBCC0IDc.js";function ft(n,i){const m=new Array,p=f.fromJSON(i.spatialReference);for(const t of i.features){const r=t.metadata,o=c(t.geometry);if(!r||!o){m.push(null);continue}o.spatialReference=p;const a=o.extent,s=l({layerView:n,nodeIndex:r.meta.node.index,featureIndex:r.index,extent:a,spatialReference:p});m.push(s),t.geometry=null}const e=u.fromJSON(i);for(let t=0;t<e.features.length;t++){const r=e.features[t],o=m[t];r.geometry=o}return e}export{ft as processQueryGeometries};
