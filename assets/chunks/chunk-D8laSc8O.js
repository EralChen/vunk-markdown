import{db as p,dc as h,aC as c,dd as d,aF as u,aD as g,s as y,aG as m,de as f,df as b,ai as t,aj as i,al as v}from"./chunk-CET6Djna.js";import{l as w}from"./chunk-BwUWfCcM.js";import{l as S,r as E}from"./chunk-DCRL6LHV.js";import{x as G}from"./chunk-BpKEX4p6.js";import"./chunk-BoJEKryr.js";import"./chunk-BADwmne0.js";import"./chunk-EFWiA1C3.js";import"./chunk-CjLDnYWs.js";import"./chunk-7RLATxET.js";import"./chunk-BaeP0Xx2.js";import"./chunk-gMg-gRKd.js";import"./chunk-BJEGZeu-.js";let r=class extends w(b){constructor(){super(...arguments),this.type="graphics-3d",this.symbologySnappingSupported=!0,this._slicePlaneEnabled=!1,this.fullExtentInLocalViewSpatialReference=null,this.ignoresMemoryFactor=!0}get highlightOptions(){return null}initialize(){this._set("processor",new G({owner:this,scaleVisibilityEnabled:!0,frustumVisibilityEnabled:!0})),this.addResolvingPromise(this.processor.initializePromise),this.addHandles(this.layer.on("graphic-update",(e=>this.processor.graphicsCore.graphicUpdateHandler(e)))),this.layer.internal?this.notifyChange("updating"):(this.view.viewingMode==="local"&&this.addResolvingPromise((async()=>this.fullExtentInLocalViewSpatialReference=await p(this.layer.fullExtent,this.view.spatialReference))()),this.addHandles(h((()=>this.view?.basemapTerrain?.ready),(()=>()=>this.notifyChange("updating")),{once:!0})))}destroy(){this._updatingHandles.removeAll(),this._set("processor",c(this.processor))}get loadedGraphics(){return this.layer.graphics}get legendEnabled(){return this.canResume()&&!this.processor?.frustumVisibilitySuspended}get visibleAtCurrentScale(){return u()?d(this.layer.effectiveScaleRange,this.view.scale):!this.processor?.scaleVisibilitySuspended}get slicePlaneEnabled(){const e=this.layer.internal;return this._slicePlaneEnabled&&!e}set slicePlaneEnabled(e){this._slicePlaneEnabled=e}getSuspendInfo(){const e=super.getSuspendInfo();return e.outsideOfView=this.processor?.frustumVisibilitySuspended??!1,e}getHit(e){return this.processor.getHit(e)}whenGraphicBounds(e,s){return this.processor.whenGraphicBounds(e,s)}computeAttachmentOrigin(e,s){return this.processor?.computeAttachmentOrigin(e,s)}getSymbolLayerSize(e,s){return this.processor.getSymbolLayerSize(e,s)}queryGraphics(){return Promise.resolve(this.loadedGraphics)}maskOccludee(e){return this.processor.maskOccludee(e)}highlight(e,s){return this.processor.highlight(e,s?.name??g)}notifyContentGeometryUpdate(){this.emit("visible-geometry-changed")}async elevationAlignPointsInFeatures(e,s){const{processor:o}=this;if(o?.graphics3DGraphics==null)throw new y("graphicslayerview3d:missing-processor","A Graphics3D processor is needed to resolve graphics elevation.");const{graphics3DGraphics:n}=o,l=a=>typeof a=="number"?n.get(a):void 0;return S(this.view,this.layer,l,e,s)}async queryForSymbologySnapping(e,s){return E(this.processor,e,s)}get updatePolicy(){return this.processor?.graphicsCore.effectiveUpdatePolicy||m.SYNC}isUpdating(){return this.view&&this.layer&&!(!this.processor?.updating&&(this.layer.internal||this.view.basemapTerrain?.ready))}get performanceInfo(){return new f(this.usedMemory,this.loadedGraphics.length,-1,-1)}get usedMemory(){return this.processor?.graphicsCore?.usedMemory??0}get unloadedMemory(){return this.processor?.graphicsCore?.unprocessedMemoryEstimate}get test(){return{graphics3DProcessor:this.processor,loadedGraphics:this.loadedGraphics}}};t([i()],r.prototype,"highlightOptions",null),t([i()],r.prototype,"loadedGraphics",null),t([i({readOnly:!0})],r.prototype,"legendEnabled",null),t([i()],r.prototype,"layer",void 0),t([i({readOnly:!0})],r.prototype,"processor",void 0),t([i({readOnly:!0})],r.prototype,"visibleAtCurrentScale",null),t([i()],r.prototype,"_slicePlaneEnabled",void 0),t([i({type:Boolean})],r.prototype,"slicePlaneEnabled",null),r=t([v("esri.views.3d.layers.GraphicsLayerView3D")],r);const I=r;export{I as default};
