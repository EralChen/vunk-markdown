import{g$ as Y}from"./chunk-BLrLWCUc.js";import"./chunk-CWUYlh1e.js";import"./chunk-BDqMgIU1.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */var A={};A.defaultNoDataValue=Y(-1/0),A.decode=function(t,i){var o=(i=i||{}).encodedMaskData||i.encodedMaskData===null,e=D(t,i.inputOffset||0,o),p=i.noDataValue!=null?Y(i.noDataValue):A.defaultNoDataValue,n=F(e,i.pixelType||Float32Array,i.encodedMaskData,p,i.returnMask),l={width:e.width,height:e.height,pixelData:n.resultPixels,minValue:e.pixels.minValue,maxValue:e.pixels.maxValue,noDataValue:p};return n.resultMask&&(l.maskData=n.resultMask),i.returnEncodedMask&&e.mask&&(l.encodedMaskData=e.mask.bitset?e.mask.bitset:null),i.returnFileInfo&&(l.fileInfo=b(e,p),i.computeUsedBitDepths&&(l.fileInfo.bitDepths=S(e))),l};var F=function(t,i,o,e,p){var n,l,d=0,f=t.pixels.numBlocksX,k=t.pixels.numBlocksY,y=Math.floor(t.width/f),v=Math.floor(t.height/k),h=2*t.maxZError;o=o||(t.mask?t.mask.bitset:null),n=new i(t.width*t.height),p&&o&&(l=new Uint8Array(t.width*t.height));for(var c,g,x=new Float32Array(y*v),M=0;M<=k;M++){var B=M!==k?v:t.height%k;if(B!==0)for(var I=0;I<=f;I++){var s=I!==f?y:t.width%f;if(s!==0){var P,a,m,w,r=M*t.width*v+I*y,U=t.width-s,u=t.pixels.blocks[d];if(u.encoding<2?(u.encoding===0?P=u.rawData:(E(u.stuffedData,u.bitsPerPixel,u.numValidPixels,u.offset,h,x,t.pixels.maxValue),P=x),a=0):m=u.encoding===2?0:u.offset,o)for(g=0;g<B;g++){for(7&r&&(w=o[r>>3],w<<=7&r),c=0;c<s;c++)7&r||(w=o[r>>3]),128&w?(l&&(l[r]=1),n[r++]=u.encoding<2?P[a++]:m):(l&&(l[r]=0),n[r++]=e),w<<=1;r+=U}else if(u.encoding<2)for(g=0;g<B;g++){for(c=0;c<s;c++)n[r++]=P[a++];r+=U}else for(g=0;g<B;g++)if(n.fill)n.fill(m,r,r+s),r+=s+U;else{for(c=0;c<s;c++)n[r++]=m;r+=U}if(u.encoding===1&&a!==u.numValidPixels)throw"Block and Mask do not match";d++}}}return{resultPixels:n,resultMask:l}},b=function(t,i){return{fileIdentifierString:t.fileIdentifierString,fileVersion:t.fileVersion,imageType:t.imageType,height:t.height,width:t.width,maxZError:t.maxZError,eofOffset:t.eofOffset,mask:t.mask?{numBlocksX:t.mask.numBlocksX,numBlocksY:t.mask.numBlocksY,numBytes:t.mask.numBytes,maxValue:t.mask.maxValue}:null,pixels:{numBlocksX:t.pixels.numBlocksX,numBlocksY:t.pixels.numBlocksY,numBytes:t.pixels.numBytes,maxValue:t.pixels.maxValue,minValue:t.pixels.minValue,noDataValue:i}}},S=function(t){for(var i=t.pixels.numBlocksX*t.pixels.numBlocksY,o={},e=0;e<i;e++){var p=t.pixels.blocks[e];p.encoding===0?o.float32=!0:p.encoding===1?o[p.bitsPerPixel]=!0:o[0]=!0}return Object.keys(o)},D=function(t,i,o){var e={},p=new Uint8Array(t,i,10);if(e.fileIdentifierString=String.fromCharCode.apply(null,p),e.fileIdentifierString.trim()!="CntZImage")throw"Unexpected file identifier string: "+e.fileIdentifierString;i+=10;var n=new DataView(t,i,24);if(e.fileVersion=n.getInt32(0,!0),e.imageType=n.getInt32(4,!0),e.height=n.getUint32(8,!0),e.width=n.getUint32(12,!0),e.maxZError=n.getFloat64(16,!0),i+=24,!o)if(n=new DataView(t,i,16),e.mask={},e.mask.numBlocksY=n.getUint32(0,!0),e.mask.numBlocksX=n.getUint32(4,!0),e.mask.numBytes=n.getUint32(8,!0),e.mask.maxValue=n.getFloat32(12,!0),i+=16,e.mask.numBytes>0){var l=new Uint8Array(Math.ceil(e.width*e.height/8)),d=(n=new DataView(t,i,e.mask.numBytes)).getInt16(0,!0),f=2,k=0;do{if(d>0)for(;d--;)l[k++]=n.getUint8(f++);else{var y=n.getUint8(f++);for(d=-d;d--;)l[k++]=y}d=n.getInt16(f,!0),f+=2}while(f<e.mask.numBytes);if(d!==-32768||k<l.length)throw"Unexpected end of mask RLE encoding";e.mask.bitset=l,i+=e.mask.numBytes}else e.mask.numBytes|e.mask.numBlocksY|e.mask.maxValue||(l=new Uint8Array(Math.ceil(e.width*e.height/8)),e.mask.bitset=l);n=new DataView(t,i,16),e.pixels={},e.pixels.numBlocksY=n.getUint32(0,!0),e.pixels.numBlocksX=n.getUint32(4,!0),e.pixels.numBytes=n.getUint32(8,!0),e.pixels.maxValue=n.getFloat32(12,!0),i+=16;var v=e.pixels.numBlocksX,h=e.pixels.numBlocksY,c=v+(e.width%v>0?1:0),g=h+(e.height%h>0?1:0);e.pixels.blocks=new Array(c*g);for(var x=1e9,M=0,B=0;B<g;B++)for(var I=0;I<c;I++){var s=0,P=t.byteLength-i;n=new DataView(t,i,Math.min(10,P));var a={};e.pixels.blocks[M++]=a;var m=n.getUint8(0);if(s++,a.encoding=63&m,a.encoding>3)throw"Invalid block encoding ("+a.encoding+")";if(a.encoding!==2){if(m!==0&&m!==2){if(m>>=6,a.offsetType=m,m===2)a.offset=n.getInt8(1),s++;else if(m===1)a.offset=n.getInt16(1,!0),s+=2;else{if(m!==0)throw"Invalid block offset type";a.offset=n.getFloat32(1,!0),s+=4}if(x=Math.min(a.offset,x),a.encoding===1)if(m=n.getUint8(s),s++,a.bitsPerPixel=63&m,m>>=6,a.numValidPixelsType=m,m===2)a.numValidPixels=n.getUint8(s),s++;else if(m===1)a.numValidPixels=n.getUint16(s,!0),s+=2;else{if(m!==0)throw"Invalid valid pixel count type";a.numValidPixels=n.getUint32(s,!0),s+=4}}var w;if(i+=s,a.encoding!=3){if(a.encoding===0){var r=(e.pixels.numBytes-1)/4;if(r!==Math.floor(r))throw"uncompressed block has invalid length";w=new ArrayBuffer(4*r),new Uint8Array(w).set(new Uint8Array(t,i,4*r));for(var U=new Float32Array(w),u=0;u<U.length;u++)x=Math.min(x,U[u]);a.rawData=U,i+=4*r}else if(a.encoding===1){var V=Math.ceil(a.numValidPixels*a.bitsPerPixel/8),X=Math.ceil(V/4);w=new ArrayBuffer(4*X),new Uint8Array(w).set(new Uint8Array(t,i,V)),a.stuffedData=new Uint32Array(w),i+=V}}}else i++,x=Math.min(x,0)}return e.pixels.minValue=x,e.eofOffset=i,e},E=function(t,i,o,e,p,n,l){var d,f,k,y=(1<<i)-1,v=0,h=0,c=Math.ceil((l-e)/p),g=4*t.length-Math.ceil(i*o/8);for(t[t.length-1]<<=8*g,d=0;d<o;d++){if(h===0&&(k=t[v++],h=32),h>=i)f=k>>>h-i&y,h-=i;else{var x=i-h;f=(k&y)<<x&y,f+=(k=t[v++])>>>(h=32-x)}n[d]=f<c?e+f*p:l}return n};const T=A.decode;class O{_decode(i){const o=T(i.buffer,i.options);return Promise.resolve({result:o,transferList:[o.pixelData.buffer]})}}function Be(){return new O}export{Be as default};
