import{s as N,A as w,ab as l,b7 as p,aa as S,a9 as h}from"./chunk-Bj5pIyxE.js";import{i as I}from"./chunk-BZU3Y9z2.js";import{l as f,u as d,a as g,s as v,i as M,o as T,e as C}from"./chunk-BqMACj0I.js";import"./chunk-C39j8-it.js";import"./chunk-DJw_0V8B.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-SqlbPPT2.js";async function xe(e){let{portalItem:r}=e;!r||r instanceof w||(r=new w(r));const t=await G(r);return new t.constructor({portalItem:r,...t.properties})}async function G(e){await e.load();const r=new C;return b(await P(e,r))}async function P(e,r){switch(e.type){case"3DTiles Service":return e.typeKeywords.includes("3DObject")?x():k();case"CSV":return $();case"Feature Collection":return j(e);case"Feature Service":return K(e,r);case"Feed":return B();case"GeoJson":return J();case"Group Layer":return H();case"Image Service":return D(e,r);case"KML":return U();case"Knowledge Graph Layer":return A();case"Map Service":return F(e,r);case"Media Layer":return Q();case"Scene Service":return W(e,r);case"Stream Service":return O();case"Vector Tile Service":return V();case"WCS":return R();case"WFS":return E();case"WMS":return q();case"WMTS":return z();default:throw new N("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function b(e){const r=e.className,t=h[r];return{constructor:await t(),properties:e.properties}}async function F(e,r){return await X(e,r)?{className:"TileLayer"}:{className:"MapImageLayer"}}async function K(e,r){const t=await L(e,r);if(typeof t=="object"){const{sourceJSON:a,className:n}=t,c={sourceJSON:a};return t.id!=null&&(c.layerId=t.id),{className:n||"FeatureLayer",properties:c}}return{className:"GroupLayer"}}async function W(e,r){const t=await L(e,r,async()=>{try{if(!e.url)return[];const{serverUrl:a}=await S(e.url,{sceneLayerItem:e});return(await r.fetchServiceMetadata(a))?.tables??[]}catch{return[]}});if(typeof t=="object"){const a={};let n;if(t.id!=null?(a.layerId=t.id,n=`${e.url}/layers/${t.id}`):n=e.url,e.typeKeywords?.length){for(const s of Object.keys(l))if(e.typeKeywords.includes(s))return{className:l[s]}}const c=await r.fetchServiceMetadata(n,{customParameters:await r.fetchCustomParameters(e,s=>f(s)?.customParameters)});return{className:l[c?.layerType]||"SceneLayer",properties:a}}return t===!1&&(await r.fetchServiceMetadata(e.url))?.layerType==="Voxel"?{className:"VoxelLayer"}:{className:"GroupLayer"}}async function j(e){await e.load();const r=p(e,"Map Notes"),t=p(e,"Markup");if(r||t)return{className:"MapNotesLayer"};if(p(e,"Route Layer"))return{className:"RouteLayer"};const a=await e.fetchData();return d(a)===1?{className:"FeatureLayer"}:{className:"GroupLayer"}}async function D(e,r){await e.load();const t=e.typeKeywords?.map(m=>m.toLowerCase())??[];if(t.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(t.includes("tiled imagery"))return{className:"ImageryTileLayer"};const a=await r.fetchItemData(e),n=a?.layerType;if(n==="ArcGISTiledImageServiceLayer")return{className:"ImageryTileLayer"};if(n==="ArcGISImageServiceLayer")return{className:"ImageryLayer"};const c=await r.fetchServiceMetadata(e.url,{customParameters:await r.fetchCustomParameters(e)}),s=c.cacheType?.toLowerCase(),u=c.capabilities?.toLowerCase().includes("tilesonly"),i=c.tileInfo?.format?.toLowerCase()??"",o=s==null&&["jpg","jpeg","png","png8","png24","png32","mixed"].includes(i);return s==="map"||o||u?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}function O(){return{className:"StreamLayer"}}function V(){return{className:"VectorTileLayer"}}function J(){return{className:"GeoJSONLayer"}}function k(){return{className:"IntegratedMesh3DTilesLayer"}}function x(){return{className:"UnsupportedLayer"}}function $(){return{className:"CSVLayer"}}function U(){return{className:"KMLLayer"}}function A(){return{className:"KnowledgeGraphLayer"}}function R(){return{className:"WCSLayer"}}function E(){return{className:"WFSLayer"}}function q(){return{className:"WMSLayer"}}function z(){return{className:"WMTSLayer"}}function B(){return{className:"StreamLayer"}}function H(){return{className:"GroupLayer"}}function Q(){return{className:"MediaLayer"}}async function X(e,r){const{tileInfo:t}=await r.fetchServiceMetadata(e.url,{customParameters:await r.fetchCustomParameters(e)});return t}async function L(e,r,t){const{url:a,type:n}=e,c=n==="Feature Service";if(!a)return{};if(/\/\d+$/.test(a)){if(c){const i=await r.fetchServiceMetadata(a,{customParameters:await r.fetchCustomParameters(e,o=>f(o)?.customParameters)});return{id:i.id,className:I(i.type),sourceJSON:i}}return{}}await e.load();let s=await r.fetchItemData(e);if(c){const i=await g(s,a,r),o=y(i);if(typeof o=="object"){const m=v(i,o.id);o.className=M(m?.layerType)}return o}if(n==="Scene Service"&&(s=await T(e,s,r)),d(s)>0)return y(s);const u=await r.fetchServiceMetadata(a);return t&&(u.tables=await t()),y(u)}function y(e){return d(e)===1&&{id:f(e)?.id}}export{xe as fromItem,P as selectLayerClassPath};
