import{av as s,aw as n,ax as l,ar as o,as as p,au as d}from"./chunk-mH00GGPN.js";import{d as g}from"./chunk-DrVW-jEb.js";import"./chunk-Crt2IEHJ.js";import"./chunk-D3Fu2eSY.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-SqlbPPT2.js";let r=class extends g{get updating(){return this._watchUpdatingTracking?.updating??!1}constructor(i){super(i),this._watchUpdatingTracking=new s}initialize(){const{featureTiles:i}=this.view;this.addHandles(i.addClient()),this._watchUpdatingTracking.addOnCollectionChange(()=>i?.tiles,()=>this.update(),n)}destroy(){this._watchUpdatingTracking.destroy()}getTiles(){const i=t=>{const[e,a,m]=t.lij;return l.fromExtent(this.view.featureTiles.tilingScheme.getExtentGeometry(e,a,m))};return this.view.featureTiles.tiles.toArray().sort((t,e)=>t.loadPriority-e.loadPriority).map(t=>({...t,level:t.level,geometry:i(t)}))}};o([p()],r.prototype,"_watchUpdatingTracking",void 0),o([p()],r.prototype,"updating",null),o([p()],r.prototype,"view",void 0),r=o([d("esri.views.3d.layers.support.FeatureTileTree3DDebugger")],r);export{r as FeatureTileTree3DDebugger};
