import{fR as u,P as n,fS as f,fT as h,fU as l}from"./chunk-CxUoqtmM.js";import"./chunk-BU9ye7sd.js";import"./chunk-RlmIMeXG.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */function y(i){const t=i.toJSON();return t.attachmentTypes&&(t.attachmentTypes=t.attachmentTypes.join(",")),t.keywords&&(t.keywords=t.keywords.join(",")),t.globalIds&&(t.globalIds=t.globalIds.join(",")),t.objectIds&&(t.objectIds=t.objectIds.join(",")),t.size&&(t.size=t.size.join(",")),t.orderByFields&&(t.orderByFields=t.orderByFields.join(",")),t}function rt(i,t){const o={};for(const e of t){const{parentObjectId:r,parentGlobalId:m,attachmentInfos:p}=e;for(const a of p){const{id:c}=a,d=f(h(`${i.path}/${r}/attachments/${c}`)),s=l.fromJSON(a);s.set({url:d,parentObjectId:r,parentGlobalId:m}),o[r]?o[r].push(s):o[r]=[s]}}return o}function et(i,t,o){let e={query:u({...i.query,f:"json",...y(t)})};return o&&(e={...o,...e,query:{...o.query,...e.query}}),n(i.path+"/queryAttachments",e).then(r=>r.data.attachmentGroups)}async function it(i,t,o){const{objectIds:e}=t,r=[];for(const m of e)r.push(n(i.path+"/"+m+"/attachments",o));return Promise.all(r).then(m=>e.map((p,a)=>({parentObjectId:p,attachmentInfos:m[a].data.attachmentInfos})))}export{et as executeAttachmentQuery,it as fetchAttachments,rt as processAttachmentQueryResult};
