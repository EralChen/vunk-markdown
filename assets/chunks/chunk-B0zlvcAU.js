import{t as e,o as a,u as n}from"./chunk-CZxoR2gg.js";import{fromGeometry as m,toGeometry as i,fromGeometries as s}from"./chunk-Beo1G9ij.js";import"./chunk-B92kdZ15.js";import"./chunk-BALWqwPe.js";import"./chunk-Bqy7h3UV.js";import"./chunk-CxUoqtmM.js";import"./chunk-BU9ye7sd.js";import"./chunk-RlmIMeXG.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */function tt(r){const t=m(r),o=t.getSpatialReference();return i(e(t.getGeometry(),o,!1),o)}function rt(r){const[t,o]=s(r);return a(t,o,!1).map(p=>i(p,o))}function ot(r){const t=m(r);return n(t.getGeometry(),t.getSpatialReference(),!1)}export{tt as execute,rt as executeMany,ot as isSimple};
