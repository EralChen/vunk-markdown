import{g8 as X,o9 as Y,GF as Z,GG as oo,Eh as to,qn as ro,fH as eo,ga as io,DP as po}from"./chunk-Cpdp9qXA.js";import"./chunk-BIY0MvRL.js";import"./chunk-DKLxNM5h.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */function a(i){const{options:o,value:r}=i;return typeof o[r]=="number"}function Q(i){let o="";for(const r in i){const t=i[r];if(typeof t=="boolean")t&&(o+=`#define ${r}
`);else if(typeof t=="number")o+=`#define ${r} ${t.toFixed()}
`;else if(typeof t=="object")if(a(t)){const{value:e,options:p,namespace:m}=t,n=m?`${m}_`:"";for(const f in p)o+=`#define ${n}${f} ${p[f].toFixed()}
`;o+=`#define ${r} ${n}${e}
`}else{const e=t.options;let p=0;for(const m in e)o+=`#define ${e[m]} ${(p++).toFixed()}
`;o+=`#define ${r} ${e[t.value]}
`}}return o}export{X as BufferObject,Y as FramebufferObject,Z as Program,oo as ProgramCache,to as Renderbuffer,ro as ShaderCompiler,eo as Texture,io as VertexArrayObject,po as createProgram,Q as glslifyDefineMap};
