import{d7 as A,dw as Q,hA as v,aO as X,sG as D,sH as E,eO as h,H as f,n as p,jV as Y,sI as Z,sJ as ee,sK as se,sL as te,sM as oe,sN as re,sO as ne,B as ae,jX as ie,sP as ce,sQ as I,bE as pe,sR as le,sS as ue,sT as me,gW as fe,dT as de,jK as ge,sU as he,sV as ye,A as we}from"./chunk-XGpVqsM_.js";import{f as Pe,b as Te,y as be,i as _,n as x}from"./chunk-pBCC0IDc.js";import{i as Ae,n as ve}from"./chunk-D-KuCUP4.js";import"./chunk-DyqHK6XP.js";import"./chunk-Dix477Sg.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CrMA_peF.js";const $={uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};function y(t,e=o=>{},s){return new $e(t,e,s)}let $e=class{constructor(e,s=r=>{},o){if(this.onProgress=s,this.taskName=o,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,typeof e=="number"){this._weights={};for(let r=0;r<e;r++){const n=r,a=1/e;this._weights[n]=a,this._progressMap.set(n,0)}}else this._weights=e;this.emitProgress()}emitProgress(){let e=0;for(const[s,o]of this._progressMap.entries())e+=o*this._weights[s];if(e===1&&A("enable-feature:esri-3dofl-upload-timings")){const s=Math.round(performance.now()-(this._startTime??0))/1e3;console.log(`${this.taskName} done in ${s} sec`);for(const[o,r]of this._timingsMap){const n=Math.round(r.end-r.start)/1e3,a=Math.round(n/s*100);console.log(this.taskName??"Task",{stepKey:o,stepTime:n,relativeTime:a})}}this.onProgress(e)}setProgress(e,s){if(this._progressMap.set(e,s),A("enable-feature:esri-3dofl-upload-timings")){const o=performance.now();this._startTime??=o;const r=Q(this._timingsMap,e,(()=>({start:o,end:0})));s===1&&(r.end=o)}this.emitProgress()}simulate(e,s){return R((o=>this.setProgress(e,o)),s)}makeOnProgress(e){return s=>this.setProgress(e,s)}};function R(t=s=>{},e=De){const s=performance.now();t(0);const o=setInterval((()=>{const r=performance.now()-s,n=1-Math.exp(-r/e);t(n)}),Ne);return X((()=>{clearInterval(o),t(1)}))}function je(t,e=Fe){return D(E(t*O/e))}function Me(t,e=Se){return D(E(t*O/e))}const Fe=10,Se=10,O=8e-6,Ne=v(50),De=v(1e3),k=1e6,N=20*k,Ee=2e9,Ie=3;async function _e({data:t,name:e,description:s},o,r){let n=null;try{const a=h(o,"uploads"),i=h(a,"info"),{data:l}=await f(i,{query:{f:"json"},responseType:"json"});p(r);const d=Y(o),g=l.maxUploadFileSize*k,m=d?Ee:g,c=d?Math.min(N,g):N;if(t.size>m)throw new Error("Data too large");const z=h(a,"register"),{data:j}=await f(z,{query:{f:"json",itemName:xe(e),description:s},responseType:"json",method:"post"});if(p(r),!j.success)throw new Error("Registration failed");const{itemID:L}=j.item;n=h(a,L);const H=h(n,"uploadPart"),M=Math.ceil(t.size/c),w=new Array;for(let u=0;u<M;++u)w.push(t.slice(u*c,Math.min((u+1)*c,t.size)));const P=w.slice().reverse(),F=new Array,G=y(M,r?.onProgress,"uploadItem"),J=async()=>{for(;P.length!==0;){const u=w.length-P.length,T=P.pop(),b=new FormData,V=G.simulate(u,je(T.size));try{b.append("f","json"),b.append("file",T),b.append("partId",`${u}`);const{data:W}=await f(H,{timeout:0,body:b,responseType:"json",method:"post"});if(p(r),!W.success)throw new Error("Part upload failed")}finally{V.remove()}}};for(let u=0;u<Ie&&P.length!==0;++u)F.push(J());await Promise.all(F);const K=h(n,"commit"),{data:S}=await f(K,{query:{f:"json",parts:w.map(((u,T)=>T)).join(",")},responseType:"json",method:"post"});if(p(r),!S.success)throw new Error("Commit failed");return S.item}catch(a){if(n!=null){const i=h(n,"delete");await f(i,{query:{f:"json"},responseType:"json",method:"post"})}throw a}}function xe(t){return t.replaceAll("/","_").replaceAll("\\","_")}async function Gs(t,e,s){const o=t.length;if(!o)return s?.onProgress?.(1),[];const r=y(o,s?.onProgress,"uploadAssets");return Promise.all(t.map(((n,a)=>Re(n,e,{...s,onProgress:r.makeOnProgress(a)}))))}async function Re(t,{layer:e,ongoingUploads:s},o){const r=s.get(t);if(r)return r;if(!Ze(e))throw new Z;if(Oe(t,e))return o?.onProgress?.(1),t;const n=ke(t,e,o);s.set(t,n);try{await n}finally{s.delete(t)}return t}function Oe(t,e){const{parsedUrl:s}=e;return s!=null&&t.metadata.externalSources.some((o=>Pe(o,s)))}async function ke(t,e,s){const{metadata:o}=t,{displaySource:r}=o,n=C(r?.source,e,{checkForConversionRequired:A("enable-feature:georeferenced-uploads")}),a=n!=null?Ce(n,e,s):o.externalSources.length>0?Ue(t,e,s):Be(t,e,s),i=await a;return p(s),t.addExternalSources([i]),t}async function Ce(t,e,s){return{source:{type:"service",assets:await U(t,e,s)},original:!0,unitConversionDisabled:!0}}async function Ue(t,e,s){const o=q(e),{externalSources:r}=t.metadata,n=ze(r,e);if(!n)throw new te;const a=y($.uploadConvertibleSource,s?.onProgress,"uploadConvertibleSource"),i={type:"service",assets:await U(n,e,{onProgress:a.makeOnProgress("uploadEditSource")})};t.addExternalSources([{source:i,original:!0}]);const l=n.reduce(((g,{asset:m})=>m instanceof File?g+m.size:g),0),d=a.simulate("serviceAssetsToGlb",Me(l));try{const{source:g,transform:m,origin:c}=await We(i,e,o);return t.transform=m,c&&(t.metadata.georeferenced=!0,s?.useAssetOrigin&&(t.vertexSpace.origin=[c.x,c.y,c.z??0],t.spatialReference=c.spatialReference)),{source:g,unitConversionDisabled:!0}}finally{d.remove()}}async function Be(t,e,s){const o=y($.uploadLocalMesh,s?.onProgress,"uploadLocalMesh"),r=qe(t,e,{...s,onProgress:o.makeOnProgress("meshToAssetBlob")});return{source:{type:"service",assets:await B([r],e,{...s,onProgress:o.makeOnProgress("uploadAssetBlobs")})},extent:t.extent.clone(),original:!0}}async function qe(t,e,s){const o=q(e),r=await t.load(s),n=await r.toBinaryGLTF({origin:r.origin,signal:s?.signal,ignoreLocalTransform:!0,unitConversionDisabled:!0});return p(s),{blob:new Blob([n],{type:"model/gltf-binary"}),assetName:`${ae()}.glb`,assetType:o}}function ze(t,e){for(const s of t){const o=C(s.source,e);if(o)return o}return null}function C(t,{infoFor3D:e},s={}){if(!t)return null;const o=Te(t);if(!o)return null;const{supportedFormats:r,editFormats:n}=e,a=new Array,i=ee(e),l=se(e);let d=!1;for(const g of o){const m=Le(g,r);if(!m)return null;const{assetType:c}=m;if(s.checkForConversionRequired&&(c===i||c===l))return null;n.includes(c)&&(d=!0),a.push(m)}return d?a:null}function Le(t,e){const s=be(t,e);return s?{asset:t,assetType:s}:null}async function U(t,e,s){return B(t.map((o=>He(o,s))),e,s)}async function B(t,e,s){const o=y($.uploadAssetBlobs,s?.onProgress,"uploadAssetBlobs"),r=await Je(t,e,{...s,onProgress:o.makeOnProgress("prepareAssetItems")});p(s);const n=r.map((({item:i})=>i)),{uploadResults:a}=await Ke(n,e,{...s,onProgress:o.makeOnProgress("uploadAssetItems")});return p(s),t.map(((i,l)=>Ve(r[l],a[l],e)))}async function He(t,e){const{asset:s,assetType:o}=t;if(s instanceof File)return{blob:s,assetName:s.name,assetType:o};const r=await s.toBlob(e);return p(e),{blob:r,assetName:s.assetName,assetType:o}}async function Ge(t,e,s){const{blob:o,assetType:r,assetName:n}=t;let a=null;try{const i=await _e({data:o,name:n},e.url,s);p(s),a={assetType:r,assetUploadId:i.itemID}}catch(i){de(i),es().warnOnce(`Service ${e.url} does not support the REST Uploads API.`)}if(!a){const i=await ge(o);if(p(s),!i.isBase64)throw new he;a={assetType:r,assetData:i.data}}if(!a)throw new ye;return{item:a,assetName:n}}function Je(t,e,s){const o=y(t.length,s?.onProgress,"prepareAssetItems");return Promise.all(t.map((async(r,n)=>{const a=Ge(await r,e,{...s,onProgress:o.makeOnProgress(n)});return p(s),a})))}async function Ke(t,e,s){const o=R(s?.onProgress);try{const r=await f(h(e.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(t)},method:"post",responseType:"json"});if(p(s),r.data.uploadResults.length!==t.length)throw new ue(t.length,r.data.uploadResults.length);return r.data}finally{o.remove()}}function Ve(t,e,s){const{success:o}=e;if(!o){const{error:d}=e;throw new me(t.assetName,d)}const{assetHash:r}=e,{assetName:n,item:{assetType:a}}=t,{infoFor3D:{supportedFormats:i}}=s,l=fe(a,i);if(!l)throw new I(a);return new _(n,l,[new x(`${s.parsedUrl.path}/assets/${r}`,r)])}async function We({assets:t},e,s){const o=t.map((({assetName:n,parts:a})=>({assetName:n,assetHash:a[0].partHash})));let r;try{const n=h(e.parsedUrl.path,"convert3D"),a=e.capabilities?.operations.supportsAsyncConvert3D;r=(await(a?Ye:Xe)(n,{query:{f:"json",assets:JSON.stringify(o),transportType:"esriTransportTypeUrl",targetFormat:s,async:a},responseType:"json",timeout:0})).data}catch{throw new ne}return Qe(e,r)}function Qe(t,e){const s={source:{type:"service",assets:e.assets.map((o=>{const r=ce(o.contentType,t.infoFor3D.supportedFormats);if(!r)throw new I(r);return new _(o.assetName,o.contentType,[new x(o.assetURL,o.assetHash)])}))},origin:void 0,transform:void 0};if(A("enable-feature:georeferenced-uploads")&&e.transform){if(s.transform=Ae(e.transform),e.spatialReference){const o=pe.fromJSON(e.spatialReference);s.origin=ve(e.transform,o)}}else s.transform=le(t.spatialReference);return s}function Xe(t,e){return f(t,e)}async function Ye(t,e){const s=(await f(t,e)).data.statusUrl;for(;;){const o=(await f(s,{query:{f:"json"},responseType:"json"})).data;switch(o.status){case"Completed":return f(o.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(o.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await ie(ss)}}function Ze(t){return!!t.infoFor3D&&!!t.url}function q({infoFor3D:t}){const e=oe(t);if(!e)throw new re;return e}function es(){return we.getLogger("esri.layers.graphics.sources.support.uploadAssets")}const ss=v(1e3);export{Gs as uploadAssets};
