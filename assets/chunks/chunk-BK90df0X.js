import{i2 as g,df as w,aJ as h,aq as n,eF as f,V as u,eH as d,eG as V,i9 as m,ai as b,al as S}from"./chunk-CET6Djna.js";import{t as _}from"./chunk-Ciwv7MKQ.js";import{O as T}from"./chunk-CA6diaKY.js";import"./chunk-BoJEKryr.js";import"./chunk-DpafT5mc.js";import"./chunk-DELXsNEy.js";import"./chunk-CEplUXYF.js";import"./chunk-jduAaT_8.js";import"./chunk-DjXKmJgq.js";import"./chunk-DvpRAiWy.js";import"./chunk-QXap_35O.js";import"./chunk-LAsmWdb2.js";import"./chunk-CUzevAry.js";import"./chunk-D0O1cXCS.js";import"./chunk-BFLErLYb.js";import"./chunk-CjHvAPdT.js";import"./chunk-CKwt2uXH.js";import"./chunk-Xp1DVuOB.js";import"./chunk-BepYVpnq.js";import"./chunk-77tOcGGO.js";import"./chunk-aGeVxf8w.js";import"./chunk-B_IOha9r.js";let y=class extends g(w){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(e,r){if(!this.graphicsViews.length)return null;const s=this.layer;return this.graphicsViews.reverse().flatMap((t=>{const i=this._popupTemplates.get(t),a=t.hitTest(e);for(const o of a)o.layer=s,o.sourceLayer=s,o.popupTemplate=i;return a})).map((t=>({type:"graphic",graphic:t,layer:s,mapPoint:e})))}update(e){if(this.graphicsViews)for(const r of this.graphicsViews)r.processUpdate(e)}attach(){this.addAttachHandles([h((()=>this.layer?.featureCollections),(e=>{this._clear();for(const{popupInfo:r,featureSet:s,layerDefinition:t}of e){const i=f.fromJSON(s),a=new u(i.features),o=t.drawingInfo,c=r?d.fromJSON(r):null,p=V(o.renderer),l=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:a,renderer:p,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=l,this._popupTemplates.set(l,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=p.symbol):this.layer.lineSymbol=p.symbol:this.layer.polygonSymbol=p.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}}),n),h((()=>this.layer?.polygonSymbol),(e=>{this._graphicsViewMap.polygon.renderer=new m({symbol:e})}),n),h((()=>this.layer?.lineSymbol),(e=>{this._graphicsViewMap.polyline.renderer=new m({symbol:e})}),n),h((()=>this.layer?.pointSymbol),(e=>{this._graphicsViewMap.point.renderer=new m({symbol:e})}),n)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}_clear(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=b([S("esri.views.2d.layers.GeoRSSLayerView2D")],y);const z=y;export{z as default};
