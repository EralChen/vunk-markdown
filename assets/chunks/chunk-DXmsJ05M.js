import{as as k,f4 as u,mZ as O,m_ as _,c4 as $,m$ as T,n0 as D,n1 as m,aj as r,ak as o,am as v,b3 as b,aO as y,aD as C,n2 as S}from"./chunk-XGpVqsM_.js";import{F as M,u as g,v as x,k as I,b as V,a as U,U as z}from"./chunk-DEP_rzmr.js";import{n as W}from"./chunk-Qdx-kEuS.js";import"./chunk-DyqHK6XP.js";import"./chunk-Dix477Sg.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CrMA_peF.js";import"./chunk-CZj_ytiT.js";import"./chunk-BUVSeX7E.js";import"./chunk-DSTRjkE3.js";import"./chunk-Da9IW-EP.js";import"./chunk-RvJNgVq9.js";import"./chunk-B92kdZ15.js";import"./chunk-DP7_WWTp.js";import"./chunk-DSo0DT4y.js";import"./chunk-DjrwEoDI.js";import"./chunk-BA-rBJU6.js";import"./chunk-DpmArOPE.js";import"./chunk-DmxaQ-k8.js";import"./chunk-DT0jUPU1.js";import"./chunk-iMNAGB-I.js";import"./chunk-BaoKPrO7.js";import"./chunk-lR2hMWGP.js";import"./chunk-BvErJF1S.js";import"./chunk-Cic-v0rn.js";let i=class extends k{constructor(t){super(t),this.coordinates=void 0,this.strokeDash=[],this.strokeWidth=1,this.strokeColor=[0,0,0,1],this.strokeDashColor=[255,255,255,1],this.fillColor=[0,0,0,0],this.visible=!0,this.isDecoration=!0}get _strokeStyle(){const t=this.strokeColor;return`rgba(${t[0]}, ${t[1]}, ${t[2]}, ${t[3]})`}get _strokeBackgroundStyle(){const t=this.strokeDashColor;return`rgba(${t[0]}, ${t[1]}, ${t[2]}, ${t[3]})`}get _fillStyle(){const t=this.fillColor;return`rgba(${t[0]}, ${t[1]}, ${t[2]}, ${t[3]})`}get _renderCoordinates(){const t=[];if(!this.coordinates)return{coordinates:t,rect:u};const e=O(_($(u),this.coordinates),2*this.strokeWidth);e[0]=Math.floor(e[0]),e[1]=Math.floor(e[1]),e[2]=Math.ceil(e[2]+.5),e[3]=Math.ceil(e[3]+.5);for(const a of this.coordinates)t.push([Math.floor(a[0]-e[0])+.5,Math.floor(a[1]-e[1])+.5]);return t.reverse(),{coordinates:t,rect:e}}render(){const{coordinates:t,rect:e}=this._renderCoordinates,a=T(e),n=D(e);return m("div",{classes:{"esri-outline-overlay-item":!0},styles:{left:e[0]+"px",top:e[1]+"px",width:a+"px",height:n+"px",visibility:this.visible?"visible":"hidden"}},m("svg",{height:n,styles:{display:"block"},width:a},m("polygon",{fill:this._fillStyle,points:t.map((([l,p])=>`${l},${p}`)).join(" "),stroke:this._strokeBackgroundStyle,"stroke-width":this.strokeWidth}),m("polygon",{fill:"transparent",points:t.map((([l,p])=>`${l},${p}`)).join(" "),stroke:this._strokeStyle,"stroke-dasharray":this.strokeDash.length?this.strokeDash.join(" "):void 0,"stroke-width":this.strokeWidth})))}renderCanvas(){}};r([o()],i.prototype,"coordinates",void 0),r([o()],i.prototype,"strokeDash",void 0),r([o()],i.prototype,"strokeWidth",void 0),r([o()],i.prototype,"strokeColor",void 0),r([o()],i.prototype,"strokeDashColor",void 0),r([o()],i.prototype,"fillColor",void 0),r([o()],i.prototype,"visible",void 0),r([o()],i.prototype,"isDecoration",void 0),r([o({readOnly:!0})],i.prototype,"_strokeStyle",null),r([o({readOnly:!0})],i.prototype,"_strokeBackgroundStyle",null),r([o({readOnly:!0})],i.prototype,"_fillStyle",null),r([o({readOnly:!0})],i.prototype,"_renderCoordinates",null),i=r([v("esri.views.overlay.OutlineOverlayItem")],i);let s=class extends b.EventedMixin(W){constructor(t){super(t),this.drawOperation=null,this._overlayItem=void 0,this.geometryType=null,this.mode=null,this.type="draw-screen"}initialize(){this.drawOperation=this._makeDrawOperation();const t=e=>this.drawOperation?.on(e,(a=>{this._updateVisuals(),this.emit(e,a)}))??y();this.addHandles([t("vertex-add"),t("vertex-remove"),t("vertex-update"),t("cursor-update"),t("complete")]),this.finishToolCreation()}destroy(){this.drawOperation=C(this.drawOperation),this._set("view",null)}get canRedo(){return!!this.drawOperation?.canRedo}get canUndo(){return!!this.drawOperation?.canUndo}set centeredToggled(t){this._set("centeredToggled",t),this._updateVisuals()}set enabled(t){const{drawOperation:e}=this;e&&(e.interactive=t),this._set("enabled",t)}set uniformSizeToggled(t){this._set("uniformSizeToggled",t),this._updateVisuals()}get updating(){return this.drawOperation?.updating??!1}get cursor(){return this._get("cursor")??"crosshair"}set cursor(t){this._set("cursor",t);const{drawOperation:e}=this;e&&(e.cursor=t)}completeCreateOperation(){this.drawOperation?.complete()}onInputEvent(t){this.destroyed||this.drawOperation?.onInputEvent(t)}redo(){this.drawOperation?.redo()}undo(){this.drawOperation?.undo()}reset(){}_makeDrawOperation(){const{view:t}=this;return new M({view:t,manipulators:this.manipulators,geometryType:j(this.geometryType),drawingMode:this.mode,hasZ:!1,defaultZ:0,snapToSceneEnabled:!1,drawSurface:new g,hasM:!1,snappingManager:null,snappingVisualizer:null,graphic:null,cursor:this.cursor,automaticLengthMeasurementUtils:this.automaticLengthMeasurementUtils})}get coordinates(){const{drawOperation:t}=this;if(!t?.geometryIncludingUncommittedVertices.length)return[];const{coordinateHelper:e}=t,a=t.committableVertex,n=t.committedVertices.slice();a!=null&&n.push(e.pointToArray(a));const l=n.length;switch(this.geometryType){case"point":return n.slice(0,1);case"circle":case"rectangle":{const p=new x(S,g.spatialReference),c=this.geometryType==="circle"?I:V,w=this.geometryType==="circle"?U:z;if(l===1&&t.isCompleted){const d=n[0],h=p.makeMapPoint(d[0]+E,d[1]);return c([d,h],p,!0)?.geometry.rings[0]??[]}if(l===2){const d=this.geometryType!=="rectangle",h=this.centeredToggled!==d,f=this.geometryType!=="rectangle";return(this.uniformSizeToggled!==f?c(n,p,h)?.geometry.rings[0]:w(n,p,h)?.geometry.rings[0])??[]}return[]}}return n}_updateVisuals(){if(!this._overlayItem){const t=new i({strokeDash:[5],strokeDashColor:[255,255,255,255]});this.view.overlay?.addItem(t),this.addHandles(y((()=>{this.view.overlay?.removeItem(t),t?.destroy(),this._overlayItem=void 0}))),this._overlayItem=t}this._overlayItem.coordinates=this.coordinates}onDeactivate(){this.drawOperation?.isCompleted||this.drawOperation?.cancel()}};function j(t){switch(t){case"polygon":case"point":return t;case"circle":case"rectangle":return"segment"}}r([o({value:!1})],s.prototype,"centeredToggled",null),r([o()],s.prototype,"drawOperation",void 0),r([o({value:!0})],s.prototype,"enabled",null),r([o({value:!1})],s.prototype,"uniformSizeToggled",null),r([o({constructOnly:!0})],s.prototype,"geometryType",void 0),r([o({constructOnly:!0})],s.prototype,"mode",void 0),r([o({readOnly:!0})],s.prototype,"type",void 0),r([o({readOnly:!0})],s.prototype,"updating",null),r([o({constructOnly:!0,nonNullable:!0})],s.prototype,"view",void 0),r([o({constructOnly:!0})],s.prototype,"automaticLengthMeasurementUtils",void 0),r([o()],s.prototype,"cursor",null),s=r([v("esri.views.draw.DrawScreenTool")],s);const E=48;export{s as DrawScreenTool,j as geometryTypeToDrawOperationGeometryType};
