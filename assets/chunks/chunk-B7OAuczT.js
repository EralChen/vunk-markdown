const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/chunk-5KWQjs25.js","assets/chunks/chunk-BhlICgJ0.js","assets/chunks/chunk-Da9IW-EP.js","assets/chunks/chunk-BUVSeX7E.js","assets/chunks/chunk-RvJNgVq9.js","assets/chunks/chunk-B92kdZ15.js","assets/chunks/chunk-CET6Djna.js","assets/chunks/chunk-BoJEKryr.js","assets/chunks/chunk-DP7_WWTp.js","assets/chunks/chunk-CTtSDjxe.js","assets/chunks/chunk-DOGBpaOd.js","assets/chunks/chunk-CqJfURgl.js","assets/chunks/chunk-D_aAFPrs.js","assets/chunks/chunk-BIZXyNTc.js","assets/chunks/chunk-BvB2NsX_.js","assets/chunks/chunk-CfrML8s9.js","assets/chunks/chunk-DP_53ukg.js"])))=>i.map(i=>d[i]);
import{_ as P}from"./chunk-BoJEKryr.js";import{fR as I,eY as q,Y as C,s as j,lK as G,g6 as S,fQ as z,lL as A,A as R,lM as F,df as U,ai as x,aj as L,al as Y}from"./chunk-CET6Djna.js";import{l as k}from"./chunk-BwUWfCcM.js";import{p as K}from"./chunk-D8RSaijD.js";class Q{constructor(){this.modifications=[]}async apply(o,e,t){if(this.modifications.length!==0&&(V??=Promise.all([P(()=>import("./chunk-5KWQjs25.js").then(i=>i.c),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10])),P(()=>import("./chunk-CqJfURgl.js").then(i=>i.i),__vite__mapDeps([11,1,2,3,4,5,6,7,8,9,12,10])),P(()=>import("./chunk-BIZXyNTc.js").then(i=>i.i),__vite__mapDeps([13,6,7,3,1,2,4,5,8,9,14,10]))]),O=await V,!I(t)))for(const i of this.modifications)i.apply(o,e)}}class Z{constructor(o,e){this.type=o,this.polygon=e}apply(o,e){if(this.type!=="replace")return;const{polygon:t}=this,[i,s,f]=O,{extent:v,spatialReference:u}=e,g=q(v,u);if(s.accelerateGeometry(t),!s.execute(t,g))return;i.accelerateGeometry(t),f.accelerateGeometry(t);const{width:n,height:c,values:d}=o,p=t.hasZ?t.rings.reduce(((r,y)=>y.reduce(((l,m)=>Math.min(l,m[2]??1/0)),r)),1/0):1/0,h=p===1/0?0:p;if(i.execute(t,g))d.fill(h);else{const r=B(e,t,[n,c]);if(!r||r.rings.every((l=>l.length===0)))return;const y=H(e,r,n,c);for(let l=c-1;l>=0;--l)for(let m=0;m<n;++m){const $=(l+1)*(n+2)+(m+1);let _=0;for(let T=-1;T<=1;++T){const M=$+T*(n+2);for(let E=-1;E<=1;++E)_=Math.max(_,y[M+E])}const D=l*n+m;d[D]=_===0?d[D]:h}}}}let V,O;function B(a,o,e){const[t,i,s,f]=a.extent,{spatialReference:v}=a,[u,g]=e,n=2,c=(s-t)/(u-1),d=(f-i)/(g-1),p=new C({xmin:t-n*c,ymin:i-n*d,xmax:s+n*c,ymax:f+n*d,spatialReference:v}),h=O[2].execute(o,p);return h?.type==="polygon"?h:null}function H(a,o,e,t){const i=new OffscreenCanvas(e+2,t+2).getContext("2d",{willReadFrequently:!0});if(!i)throw new Error("failed to create canvas");const[s,f,v,u]=a.extent,g=v-s,n=u-f;i.fillStyle="black",i.clearRect(0,0,e,t);const c=new Path2D;for(const r of o.rings)if(r.length>0){const y=new Path2D;let l=!0;for(const[m,$]of r){const _=(m-s)/g*(e-1)+1+b,D=(u-$)/n*(t-1)+1+b;l?(l=!1,y.moveTo(_,D)):y.lineTo(_,D)}y.closePath(),c.addPath(y)}i.fillStyle="white",i.fill(c,"evenodd");const d=i.getImageData(0,0,e+2,t+2),p=(e+2)*(t+2),h=new Uint8Array(p);for(let r=0;r<p;++r)h[r]=d.data[4*r+0]>0?1:0;return h}const b=.5;let w=class extends K(k(U)){constructor(){super(...arguments),this.type="elevation-3d",this.modifications=new Q}get tileInfo(){return this.layer.tileInfo}initialize(){const a=this.view,o=a.map?.allLayers,e=o&&o.includes(this.layer),t=a.map?.ground?.layers,i=t&&t.includes(this.layer);if(e&&!i){const s=new j("layerview:elevation-layer-only",`3D elevation layer '${this.layer.id}' can only be added to layers in map.ground`);this.addResolvingPromise(Promise.reject(s))}this._lercDecoder=G(a.resourceController),this._addTilingSchemeMatchPromise()}destroy(){this._lercDecoder=S(this._lercDecoder)}async fetchElevationTile(a,o){const e=await this._fetchTileData(a.lij,o);if(!I(o))return e&&await this.modifications.apply(e,a,o.signal),e}async _fetchTileData(a,o){const e=this.layer;if(z(e)){const f=await e.fetchTile(a[0],a[1],a[2],{noDataValue:A,signal:o.signal});return I(o)?void R.getLogger(this).warnOnce("A call to fetchTile resolved even though the request was aborted. fetchTile should not resolve if options.signal.aborted is true."):f}const t=this.getTileUrl(a),i=await o.requester.request(t,"binary",o),s=await this._lercDecoder.decode(i,{noDataValue:A},o.signal);if(s)return new F(s);throw new Error("LERC decoding failed")}async setModifications(a){if(this.modifications.modifications.length=0,!a||a.length===0)return;this._simplifyOperatorPromise??=P(()=>import("./chunk-CfrML8s9.js").then(e=>e.s),__vite__mapDeps([15,3,1,2,4,5,6,7,8,9,16,10]));const o=await this._simplifyOperatorPromise;for(const e of a){const t=e.geometry;if(t?.type==="polygon"){const i=o.execute(t);if(i?.type==="polygon"){const s=new Z(e.type,i);this.modifications.modifications.push(s)}else R.getLogger(this).warn("Failed to simplify modification polygon")}else R.getLogger(this).warn("Invalid modification added to elevation layer: "+(t?`non polygon geometry ${t.type}`:"no geometry"))}}};x([L()],w.prototype,"layer",void 0),x([L()],w.prototype,"tileInfo",null),x([L()],w.prototype,"modifications",void 0),w=x([Y("esri.views.3d.layers.ElevationLayerView3D")],w);const ee=w;export{ee as default};
