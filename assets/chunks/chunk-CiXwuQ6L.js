import{iP as W,s as d,hQ as I,dT as A,iQ as V,iR as K,iS as j,hK as q,cP as k,iT as Q,bq as B,iU as H,hk as E,ba as J,b9 as L,iV as C,iW as U}from"./chunk-DYmUVOBN.js";import"./chunk-DODhI9iV.js";import"./chunk-DdHotv1K.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-SqlbPPT2.js";class Z{constructor(e,t=null){if(this.tile=e,t!=null&&e!=null){const i=e.extent;this._samplerData=new W(t,i)}}get zmin(){return this._samplerData!=null?this._samplerData.data.minValue:0}get zmax(){return this._samplerData!=null?this._samplerData.data.maxValue:0}get hasNoDataValues(){return!!this._samplerData?.data.hasNoDataValues}sample(e,t){if(this._samplerData==null)return;const{safeWidth:i,data:n,dx:o,dy:l,y1:s,x0:r}=this._samplerData,{width:c,values:u,noDataValue:f}=n,p=O(l*(s-t),0,i),h=O(o*(e-r),0,i),T=Math.floor(p),M=Math.floor(h),x=T*c+M,F=x+c,_=u[x],R=u[F],z=u[x+1],S=u[F+1];if(_!==f&&R!==f&&z!==f&&S!==f){const b=h-M,$=_+(z-_)*b;return $+(R+(S-R)*b-$)*(p-T)}}}function O(a,e,t){return a<e?e:a>t?t:a}class Be{async queryAll(e,t,i){if(!(e=i?.ignoreInvisibleLayers?e.filter(c=>c.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const n=y.fromGeometry(t);let o=!1;i?.returnSampleInfo||(o=!0);const l={...w,...i,returnSampleInfo:!0},s=await this.query(e[e.length-1],n,l),r=await this._queryAllContinue(e,s,l);return r.geometry=r.geometry.export(),o&&delete r.sampleInfo,r}async query(e,t,i){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||!(t instanceof y)&&t.type!=="point"&&t.type!=="multipoint"&&t.type!=="polyline")throw new d("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const n={...w,...i},o=new X(e,t.spatialReference,n),l=n.signal;return await e.load({signal:l}),await ee(o,t,l),await this._selectTiles(o,l),await g(o,l),se(o),ae(o,l)}async createSampler(e,t,i){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...w,...i};return this._createSampler(e,t,n)}async createSamplerAll(e,t,i){if(!(e=i?.ignoreInvisibleLayers?e.filter(l=>l.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...w,...i,returnSampleInfo:!0},o=await this._createSampler(e[e.length-1],t,n);return this._createSamplerAllContinue(e,t,o,n)}async _createSampler(e,t,i,n){const o=i.signal;await e.load({signal:o});const l=t.spatialReference,s=e.tileInfo.spatialReference;l.equals(s)||(await I([{source:l,dest:s}],{signal:o}),t=A(t,s));const r=new Y(e,t,i,n);return await this._selectTiles(r,o),await g(r,o),new V(r.elevationTiles,r.layer.tileInfo,r.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const o=i.samplers.filter(c=>!c.tile.hasNoDataValues).map(c=>K(c.extent)),l=await this._createSampler(e[e.length-1],t,n,o);if(l.samplers.length===0)return i;const s=i.samplers.concat(l.samplers),r=new V(s,n.noDataValue);return this._createSamplerAllContinue(e,t,r,n)}async _queryAllContinue(e,t,i){const n=e.pop(),o=t.geometry.coordinates,l=t.sampleInfo;j(l);const s=[],r=[];for(let p=0;p<o.length;p++){const h=l[p];h.demResolution>=0?h.source||(h.source=n):e.length&&(s.push(o[p]),r.push(p))}if(!e.length||s.length===0)return t;const c=t.geometry.clone(s),u=await this.query(e[e.length-1],c,i),f=u.sampleInfo;if(!f)throw new Error("no sampleInfo");return r.forEach((p,h)=>{o[p].z=u.geometry.coordinates[h].z,l[p].demResolution=f[h].demResolution}),this._queryAllContinue(e,t,i)}async _selectTiles(e,t){e.type==="geometry"&&te(e);const i=e.options.demResolution;if(typeof i=="number")ne(e,i);else if(i==="finest-contiguous")await this._selectTilesFinestContiguous(e,t);else{if(i!=="auto")throw new d("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${i}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,t)}}async _selectTilesFinestContiguous(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,o=N(i,n,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,o,t)}async _selectTilesFinestContiguousAt(e,t,i){const n=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const o=n.tilemapCache,l=e.getTilesToFetch();try{if(o&&!D(o))await q(Promise.all(l.map(s=>o.fetchAvailability(s.level,s.row,s.col,{signal:i}))),i);else if(await g(e,i),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new d("elevation-query:has-unavailable-tiles")}catch(s){k(s),await this._selectTilesFinestContiguousAt(e,t-1,i)}}async _selectTilesAuto(e,t){oe(e),le(e);const i=e.layer.tilemapCache;if(!i||D(i))return this._selectTilesAutoPrefetchUpsample(e,t);const n=e.getTilesToFetch(),o={},l=n.map(async s=>{const r=new Q(null,0,0,0,B()),c=await H(i.fetchAvailabilityUpsample(s.level,s.row,s.col,r,{signal:t}));c.ok!==!1?s.id!=null&&(o[s.id]=r):k(c.error)});await q(Promise.all(l),t),e.remapTiles(o)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await g(e,t);let n=!1;e.forEachTileToFetch((o,l)=>{i.upsampleTile(o)?n=!0:l()}),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}}class y{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new y;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map(i=>i.clone()),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await I([{source:this.spatialReference,dest:e}],{signal:t});const i=new E({spatialReference:this.spatialReference,points:this.coordinates.map(s=>[s.x,s.y])}),n=A(i,e);if(!n)return null;const o=this.coordinates.map((s,r)=>{const c=s.clone(),u=n.points[r];return c.x=u[0],c.y=u[1],c}),l=this.clone(o);return l.spatialReference=e,l}static fromGeometry(e){const t=new y;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof y)t.coordinates=e.coordinates.map(i=>i.clone()),t._exporter=(i,n)=>{const o=e.clone(i);return o.spatialReference=n,o};else switch(e.type){case"point":{const i=e,{hasZ:n,hasM:o}=i;t.coordinates=n&&o?[new m(i.x,i.y,i.z,i.m)]:n?[new m(i.x,i.y,i.z)]:o?[new m(i.x,i.y,null,i.m)]:[new m(i.x,i.y)],t._exporter=(l,s)=>e.hasM?new L(l[0].x,l[0].y,l[0].z,l[0].m,s):new L(l[0].x,l[0].y,l[0].z,s);break}case"multipoint":{const i=e,{hasZ:n,hasM:o}=i;t.coordinates=n&&o?i.points.map(l=>new m(l[0],l[1],l[2],l[3])):n?i.points.map(l=>new m(l[0],l[1],l[2])):o?i.points.map(l=>new m(l[0],l[1],null,l[2])):i.points.map(l=>new m(l[0],l[1])),t._exporter=(l,s)=>e.hasM?new E({points:l.map(r=>[r.x,r.y,r.z,r.m]),hasZ:!0,hasM:!0,spatialReference:s}):new E(l.map(r=>[r.x,r.y,r.z]),s);break}case"polyline":{const i=e,n=[],o=[],{hasZ:l,hasM:s}=e;let r=0;for(const c of i.paths)if(o.push([r,r+c.length]),r+=c.length,l&&s)for(const u of c)n.push(new m(u[0],u[1],u[2],u[3]));else if(l)for(const u of c)n.push(new m(u[0],u[1],u[2]));else if(s)for(const u of c)n.push(new m(u[0],u[1],null,u[2]));else for(const u of c)n.push(new m(u[0],u[1]));t.coordinates=n,t._exporter=(c,u)=>{const f=e.hasM?c.map(h=>[h.x,h.y,h.z??0,h.m??0]):c.map(h=>[h.x,h.y,h.z??0]),p=o.map(h=>f.slice(h[0],h[1]));return new J({paths:p,hasM:e.hasM,hasZ:!0,spatialReference:u})};break}}return t}}class m{constructor(e,t,i=null,n=null,o=null,l=null){this.x=e,this.y=t,this.z=i,this.m=n,this.tile=o,this.elevationTile=l}clone(){return new m(this.x,this.y,this.z,this.m)}}class G{constructor(e,t){this.layer=e,this.options=t}}class X extends G{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach(t=>t.tile=null);else{const{tileInfo:t,tilemapCache:i}=this.layer,n=v(t,i)[e].level;this.geometry.coordinates.forEach(o=>o.tile=t.tileAt(n,o.x,o.y))}}allElevationTilesFetched(){return!this.geometry.coordinates.some(e=>!e.elevationTile)}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const n=i.tile;if(!n)continue;const o=i.tile?.id;i.elevationTile||!o||e[o]||(e[o]=n,t.push(n))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,()=>{t.tile=null})}}class Y extends G{constructor(e,t,i,n){super(e,i),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.clone().intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const{tileInfo:t,tilemapCache:i}=this.layer,n=v(t,i);if(!e)return n.length-1;const o=this.extent;if(o==null)return-1;for(let l=n.length-1;l>=0;l--){const s=n[l],r=s.resolution*t.size[0],c=s.resolution*t.size[1];if(Math.ceil(o.width/r)*Math.ceil(o.height/c)<=e)return l}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=P(this._candidateTiles.map(t=>e[t.id]))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach(n=>{if(this._fetchedCandidates.has(n))return void(t&&t(n));let o=!1;e(n,()=>o=!0),o?t&&t(n):this._candidateTiles.push(n)}),this._candidateTiles=P(this._candidateTiles,t)}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(t==null)return;const{tileInfo:i,tilemapCache:n}=this.layer,o=v(i,n)[e],l=i.tileAt(o.level,t.xmin,t.ymin),s=l.extent;if(s==null)return;const r=o.resolution*i.size[0],c=o.resolution*i.size[1],u=Math.ceil((t.xmax-s[0])/r),f=Math.ceil((t.ymax-s[1])/c);for(let p=0;p<f;p++)for(let h=0;h<u;h++){const T=new Q(null,l.level,l.row-p,l.col+h);i.updateTileInfo(T),this._tileIsMasked(T)||this._candidateTiles.push(T)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some(t=>e.extent&&U(t,e.extent))}}function N(a,e,t=0){const i=v(a,e);let n=i.length-1;if(t>0){const o=t/C(a.spatialReference),l=i.findIndex(s=>s.resolution<o);l===0?n=0:l>0&&(n=l-1)}return n}const w={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};async function ee(a,e,t){let i;const n=a.layer.tileInfo.spatialReference;if(e instanceof y?i=await e.project(n,t):(await I([{source:e.spatialReference,dest:n}],{signal:t}),i=A(e,n)),!i)throw new d("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${e.spatialReference.wkid}' on an elevation service in '${n.wkid}'`);a.geometry=y.fromGeometry(i)}function te(a){if(a.layer.fullExtent==null)return;const e=new Z(null);e.sample=()=>a.options.noDataValue,a.outsideExtentTile=e;const t=a.layer.fullExtent;a.geometry.coordinates.forEach(i=>{const n=i.x,o=i.y;(n<t.xmin||n>t.xmax||o<t.ymin||o>t.ymax)&&(i.elevationTile=e)})}function ie(a,e){const{tileInfo:t,tilemapCache:i}=a.layer,n=e/C(t.spatialReference),o=v(t,i);let l=o[0],s=0;for(let r=1;r<o.length;r++){const c=o[r];Math.abs(c.resolution-n)<Math.abs(l.resolution-n)&&(l=c,s=r)}return s}function ne(a,e){const t=ie(a,e);a.selectTilesAtLOD(t)}function oe(a){const{tileInfo:e,tilemapCache:t}=a.layer,i=N(e,t,a.options.minDemResolution);a.selectTilesAtLOD(i,a.options.maximumAutoTileRequests)}function v(a,e){const t=a.lods;if(D(e)){const{effectiveMinLOD:i,effectiveMaxLOD:n}=e;return t.filter(o=>o.level>=i&&o.level<=n)}return t}async function g(a,e){const t=a.getTilesToFetch(),i={},n=a.options.cache,o=a.options.noDataValue,l=t.map(async s=>{if(s.id==null)return;const r=`${a.layer.uid}:${s.id}:${o}`,c=n!=null?n.get(r):null,u=c??await a.layer.fetchTile(s.level,s.row,s.col,{noDataValue:o,signal:e});n?.put(r,u),i[s.id]=new Z(s,u)});await q(Promise.allSettled(l),e),a.populateElevationTiles(i)}function le(a){const e=a.layer.tileInfo;let t=0;const i={},n=s=>{s.id!=null&&(s.id in i?i[s.id]++:(i[s.id]=1,t++))},o=s=>{if(s.id==null)return;const r=i[s.id];r===1?(delete i[s.id],t--):i[s.id]=r-1};a.forEachTileToFetch(n,o);let l=!0;for(;l&&(l=!1,a.forEachTileToFetch(s=>{t<=a.options.maximumAutoTileRequests||(o(s),e.upsampleTile(s)&&(l=!0),n(s))},o),l););}function se(a){a.geometry.coordinates.forEach(e=>{const t=e.elevationTile;let i=a.options.noDataValue;if(t){const n=t.sample(e.x,e.y);n!=null?i=n:e.elevationTile=null}e.z=i})}function P(a,e){const t={},i=[];for(const o of a){const l=o.id;l&&!t[l]?(t[l]=o,i.push(o)):e&&e(o)}const n=i.sort((o,l)=>o.level-l.level);return n.filter((o,l)=>{for(let s=0;s<l;s++){const r=n[s].extent;if(r&&o.extent&&U(r,o.extent))return e&&e(o),!1}return!0})}async function ae(a,e){const t=await a.geometry.project(a.outSpatialReference,e);j(t);const i={geometry:t.export(),noDataValue:a.options.noDataValue};return a.options.returnSampleInfo&&(i.sampleInfo=re(a)),a.geometry.coordinates.forEach(n=>{n.tile=null,n.elevationTile=null}),i}function re(a){const e=a.layer.tileInfo,t=C(e.spatialReference);return a.geometry.coordinates.map(i=>{let n=-1;return i.elevationTile&&i.elevationTile!==a.outsideExtentTile&&(n=e.lodAt(i.elevationTile.tile.level).resolution*t),{demResolution:n}})}function D(a){return a?.tileInfo!=null}export{Be as ElevationQuery,y as GeometryDescriptor,N as getFinestLodIndex};
