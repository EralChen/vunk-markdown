const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/chunk-tfRWNW11.js","assets/chunks/chunk-DadqOv6U.js","assets/chunks/chunk-CPKck_yD.js","assets/chunks/chunk-DZhFt61A.js"])))=>i.map(i=>d[i]);
import{_}from"./chunk-CPKck_yD.js";import{i2 as m,df as w,V as d,e0 as y,aJ as o,aP as f,aq as v,L as c,aN as g,ai as n,aj as h,al as I}from"./chunk-DadqOv6U.js";import{c as k,a as M,S as F,h as V,d as G,f as b,b as H}from"./chunk-DZhFt61A.js";import{t as P}from"./chunk-BvNX81cK.js";import{O as L}from"./chunk-DpeKQbOA.js";import"./chunk-Z8lv7CH6.js";import"./chunk-nOXB7qP5.js";import"./chunk-BOWUl8oP.js";import"./chunk-CjZpsl1V.js";import"./chunk-DEZj-97Y.js";import"./chunk-vLBhaxoq.js";import"./chunk-QXap_35O.js";import"./chunk-Bli5GAp2.js";import"./chunk-CUzevAry.js";import"./chunk-BcYBtzVA.js";import"./chunk-BFLErLYb.js";import"./chunk-CdMWyiFk.js";import"./chunk-CKwt2uXH.js";import"./chunk-QEXL0eSg.js";import"./chunk-BkdC799f.js";import"./chunk-CdH3QndK.js";import"./chunk-DzjOxNRv.js";import"./chunk-KYwHMn0Q.js";const C=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],p={graphic:null,property:null,oldValue:null,newValue:null};function u(t){return t instanceof k||t instanceof M||t instanceof F||t instanceof V||t instanceof G||t instanceof b||t instanceof H}function $(t){return d.isCollection(t)&&t.length&&u(t.at(0))}function O(t){return Array.isArray(t)&&t.length>0&&u(t[0])}const U=new Set(["default"]);let a=class extends m(w){constructor(){super(...arguments),this._graphics=new d,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map,this._interaction=null,this._loadInteractionPromise=null,this.interactive=!1}get _routeItems(){return new y({getCollections:()=>this.layer==null||this.destroyed?[]:[this.layer.routeInfo!=null?new d([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this.addHandles(o((()=>{const{interactive:t,suspended:e}=this;return{interactive:t,suspended:e}}),(({interactive:t,suspended:e})=>{const i=t&&!e;i&&this._getInteractionLoadPromise().then((r=>{r.enabled=this.interactive&&!this.suspended})),this._interaction&&(this._interaction.enabled=i)}),f)),this._updatingHandles.addOnCollectionChange((()=>this._routeItems),(t=>this._routeItemsChanged(t)),v)}destroy(){this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),this._get("_routeItems")?.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView(),this._interaction?.enabled&&(this._interaction.enabled=!1)}get selectedNetworkFeatures(){return this._interaction?.selectedNetworkFeatures??null}async create(t){if(this.interactive)return(await this._getInteractionLoadPromise()).create(t)}async fetchPopupFeaturesAtLocation(t,e){return this._graphicsView.hitTest(t).filter((({popupTemplate:i})=>!!i))}highlight(t){let e;e=u(t)?[this._getNetworkFeatureUid(t)]:O(t)?t.map((r=>this._getNetworkFeatureUid(r))):$(t)?t.map((r=>this._getNetworkFeatureUid(r))).toArray():[t.uid];const i=e.filter(c);return i.length?(this._addHighlight(i),g((()=>this._removeHighlight(i)))):g()}async hitTest(t,e){if(this.suspended)return null;const i=this._graphicsView.hitTest(t).filter(c).map((s=>this._networkGraphicMap.get(s)));if(!i.length)return null;const{layer:r}=this;return i.reverse().map((s=>({type:"route",layer:r,mapPoint:t,networkFeature:s})))}isUpdating(){return this._graphicsView.updating}moveEnd(){}remove(t){this._interaction?.remove(t)}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const e of t)if(this._highlightIds.has(e)){const i=this._highlightIds.get(e);this._highlightIds.set(e,i+1)}else this._highlightIds.set(e,1);this._updateHighlight()}_createGraphic(t){const e=t.toGraphic();return e.layer=this.layer,e.sourceLayer=this.layer,e}_createGraphicsView(){const t=this.view,e=()=>this.requestUpdate(),i=new P(t.featuresTilingScheme);this._graphicsView=new L({container:i,graphics:this._graphics,requestUpdateCallback:e,view:t}),this.container.addChild(i),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const e=this._networkGraphicMap.get(t);return C.indexOf(e.type)}_getInteractionLoadPromise(){return this._loadInteractionPromise||(this._loadInteractionPromise=this._loadInteraction(),this._updatingHandles.addPromise(this._loadInteractionPromise)),this._loadInteractionPromise}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}async _loadInteraction(){const{layer:t,view:e}=this,{RouteLayerInteraction:i}=await _(async()=>{const{RouteLayerInteraction:r}=await import("./chunk-tfRWNW11.js");return{RouteLayerInteraction:r}},__vite__mapDeps([0,1,2,3]));return this._interaction=new i({view:e,layer:t}),this._interaction}_removeHighlight(t){for(const e of t)if(this._highlightIds.has(e)){const i=this._highlightIds.get(e)-1;i===0?this._highlightIds.delete(e):this._highlightIds.set(e,i)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map((e=>{const i=this._networkFeatureMap.get(e);return this._networkFeatureMap.delete(e),this._networkGraphicMap.delete(i),i})));for(const e of t.removed)this.removeHandles(e)}if(t.added.length){this._graphics.addMany(t.added.map((e=>{const i=this._createGraphic(e);return i.symbol==null?null:(this._networkFeatureMap.set(e,i),this._networkGraphicMap.set(i,e),i)})).filter(c));for(const e of t.added)this.addHandles([o((()=>e.geometry),((i,r)=>{this._updateGraphic(e,"geometry",i,r)})),o((()=>e.symbol),((i,r)=>{this._updateGraphic(e,"symbol",i,r)})),o((()=>e.popupTemplate),(i=>{this._networkFeatureMap.has(e)&&(this._networkFeatureMap.get(e).popupTemplate=i)})),o((()=>e.toGraphic().attributes),(i=>{this._networkFeatureMap.has(e)&&(this._networkFeatureMap.get(e).attributes=i)}))],e);this._graphics.sort(((e,i)=>this._getDrawOrder(e)-this._getDrawOrder(i)))}}_updateGraphic(t,e,i,r){if(!this._networkFeatureMap.has(t)){const l=this._createGraphic(t);return this._networkFeatureMap.set(t,l),this._networkGraphicMap.set(l,t),void this._graphics.add(l)}const s=this._networkFeatureMap.get(t);s[e]=i,p.graphic=s,p.property=e,p.oldValue=r,p.newValue=i,this._graphicsView.graphicUpdateHandler(p)}_updateHighlight(){const t=Array.from(this._highlightIds.keys()),e=this._getHighlightBits(U.values());this._graphicsView.setHighlight(t.map((i=>({objectId:i,highlightFlags:e}))))}};n([h()],a.prototype,"_graphics",void 0),n([h()],a.prototype,"_routeItems",null),n([h()],a.prototype,"_interaction",void 0),n([h()],a.prototype,"interactive",void 0),n([h({readOnly:!0})],a.prototype,"selectedNetworkFeatures",null),a=n([I("esri.views.2d.layers.RouteLayerView2D")],a);const at=a;export{at as default};
