import{bc as v,jm as q,jn as O,F as D,jo as P,j9 as E,jp as G,jq as k,bh as A,jr as B,js as H,ck as J}from"./chunk-BrJ3DEnk.js";async function U(t,d,p,I,o){const{elevationProvider:l,renderCoordsHelper:i}=t,{elevationInfo:u}=d,{pointsInFeatures:b,spatialReference:f}=I,g=v.fromJSON(f),h=q(u,!0),y=await O(h,g,o);D(o);const c=[],e=new Set,s=new Set,a=new E,n=P(0,0,0,v.WGS84),r=new H,R=A();n.spatialReference=g;const F=t.elevationProvider.spatialReference??t.spatialReference;for(const{objectId:m,points:S}of b){const j=p(m);if(j==null){for(const w of S)c.push(w.z??0);e.add(m);continue}j.isDraped&&s.add(m);const $=j.graphic.geometry;a.setFromElevationInfo(G($,u)),a.updateFeatureExpressionInfoContext(y,j.graphic,d);for(const{x:w,y:z,z:C}of S)n.x=w,n.y=z,n.z=C??0,await k(n,R,F,0,{signal:o}),B(R,l,a,i,r),c.push(r.z)}return{elevations:c,drapedObjectIds:s,failedObjectIds:e}}async function W(t,d,p){if(t==null||d.candidates.length===0)return x;const I=t.graphics3DGraphicsByObjectID??t.graphics3DGraphics,o=[],l=[],{renderer:i}=t,u=i!=null&&"arcadeRequired"in i&&i.arcadeRequired?J():null,b=async(e,{graphic:s,graphics3DSymbol:a})=>{const n=await u,r=await t.getRenderingInfoAsync(s,i,n,{signal:p});return r==null?[]:a.queryForSnapping(e,g,r,p)},{candidates:f,spatialReference:g}=d;for(let e=0;e<f.length;++e){const s=f[e],{objectId:a}=s,n=typeof a=="number"?I?.get(a):void 0;if(n==null)continue;const{graphics3DSymbol:r}=n;r.symbologySnappingSupported&&(o.push(b(s,n)),l.push(e))}if(o.length===0)return x;const h=await Promise.all(o);D(p);const y=[],c=[];for(let e=0;e<h.length;++e){const s=h[e],a=l[e];for(const n of s)y.push(n),c.push(a)}return{candidates:y,sourceCandidateIndices:c}}const x={candidates:[],sourceCandidateIndices:[]};export{U as l,W as r};
