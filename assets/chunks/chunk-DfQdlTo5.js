import{b4 as n,b6 as l,b7 as u,bf as s,cF as m,cG as g,cH as f,cI as x,cJ as S,br as b,cK as z,cL as h,ba as v,bi as y,cM as E,bj as I,b9 as C,cN as _,cO as $}from"./chunk-XGpVqsM_.js";import{c as w}from"./chunk-CPywTGCC.js";let P=class extends w{constructor(e){super(e),this._material=null,this._texture=null,this._geometry=null,this._size=3,this._color=n(1,0,1,1),this._pixelSnappingEnabled=!0,this._primitive="square",this._outlineSize=1,this._outlineColor=n(1,1,1,1),this._elevationInfo=null,this.applyProperties(e)}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get size(){return this._size}set size(e){if(e!==this._size){const t=this._preferredTextureSize;this._size=e,t<this._preferredTextureSize?this.recreate():this._updateSizeAttribute()}}get color(){return this._color}set color(e){l(e,this._color)||(u(this._color,e),this._updateMaterial())}get pixelSnappingEnabled(){return this._pixelSnappingEnabled}set pixelSnappingEnabled(e){this._pixelSnappingEnabled!==e&&(this._pixelSnappingEnabled=e,this._updateMaterial())}get primitive(){return this._primitive}set primitive(e){this._primitive!==e&&(this._primitive=e,this.recreate())}get outlineSize(){return this._outlineSize}set outlineSize(e){e!==this._outlineSize&&(this._outlineSize=e,this._updateMaterial())}get outlineColor(){return this._outlineColor}set outlineColor(e){l(e,this._outlineColor)||(u(this._outlineColor,e),this._updateMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this.recreateGeometry()}_updateMaterial(){this._material?.setParameters(this._materialParameters)}_updateSizeAttribute(){const e=this.object;if(e==null)return;const t=e.geometries[0];if(t==null)return;const i=t.getMutableAttribute(s.SIZE).data,r=this._geometrySize;i[0]=r,i[1]=r,e.geometryVertexAttributeUpdated(e.geometries[0],s.SIZE)}get _materialParameters(){return{color:this._color,textureIsSignedDistanceField:!0,sampleSignedDistanceFieldTexelCenter:g(this._primitive),distanceFieldBoundingBox:m,occlusionTest:!1,outlineColor:this._outlineColor,outlineSize:this._outlineSize,textureId:this._texture?.id,polygonOffset:!1,shaderPolygonOffset:0,drawAsLabel:!0,depthEnabled:!1,pixelSnappingEnabled:this.pixelSnappingEnabled,isDecoration:this.isDecoration}}get _geometrySize(){return this._size/f}createExternalResources(){this._texture=x(this._primitive,this._preferredTextureSize),this._material=new S(this._materialParameters,this.view.state.viewingMode===b.Global);const e=this.view.stage;this._texture.load(e.renderView.renderingContext),e.addTexture(this._texture)}destroyExternalResources(){this._texture&&(this.view.stage.removeTexture(this._texture),this._texture.dispose(),this._texture=null),this._material=null}createGeometries(e){const t=this._createRenderGeometry();t!=null&&e.addGeometry(t)}forEachMaterial(e){e(this._material)}get _preferredTextureSize(){return z(2*this._geometrySize,16,128)}calculateMapBounds(e){const t=this.object?.geometries[0];if(!t)return!1;const i=t.attributes.get(s.POSITION).data;return h(i,this.view.renderCoordsHelper.spatialReference,c,this.view.spatialReference),y(e,c),!0}_createRenderGeometry(){const{geometry:e,_material:t}=this;if(e==null||t==null)return null;const{renderCoordsHelper:i,elevationProvider:r}=this.view,p=E(e,r,I.fromElevationInfo(this.elevationInfo),i),d=C(_.get(),e.x,e.y,p),a=_.get();h(d,e.spatialReference,a,i.spatialReference);const o=this._geometrySize;return $(t,{position:a,size:[o,o],centerOffsetAndDistance:[0,0,0,1]})}};const c=v();export{P as S};
