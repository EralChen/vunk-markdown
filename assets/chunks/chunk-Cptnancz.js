const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/chunk-CQMvwofW.js","assets/chunks/chunk-CET6Djna.js","assets/chunks/chunk-BoJEKryr.js","assets/chunks/chunk-BDUQ55W-.js","assets/chunks/chunk-Cx5mjBEU.js","assets/chunks/chunk-DiDP6XHN.js","assets/chunks/chunk-DRQGs62l.js","assets/chunks/chunk-DMyNbnav.js","assets/chunks/chunk-BRZtfZF4.js","assets/chunks/chunk-CgCvM4ut.js","assets/chunks/chunk-CyYwB5mV.js","assets/chunks/chunk-DHDut7qm.js","assets/chunks/chunk-DochpkbE.js","assets/chunks/chunk-CWkYAY0l.js","assets/chunks/chunk-BdAIZopN.js","assets/chunks/chunk-BrkEpZ-M.js"])))=>i.map(i=>d[i]);
import{_ as o}from"./chunk-BoJEKryr.js";import{ai as e,aj as a,al as l,V as y,du as w,df as u}from"./chunk-CET6Djna.js";import{l as h}from"./chunk-BwUWfCcM.js";import{h as p}from"./chunk-BGPY8meM.js";const V=r=>{let i=class extends r{constructor(...t){super(...t),this.layer=null}get interactive(){return this.analysisView?.interactive??!1}set interactive(t){this.analysisView!=null&&(this.analysisView.interactive=t)}get results(){return this.analysisView?.results??new y}place(t){if(this.analysisView!=null)return this.analysisView.place(t);throw w()}};return e([a()],i.prototype,"layer",void 0),e([a()],i.prototype,"interactive",null),e([a({readOnly:!0})],i.prototype,"results",null),i=e([l("esri.views.layers.LineOfSightLayerView")],i),i};var n;let s=class extends h(V(u)){static{n=this}constructor(r){super(r),this.type="line-of-sight-3d",this._analysisViewManager=null}initialize(){this._analysisViewManager=new p({getAnalysis:()=>this.layer.analysis,loadAnalysisViewModule:n.loadAnalysisViewModule,parent:this}),this.addResolvingPromise(this._analysisViewManager.whenAnalysisView())}destroy(){this._analysisViewManager.destroy()}get analysisView(){return this._analysisViewManager.analysisView}whenAnalysisView(){return this._analysisViewManager.whenAnalysisView()}isUpdating(){return this._analysisViewManager.updating}static{this.loadAnalysisViewModule=()=>o(()=>import("./chunk-CQMvwofW.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]))}};e([a()],s.prototype,"type",void 0),e([a()],s.prototype,"_analysisViewManager",void 0),e([a({readOnly:!0})],s.prototype,"analysisView",null),s=n=e([l("esri.views.3d.layers.LineOfSightLayerView3D")],s);const m=s;export{m as default};
