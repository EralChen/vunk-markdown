import{jC as c,L as x}from"./chunk-Dx0VeHfy.js";import{w as d,j as y}from"./chunk-B3sIs8uN.js";import{getSpatialReference as f,fromGeometry as G,toGeometry as u,fromGeometries as g}from"./chunk-CYTc0OB5.js";import"./chunk-DHAEDrTs.js";import"./chunk-B92kdZ15.js";import"./chunk-DrJdBTeU.js";import"./chunk-Da9IW-EP.js";import"./chunk-BUVSeX7E.js";import"./chunk-RvJNgVq9.js";import"./chunk-DP7_WWTp.js";const l={round:0,bevel:1,miter:2,square:3};function C(e,t,n={}){const{miterLimit:a=10,flattenError:p=0,joins:s="round",unit:r}=n,o=f(e);r&&o&&(t=c(t,r,o));const m=G(e),i=m.getSpatialReference();return u(d(m.getGeometry(),i,t,l[s],a,p),i)}function I(e,t,n={}){const{miterLimit:a=10,flattenError:p=0,joins:s="round",unit:r}=n,o=f(e);r&&o&&(t=c(t,r,o));const[m,i]=g(e);return y(m,i,t,l[s],a,p).map((j=>u(j,i))).filter(x)}export{C as execute,I as executeMany};
