import{b9 as p,cE as y,cF as h}from"./chunk-Cpdp9qXA.js";import"./chunk-BIY0MvRL.js";import"./chunk-DKLxNM5h.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */function a(e){return Array.isArray(e)?e[0]?.spatialReference:e?.spatialReference}function l(e){return e&&(Array.isArray(e)?e.map(l):e.toJSON?e.toJSON():e)}function o(e){return Array.isArray(e)?e.map(t=>y(t)):y(e)}function S(e,t){let r;return Array.isArray(e)?r=e:(r=[],r.push(e),t!=null&&r.push(t)),r}let f;async function w(){return f||(f=h("geometryEngineWorker",{strategy:"distributed"})),f}async function n(e,t){return(await w()).invoke("executeGEOperation",{operation:e,parameters:l(t)})}async function d(e,t){const r=await w();return Promise.all(r.broadcast("executeGEOperation",{operation:e,parameters:l(t)}))}function ie(e){return n("extendedSpatialReferenceInfo",[e])}async function oe(e,t){return o(await n("clip",[a(e),e,t]))}async function ce(e,t){return o(await n("cut",[a(e),e,t]))}function se(e,t){return n("contains",[a(e),e,t])}function ue(e,t){return n("crosses",[a(e),e,t])}function fe(e,t,r){return n("distance",[a(e),e,t,r])}function pe(e,t){return n("equals",[a(e),e,t])}function le(e,t){return n("intersects",[a(e),e,t])}function me(e,t){return n("touches",[a(e),e,t])}function ye(e,t){return n("within",[a(e),e,t])}function we(e,t){return n("disjoint",[a(e),e,t])}function de(e,t){return n("overlaps",[a(e),e,t])}function ge(e,t,r){return n("relate",[a(e),e,t,r])}function he(e){return n("isSimple",[a(e),e])}async function Se(e){return o(await n("simplify",[a(e),e]))}async function xe(e,t=!1){return o(await n("convexHull",[a(e),e,t]))}async function Re(e,t){return o(await n("difference",[a(e),e,t]))}async function Ae(e,t){return o(await n("symmetricDifference",[a(e),e,t]))}async function Oe(e,t){return o(await n("intersect",[a(e),e,t]))}async function De(e,t=null){const r=S(e,t);return o(await n("union",[a(r),r]))}async function Je(e,t,r,i,c,u){return o(await n("offset",[a(e),e,t,r,i,c,u]))}async function Ne(e,t,r,i=!1){const c=[a(e),e,t,r,i];return o(await n("buffer",c))}async function Ee(e,t,r,i,c,u){const g=[a(e),e,t,r,i,c,u];return o(await n("geodesicBuffer",g))}async function Le(e,t,r=!0){const i=await n("nearestCoordinate",[a(e),e,t,r]);return{...i,coordinate:p.fromJSON(i.coordinate)}}async function Te(e,t){const r=await n("nearestVertex",[a(e),e,t]);return{...r,coordinate:p.fromJSON(r.coordinate)}}async function Ve(e,t,r,i){return(await n("nearestVertices",[a(e),e,t,r,i])).map(c=>({...c,coordinate:p.fromJSON(c.coordinate)}))}function m(e){return"xmin"in e?e.center:"x"in e?e:e.extent?.center}async function be(e,t,r){if(e==null)throw new s;const i=e.spatialReference;if((r=r??m(e))==null)throw new s;const c=e.constructor.fromJSON(await n("rotate",[i,e,t,r]));return c.spatialReference=i,c}async function ve(e,t){if(e==null)throw new s;const r=e.spatialReference;if((t=t??m(e))==null)throw new s;const i=e.constructor.fromJSON(await n("flipHorizontal",[r,e,t]));return i.spatialReference=r,i}async function ze(e,t){if(e==null)throw new s;const r=e.spatialReference;if((t=t??m(e))==null)throw new s;const i=e.constructor.fromJSON(await n("flipVertical",[r,e,t]));return i.spatialReference=r,i}async function He(e,t,r,i){return o(await n("generalize",[a(e),e,t,r,i]))}async function je(e,t,r){return o(await n("densify",[a(e),e,t,r]))}async function Ie(e,t,r,i=0){return o(await n("geodesicDensify",[a(e),e,t,r,i]))}function Pe(e,t){return n("planarArea",[a(e),e,t])}function ke(e,t){return n("planarLength",[a(e),e,t])}function qe(e,t,r){return n("geodesicArea",[a(e),e,t,r])}function Be(e,t,r){return n("geodesicLength",[a(e),e,t,r])}async function Ce(e,t){return o(await n("intersectLinesToPoints",[a(e),e,t]))}async function Ge(e,t){await d("changeDefaultSpatialReferenceTolerance",[e,t])}async function $e(e){await d("clearDefaultSpatialReferenceTolerance",[e])}class s extends Error{constructor(){super("Illegal Argument Exception")}}export{Ne as buffer,Ge as changeDefaultSpatialReferenceTolerance,$e as clearDefaultSpatialReferenceTolerance,oe as clip,se as contains,xe as convexHull,ue as crosses,ce as cut,je as densify,Re as difference,we as disjoint,fe as distance,pe as equals,ie as extendedSpatialReferenceInfo,ve as flipHorizontal,ze as flipVertical,He as generalize,qe as geodesicArea,Ee as geodesicBuffer,Ie as geodesicDensify,Be as geodesicLength,Oe as intersect,Ce as intersectLinesToPoints,le as intersects,he as isSimple,Le as nearestCoordinate,Te as nearestVertex,Ve as nearestVertices,Je as offset,de as overlaps,Pe as planarArea,ke as planarLength,ge as relate,be as rotate,Se as simplify,Ae as symmetricDifference,me as touches,De as union,ye as within};
