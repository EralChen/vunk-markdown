import{c1 as l,aJ as h,aK as c,s as m,aM as d,c2 as u,c3 as g,ar as i,as as s,au as y}from"./chunk-Bj5pIyxE.js";import{l as f}from"./chunk-CWIq40Vj.js";import{l as b,r as v}from"./chunk-D-xy_EzN.js";import{x as S}from"./chunk-tBzxBaX3.js";import{r as w}from"./chunk-BlYSW4MD.js";import"./chunk-C39j8-it.js";import"./chunk-DJw_0V8B.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-SqlbPPT2.js";import"./chunk-CHMRQirc.js";import"./chunk-BHt7gGgX.js";import"./chunk-BOKCTmTH.js";import"./chunk-C5gbALhs.js";import"./chunk-DuRti_dR.js";import"./chunk-BmLACb8Q.js";import"./chunk-DRahy-Qo.js";import"./chunk-lcasatnJ.js";let t=class extends f(g){constructor(){super(...arguments),this.type="graphics-3d",this.symbologySnappingSupported=!0,this._slicePlaneEnabled=!1,this.fullExtentInLocalViewSpatialReference=null,this.ignoresMemoryFactor=!0}get highlightOptions(){return null}initialize(){this._set("processor",new S({owner:this,scaleVisibilityEnabled:!0,frustumVisibilityEnabled:!0})),this.addResolvingPromise(this.processor.initializePromise),this.addHandles(this.layer.on("graphic-update",e=>this.processor.graphicsCore.graphicUpdateHandler(e))),this.layer.internal?this.notifyChange("updating"):(this.addResolvingPromise(w(this).then(e=>this.fullExtentInLocalViewSpatialReference=e)),this.addHandles(l(()=>this.view?.basemapTerrain?.ready,()=>()=>this.notifyChange("updating"),{once:!0})))}destroy(){this._updatingHandles.removeAll(),this._set("processor",h(this.processor))}get loadedGraphics(){return this.layer.graphics}get legendEnabled(){return this.canResume()&&!this.processor?.frustumVisibilitySuspended}get visibleAtCurrentScale(){return!this.processor?.scaleVisibilitySuspended}get slicePlaneEnabled(){const e=this.layer.internal;return this._slicePlaneEnabled&&!e}set slicePlaneEnabled(e){this._slicePlaneEnabled=e}getSuspendInfo(){const e=super.getSuspendInfo();return e.outsideOfView=this.processor?.frustumVisibilitySuspended??!1,e}getHit(e){return this.processor.getHit(e)}whenGraphicBounds(e,r){return this.processor.whenGraphicBounds(e,r)}computeAttachmentOrigin(e,r){return this.processor?.computeAttachmentOrigin(e,r)}getSymbolLayerSize(e,r){return this.processor.getSymbolLayerSize(e,r)}queryGraphics(){return Promise.resolve(this.loadedGraphics)}maskOccludee(e){return this.processor.maskOccludee(e)}highlight(e,r){return this.processor.highlight(e,r?.name??c)}async elevationAlignPointsInFeatures(e,r){const{processor:o}=this;if(o?.graphics3DGraphics==null)throw new m("graphicslayerview3d:missing-processor","A Graphics3D processor is needed to resolve graphics elevation.");const{graphics3DGraphics:a}=o,n=p=>typeof p=="number"?a.get(p):void 0;return b(this.view,this.layer,n,e,r)}async queryForSymbologySnapping(e,r){return v(this.processor,e,r)}get updatePolicy(){return this.processor?.graphicsCore.effectiveUpdatePolicy||d.SYNC}isUpdating(){return this.view&&this.layer&&!(!this.processor?.updating&&(this.layer.internal||this.view.basemapTerrain?.ready))}get performanceInfo(){return new u(this.usedMemory,this.loadedGraphics.length,-1,-1)}get usedMemory(){return this.processor?.graphicsCore?.usedMemory??0}get unloadedMemory(){return this.processor?.graphicsCore?.unprocessedMemoryEstimate}get test(){return{graphics3DProcessor:this.processor,loadedGraphics:this.loadedGraphics}}};i([s()],t.prototype,"highlightOptions",null),i([s()],t.prototype,"loadedGraphics",null),i([s({readOnly:!0})],t.prototype,"legendEnabled",null),i([s()],t.prototype,"layer",void 0),i([s({readOnly:!0})],t.prototype,"processor",void 0),i([s({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),i([s()],t.prototype,"_slicePlaneEnabled",void 0),i([s({type:Boolean})],t.prototype,"slicePlaneEnabled",null),t=i([y("esri.views.3d.layers.GraphicsLayerView3D")],t);const Se=t;export{Se as default};
