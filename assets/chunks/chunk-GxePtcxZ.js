import{aC as p,as as s,aD as a,aE as m,aj as o,ak as i,am as c}from"./chunk-XGpVqsM_.js";import{x as h}from"./chunk-ChAQNmoX.js";import"./chunk-DyqHK6XP.js";import"./chunk-Dix477Sg.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CrMA_peF.js";import"./chunk-CsjFZm7e.js";import"./chunk-C9sOjfNf.js";import"./chunk-CRCAjrQL.js";import"./chunk-UhNHdoQU.js";import"./chunk-CxK2Oj-r.js";import"./chunk-BWN60_zL.js";import"./chunk-9oBjBPlu.js";let t=class extends p.IdentifiableMixin(s){constructor(r){super(r),this.drapeSourcePriorityOffset=0,this.processor=null,this.slicePlaneEnabled=!1,this.layer=new d,this.suspended=!1}initialize(){this._set("processor",new h({owner:this,drapeSourcePriorityOffset:this.drapeSourcePriorityOffset}))}destroy(){this._set("processor",a(this.processor))}get loadedGraphics(){return this.getGraphics()}get updating(){return!!this.processor?.updating}get symbolUpdateType(){return this.processor.graphicsCore.symbolUpdateType}getHit(r){return this.processor.getHit(r)}whenGraphicBounds(r,e){return this.processor.whenGraphicBounds(r,e)}graphicChanged(r){this.processor.graphicsCore.graphicUpdateHandler(r)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}async queryGraphics(){return this.loadedGraphics}highlight(r,e){return this.processor.highlight(r,e?.name??m)}maskOccludee(r){return this.processor.maskOccludee(r)}get test(){return{graphics3DProcessor:this.processor}}};o([i({constructOnly:!0})],t.prototype,"view",void 0),o([i({constructOnly:!0})],t.prototype,"getGraphics",void 0),o([i()],t.prototype,"loadedGraphics",null),o([i()],t.prototype,"drapeSourcePriorityOffset",void 0),o([i({readOnly:!0})],t.prototype,"updating",null),o([i()],t.prototype,"processor",void 0),o([i({type:Boolean})],t.prototype,"slicePlaneEnabled",void 0),o([i()],t.prototype,"layer",void 0),o([i()],t.prototype,"suspended",void 0),t=o([c("esri.views.3d.layers.GraphicsView3D")],t);class d extends p{constructor(){super(),this.type="graphics-view-3d-dummy",this.id=this.uid}}const sr=t;export{sr as default};
