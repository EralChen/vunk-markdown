import{a as p,e as M}from"./chunk-BALWqwPe.js";import{r as V,C as w,e as f,M as P,U as Z}from"./chunk-EY7ToGV5.js";import{cR as v,hk as R,b9 as h,ax as d,ba as E}from"./chunk-DB7j5ecc.js";import{fromGeometryToGXGeometry as g,toGeometry as y}from"./chunk-DjiU_hIY.js";import"./chunk-B92kdZ15.js";import"./chunk-BtTM1THp.js";import"./chunk-mTyH_f-_.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */const n="_gxVersion",x=2,C=1;function Et(t){return Array.isArray(t)?t[0].spatialReference:t.spatialReference}function zt(t){switch(t.type){case"point":return X(t);case"multipoint":return G(t);case"polyline":return Y(t);case"polygon":return k(t);case"extent":return z(t);default:throw new Error(`Unsupported geometry type: ${t.type}`)}}function z(t){if(!t.getCacheValue(n)){const e=new V;e.setCoords(t.xmin,t.ymin,t.xmax,t.ymax),t.hasM&&e.setInterval(x,0,t.mmin,t.mmax),t.hasZ&&e.setInterval(C,0,t.zmin,t.zmax),t.setCacheValue(n,e)}return t.getCacheValue(n)}function G(t){if(!t.getCacheValue(n)){const e=new w,r=new f,a=t.points,o=t.hasM,i=t.hasZ,s=i?3:2;for(let m=0,c=a.length;m<c;m++){const u=a[m];r.setXYCoords(u[0],u[1]),i&&r.setZ(u[2]??0),o&&r.setM(u[s]??NaN),e.add(r)}t.setCacheValue(n,e)}return t.getCacheValue(n)}function X(t){if(!t.getCacheValue(n)){const e=new f;e.setXYCoords(t.x,t.y),t.hasM&&e.setM(t.m),t.hasZ&&e.setZ(t.z),t.setCacheValue(n,e)}return t.getCacheValue(n)}function k(t){if(!t.getCacheValue(n)){const{curveRings:e,hasM:r,hasZ:a,rings:o}=t,i=g({curveRings:e,hasM:r,hasZ:a,rings:o});t.setCacheValue(n,i)}return t.getCacheValue(n)}function Y(t){if(!t.getCacheValue(n)){const{curvePaths:e,hasM:r,hasZ:a,paths:o}=t,i=g({curvePaths:e,hasM:r,hasZ:a,paths:o});t.setCacheValue(n,i)}return t.getCacheValue(n)}function Gt(t){if(t.wkid)return P(t.wkid);const e=t.wkt2||t.wkt;return e?Z(e):null}function Xt(t,e){if(t)switch(t.getGeometryType()){case p.enumPoint:return N(t,e);case p.enumEnvelope:return $(t,e);case p.enumMultiPoint:return I(t,e);case p.enumPolyline:return j(t,e);case p.enumPolygon:return S(t,e)}return null}function $(t,e){if(t.isEmpty())return null;const r=new v({xmin:t.getXMin(),ymin:t.getYMin(),xmax:t.getXMax(),ymax:t.getYMax(),spatialReference:e}),a=t.getDescription();if(a.hasM()){const o=t.queryInterval(x,0);r.mmin=o.vmin,r.mmax=o.vmax}if(a.hasZ()){const o=t.queryInterval(C,0);r.zmin=o.vmin,r.zmax=o.vmax}return r.setCacheValue(n,t),r}function I(t,e){if(t.isEmpty())return null;const r=t.getDescription(),a=r.hasM(),o=r.hasZ(),i=[],s=new f;for(let c=0,u=t.getPointCount();c<u;c++){t.getPointByVal(c,s);const l=[s.getX(),s.getY()];o&&l.push(s.getZ()),a&&l.push(s.getM()),i.push(l)}const m=new R({hasM:a,hasZ:o,points:i,spatialReference:e});return m.setCacheValue(n,t),m}function N(t,e){if(t instanceof M)return new h({x:t.x,y:t.y,spatialReference:e});if(t.isEmpty())return null;const r=new h({x:t.getX(),y:t.getY(),spatialReference:e}),a=t.getDescription();return a.hasM()&&(r.m=t.getM()),a.hasZ()&&(r.z=t.getZ()),r.setCacheValue(n,t),r}function S(t,e){if(t.isEmpty())return null;const r=d.fromJSON({spatialReference:e,...y(t,null)});return r.setCacheValue(n,t),r}function j(t,e){if(t.isEmpty())return null;const r=E.fromJSON({spatialReference:e,...y(t,null)});return r.setCacheValue(n,t),r}export{z as fromExtent,zt as fromGeometry,G as fromMultipoint,X as fromPoint,k as fromPolygon,Y as fromPolyline,Gt as fromSpatialReference,Et as getSpatialReference,$ as toExtent,Xt as toGeometry,I as toMultipoint,N as toPoint,S as toPolygon,j as toPolyline};
