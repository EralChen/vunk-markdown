import{dQ as m,dS as a,fG as n,s as l,aM as d,aj as e,ak as p,am as u}from"./chunk-XGpVqsM_.js";import"./chunk-DyqHK6XP.js";import"./chunk-Dix477Sg.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CrMA_peF.js";let o=class extends m(a(d)){constructor(r){super(r),this.resourceInfo=null,this.persistenceEnabled=!0,this.type="unsupported"}initialize(){this.addResolvingPromise(new Promise(((r,i)=>{n((()=>{const t=this.resourceInfo&&(this.resourceInfo.layerType||this.resourceInfo.type);let s="Unsupported layer type";t&&(s+=" "+t),i(new l("layer:unsupported-layer-type",s,{layerType:t}))}))})))}read(r,i){const t={resourceInfo:r};r.id!=null&&(t.id=r.id),r.title!=null&&(t.title=r.title),super.read(t,i)}write(r,i){return Object.assign(r||{},this.resourceInfo,{id:this.id})}};e([p({readOnly:!0})],o.prototype,"resourceInfo",void 0),e([p({type:["show","hide"]})],o.prototype,"listMode",void 0),e([p({type:Boolean,readOnly:!1})],o.prototype,"persistenceEnabled",void 0),e([p({json:{read:!1},readOnly:!0,value:"unsupported"})],o.prototype,"type",void 0),o=e([u("esri.layers.UnsupportedLayer")],o);const _=o;export{_ as default};
