import{iE as E,ii as q,s as d,n as c,fm as P,fn as I,gG as $,gg as b,A as g,er as y,iF as j,aJ as R,cK as N,iG as _,fj as O,fp as Q,J as k,fr as L,ij as A,fq as J}from"./chunk-XGpVqsM_.js";import{u as M}from"./chunk-Bs2FV5Yv.js";import{f as G}from"./chunk-B_Ihmwjk.js";import{L as U}from"./chunk-IKXz-qeP.js";import{d as Z}from"./chunk-BiHeKmc3.js";import"./chunk-DyqHK6XP.js";import"./chunk-Dix477Sg.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CrMA_peF.js";import"./chunk-TII7h--m.js";import"./chunk-BjJztz3_.js";import"./chunk-CxK2Oj-r.js";import"./chunk-UhNHdoQU.js";import"./chunk-CTlztY7w.js";import"./chunk-DhzMXUWC.js";import"./chunk-DGkpYqI6.js";const x="esri.layers.WFSLayer";class Zt{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(e,t={}){const{getFeatureUrl:r,getFeatureOutputFormat:s,fields:n,geometryType:u,featureType:o,maxRecordCount:i,maxTotalRecordCount:p,maxPageCount:w,objectIdField:f,customParameters:F}=e,{spatialReference:l,getFeatureSpatialReference:h}=E(r,o,e.spatialReference);try{await q(h,l)}catch{throw new d("unsupported-projection","Projection not supported",{inSpatialReference:h,outSpatialReference:l})}c(t),this._customParameters=F,this._featureType=o,this._fieldsIndex=P.fromLayerJSON({fields:n,dateFieldsTimeReference:n.some((T=>T.type==="esriFieldTypeDate"))?{timeZoneIANA:I}:null}),this._geometryType=u,this._getFeatureUrl=r,this._getFeatureOutputFormat=s,this._getFeatureSpatialReference=h,this._maxRecordCount=i,this._maxTotalRecordCount=p,this._maxPageCount=w,this._objectIdField=f,this._spatialReference=l;let m=await this._snapshotFeatures(t);if(m.errors.length>0&&(this._supportsPagination=!1,m=await this._snapshotFeatures(t),m.errors.length>0))throw m.errors[0];const S={type:"object-id",fieldName:f};return this._queryEngine=new U({fieldsIndex:this._fieldsIndex,geometryType:u,hasM:!1,hasZ:!1,featureIdInfo:S,spatialReference:l,timeInfo:null,featureStore:new G({geometryType:u,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(m.features),{warnings:C(m),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new d("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),(await this._queryEngine.executeQueryForIds(e,t.signal)).filter($)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),M(this._queryEngine,e,t.signal)}async queryAttributeBins(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(e,t.signal)}async refresh(e){return this._customParameters=e.customParameters,this._maxRecordCount=e.maxRecordCount,this._maxTotalRecordCount=e.maxTotalRecordCount,this._maxPageCount=e.maxPageCount,this._snapshotTask?.abort(),this._snapshotTask=b((t=>this._snapshotFeatures({signal:t}))),this._snapshotTask.promise.then((t=>{this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(t.features);for(const r of C(t))g.getLogger(x).warn(new y("wfs-layer:refresh-warning",r.message,r.details));t.errors?.length&&g.getLogger(x).warn(new y("wfs-layer:refresh-error","Refresh completed with errors",{errors:t.errors}))}),(()=>{this._queryEngine.featureStore.clear()})),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(e){const t=e?.signal,r=this._maxTotalRecordCount,s=this._maxPageCount,n=this._supportsPagination&&s>1?await j(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:t}):void 0;let u=[];const o=[];if(n==null)try{u=await this._singleQuery(t)}catch(i){R(i)||o.push(i)}else{const i=Math.min(n,r),p=v(this,N(Math.ceil(i/this._maxRecordCount),1,s),t);await Promise.allSettled(Array.from({length:10}).map((()=>W(p,u,o))))}return c(t),{features:u,totalRecordCount:n,maxTotalRecordCount:r,maxPageCount:s,errors:o}}async _singleQuery(e){const t=Number.isFinite(this._maxRecordCount)&&this._maxRecordCount>0?this._maxRecordCount:void 0,r=await _(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,count:t,signal:e});return this._processGeoJSON(r,{signal:e})}async _pageQuery(e,t){const r=e*this._maxRecordCount,s=await _(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:r,count:this._maxRecordCount,signal:t});return this._processGeoJSON(s,{startIndex:r,signal:t})}_processGeoJSON(e,t){O(e,this._getFeatureSpatialReference.wkid);const{startIndex:r,signal:s}=t;c(s);const n=Q(e,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!k(this._spatialReference,this._getFeatureSpatialReference))for(const o of n)o.geometry!=null&&(o.geometry=L(A(J(o.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let u=r??1;for(const o of n){const i={};Z(this._fieldsIndex,i,o.attributes,!0),o.attributes=i,i[this._objectIdField]==null&&(o.objectId=i[this._objectIdField]=u++)}return n}}function*v(a,e,t){for(let r=0;r<e;r++)yield a._pageQuery(r,t)}async function W(a,e,t){let r=a.next();for(;!r.done;){try{const s=await r.value;e.push(...s)}catch(s){R(s)||t.push(s)}r=a.next()}}function C(a){const e=[];return a.totalRecordCount!=null&&(a.features.length<a.totalRecordCount&&e.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${a.features.length} of ${a.totalRecordCount} in ${a.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:a.features.length,totalRecordCount:a.totalRecordCount}}),a.totalRecordCount>a.maxTotalRecordCount&&e.push({name:"wfs-layer:large-dataset",message:`The number of ${a.totalRecordCount} features exceeds the maximum allowed of ${a.maxTotalRecordCount}.`,details:{recordCount:a.features.length,totalRecordCount:a.totalRecordCount,maxTotalRecordCount:a.maxTotalRecordCount}})),e}export{Zt as default};
