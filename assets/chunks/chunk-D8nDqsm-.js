const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/chunk-DSo0DT4y.js","assets/chunks/chunk-BUVSeX7E.js","assets/chunks/chunk-Da9IW-EP.js","assets/chunks/chunk-DSTRjkE3.js","assets/chunks/chunk-RvJNgVq9.js","assets/chunks/chunk-B92kdZ15.js","assets/chunks/chunk-XGpVqsM_.js","assets/chunks/chunk-DyqHK6XP.js","assets/chunks/chunk-Dix477Sg.js","assets/static/onCreateApp.DRclb75I.css","assets/static/src_layouts_default_aside-6ea01de8.BjbON5Ij.css","assets/static/src_layouts_default_navbar-403af73f.u3IytZI2.css","assets/static/vitepress_components_VPDocOutlineItem-0942cada.tkRPm3MX.css","assets/static/vitepress_components_VPDocAsideOutline-b0d47973.Ds9uynvM.css","assets/static/src_styles_common_reset-f7a68b0e.BAKp5MHC.css","assets/static/src_styles_common_color-a7a524c7.CVau4Kly.css","assets/static/src_styles_common_is-19c6c24d.DKAKruk7.css","assets/static/style-bd199161.DVw0mqUT.css","assets/static/style-ee024ed9.COZrvgTQ.css","assets/static/src_styles_element-plus_reset-752cc03d.htEpr2M-.css","assets/static/src_styles_element-plus_form-item-877afd6a.Dy4HJB2K.css","assets/static/src_styles_element-plus_table-6cbc5816.DXG1SsxY.css","assets/static/src_styles_element-plus_tabs-67d1a98b.BMDMQPDv.css","assets/static/src_styles_element-plus_tree-cc28503d.nmT5n0wM.css","assets/static/src_styles_element-plus_dialog-7f91a00e.D4nTsJge.css","assets/static/src_styles_element-plus_breadcrumb-8ce3a1a1.CwEEGJYc.css","assets/static/src_styles_element-plus_menu-33b44202.hFAFO4eV.css","assets/static/style-769e248f.DDhCRjCR.css","assets/static/style-22d30bfc.TwvRHEyK.css","assets/static/style-d089cd8f.Cc2PI5FU.css","assets/static/style-e86a26b0.CqxSaK_p.css","assets/static/style-51eec318.o0zCZ1y4.css","assets/static/src_styles_form_sub-7371c85e.y3zh-mS3.css","assets/static/src_styles_layout_index-2891f17b.BNCqvENj.css","assets/static/style-ab3e4bd5.BuWAVw4m.css","assets/static/style-2bf8ed1f.CRScSR0a.css","assets/static/style-603b4474.BZwgKm1s.css","assets/static/style-c5252da0.CFNWXuiE.css","assets/static/style-6fd0e256.X9gIGpBH.css","assets/static/style-3c45b3af.Di2LGzYR.css","assets/static/style-27a3a9b4.C8H6Fcyw.css","assets/static/src_styles_markdown_reset-fbd16bdd.D3vNaEcf.css","assets/static/src_styles_markdown_shiki-0d2326df.uut6VZYd.css","assets/static/style-b2fddf65.BmytK7dW.css","assets/static/style-2208d37a.ChwmoEkt.css","assets/static/pages_uno-88a4f3d7.lpyrja-g.css","assets/chunks/chunk-CrMA_peF.js","assets/chunks/chunk-DP7_WWTp.js","assets/chunks/chunk-DjrwEoDI.js"])))=>i.map(i=>d[i]);
import{GG as Qe,i7 as Xe,x3 as C,GH as Ds,dt as Ut,b3 as Ye,x8 as Ps,eB as He,eQ as Es,ii as js,bE as E,fm as _e,iu as zt,aY as A,mK as Gs,GI as Ws,GJ as Ls,p7 as k,t0 as L,GK as Je,k0 as Us,GL as zs,Ag as Ns,a2 as Bs,eZ as Vs,ij as ce,t4 as Nt,c6 as _t,g3 as pt,GM as Qs,D3 as Fe,td as Ze,Dk as ft,Dl as gt,fq as Bt,d7 as m,A as pe,L as Xs,kD as re,GN as Ys,p4 as yt,fX as Hs,GO as Y,hV as Js,eR as mt,G2 as Vt,hQ as Zs,EB as K,aI as Qt,te as Ke,aD as Xt,n as q,jX as Ks,aP as Yt,g9 as bt,GP as er,jV as tr,jU as sr,as as Ht,aK as De,aj as z,ak as ie,am as Jt,s as R,c2 as rr,eN as ir,D2 as ar,D4 as nr,sy as or,D5 as lr,vs as Zt,tr as Pe,u0 as cr,GQ as Kt,GR as ur,bT as fe,oZ as ue,dw as dr,aJ as es,iI as hr,H as et,u1 as _r,tV as pr,GS as fr,c1 as ts,GT as It,GU as Me,zK as gr,u4 as yr,fE as mr,i4 as br,gm as Ir,tU as wr,lT as vr,GV as Sr,w as xr}from"./chunk-XGpVqsM_.js";import{b as wt,l as ge,p as tt,i as ye,u as T,c as kr,v as st,a as Fr,x as Mr,d as Cr,e as Tr}from"./chunk-B0RKIjYQ.js";import{r as N,s as B,t as Or,i as ss}from"./chunk-CKwt2uXH.js";import{r as $r,y as qr}from"./chunk-TlSPVQD_.js";import{e as Ar}from"./chunk-UhNHdoQU.js";import{L as rs}from"./chunk-IKXz-qeP.js";import{_ as Ee}from"./chunk-Dix477Sg.js";import{s as Rr,i as Dr,u as Pr}from"./chunk-COwRrOAq.js";import{a as Er}from"./chunk-bVDAhtkp.js";import{$ as vt}from"./chunk-CtPuv7rn.js";import{e as jr}from"./chunk-iL5WjyEH.js";import{GeometryInfoDescriptor as Gr,MultiScaleInfo as Wr,GeometryType as ee}from"./chunk-6EcuAM-e.js";import{a as Lr}from"./chunk-lCeLMt0C.js";import{createConnection as Ur}from"./chunk-Cq7fxPtq.js";import{d as zr}from"./chunk-M42oCGLT.js";import"./chunk-DyqHK6XP.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CrMA_peF.js";import"./chunk-BFLErLYb.js";import"./chunk-TII7h--m.js";import"./chunk-cx_wZU7Q.js";import"./chunk-QXap_35O.js";import"./chunk-C8-lVsN3.js";import"./chunk-CUzevAry.js";import"./chunk-dkOBxgg-.js";import"./chunk-sqDlPwdI.js";import"./chunk-CTlztY7w.js";import"./chunk-DhzMXUWC.js";import"./chunk-DGkpYqI6.js";import"./chunk-B92kdZ15.js";import"./chunk-BiHeKmc3.js";import"./chunk-CujHzHWW.js";let Nr=class{constructor(e){this._client=e,this.layerView=this._client.createInvokeProxy(""),this.container=this._client.createInvokeProxy("container"),this._eventLog=this._client.createInvokeProxy("eventLog")}onEvent(e){Qe(this._eventLog.onEvent(e))}};const me=1,rt=2,be=4,it=8,at=16,Ie=32,nt=64,we=128;function Ce(u){switch(u){case me:case it:case Ie:return-1;case rt:case nt:return 0;case be:case at:case we:return 1}}function Te(u){switch(u){case me:case rt:case be:return-1;case it:case at:return 0;case Ie:case nt:case we:return 1}}const St=me|it|Ie,xt=be|at|we,kt=me|rt|be,Ft=Ie|nt|we;let Br=class{constructor(e,t,s,r,i=0){this.tileKey=e,this._bufferingEnabled=t,this._sizeHint=i,this._meshes={self:new wt(this.id,this._sizeHint),neighbors:new Array},this._currentRecordOverlaps=0,this._currentEntityOverlaps=0;const a=r?1:0;this._copyBufferedDataIntoSelf=s&&this._bufferingEnabled&&e.level===a}get id(){return this.tileKey.id}vertexStart(){return this._meshes.self.vertexStart()??0}vertexCount(){return this._meshes.self.vertexCount()}indexCount(){return this._meshes.self.indexCount()}indexEnsureSize(e){this._meshes.self.indexEnsureSize(e)}entityStart(e,t=e){this._currentEntityOverlaps=0,this._meshes.self.entityStart(e,t)}entityRecordCount(){return this._meshes.self.entityRecordCount()}entityEnd(){if(this._meshes.self.entityEnd(),this._bufferingEnabled){if(this._copyBufferedDataIntoSelf)return;for(let e=0;e<8;e++){const t=1<<e;this._currentEntityOverlaps&t&&this._meshes.neighbors[e].entityEnd()}}}recordStart(e,t,s){this._currentRecordOverlaps=0,this._meshes.self.recordStart(e,t,s)}recordEnd(e=0){const t=this._meshes.self.recordEnd(this._currentRecordOverlaps);return t&&this._currentRecordOverlaps!==0?(this._copyIntoNeighbors(),this._currentEntityOverlaps|=this._currentRecordOverlaps,!0):t}recordBounds(e,t,s,r){this._bufferingEnabled&&this._addOverlap(e,t,s,r)}recordCount(){return this._meshes.self.recordCount()}metricStart(e){this._meshes.self.metricStart(e)}metricBoxWrite(e){this._meshes.self.metricBoxWrite(e)}metricEnd(){this._meshes.self.metricEnd()}vertexWrite(e){this._meshes.self.vertexWrite(e)}vertexWriteF32(e){this._meshes.self.vertexWriteF32(e)}vertexWriteRegion(e){this._meshes.self.vertexWriteRegion(e)}indexWrite(e){this._meshes.self.indexWrite(e)}serialize(e){const t={message:[],transferList:[]},s=this._meshes.self.serialize();return t.message.push({tileId:this.tileKey.id,...s.message}),t.transferList.push(...s.transferList),this._meshes.neighbors.forEach(((r,i)=>{const a=r.serialize(),n=1<<i,o=Ce(n),c=Te(n),l=new Xe(this.tileKey).getNormalizedNeighbor(o,c,e);t.message.push({tileId:l.id,...a.message}),t.transferList.push(...a.transferList)})),t}_addOverlap(e,t,s,r){const i=Math.min(C/2,s),a=Math.min(C/2,r),n=255^((e<0+i?xt:e>=C-i?St:xt|St)|(t<0+a?Ft:t>=C-a?kt:Ft|kt));this._currentRecordOverlaps|=n}_copyIntoNeighbors(){for(let e=0;e<8;e++){const t=1<<e;if(this._currentRecordOverlaps&t){if(this._copyBufferedDataIntoSelf){const a=-Ce(t)*C,n=-Te(t)*C;if(n!==0)continue;this._meshes.self.copyLast(a,n);continue}if(!this._meshes.neighbors[e]){const a=Math.floor(this._sizeHint/16);this._meshes.neighbors[e]=new wt(t,a)}const s=this._meshes.neighbors[e],r=-Ce(t)*C,i=-Te(t)*C;s.copyLastFrom(this._meshes.self,r,i)}}}},Vr=class{},W=class is{constructor(){this._defaultResult=null,this._backgroundFillResult=null}static async from(e,t){const s=new is;return s.setDefault(await e.createMeshWriters(t.meshes)),s}size(){return 1}getDefault(){return this._defaultResult}setDefault(e){this._defaultResult=e}getBackgroundFill(){return this._backgroundFillResult}setBackgroundFill(e){this._backgroundFillResult=e}hasArcadeDependency(e){return this._defaultResult?.some((t=>t.hasArcadeDependency(e)))??!1}match(e,t,s){const r=this.doMatch(e,t)||this.getDefault();if(r&&r.length>0){const i=this.getBackgroundFill();if(i)return[...i,...r]}return r}getSortKey(e,t){return 0}doMatch(e,t){return null}async fetchResources(e,t){}},Qr=class as extends W{static async fromDictionaryRenderer(e,t){const s=await Ds.from(t.dictionaryInfo,t.userConfig,t.fieldMap);return new as(e,s)}constructor(e,t){super(),this._context=e,this._evaluator=t,this._controlStringToPromise=new Map,this._controlStringToGroup=new Map}async fetchResources(e,t){const s=t.getCursor(),r=new Set;for(;s.next();){const a=this._evaluateControlString(s);a&&r.add(a)}const i=Array.from(r.values()).map((a=>this._ensureGroup(e,a)));await Promise.all(i)}match(e,t){const s=this._evaluateControlString(e);return s?this._controlStringToGroup.get(s):null}_evaluateControlString(e){const t=e.readLegacyFeatureWorldSpace();return this._evaluator.evaluate(t,0,e.fields,null)}_ensureGroup(e,t){let s=this._controlStringToPromise.get(t);return s==null&&(s=this._fetchGroup(e,t),this._controlStringToPromise.set(t,s)),s}async _fetchGroup(e,t){const s=await e.fetchDictionaryResourceImmediate({type:"dictionary-request",controlString:t});if(!s)return;const r=await this._context.createMeshWriters(s.meshes);this._controlStringToGroup.set(t,r)}},Xr=class ns extends W{constructor(e,t){super(),this._intervals=[],this._isMaxInclusive=t,this._field=e}static async fromIntervalSchema(e,t){const s=await e.storage.createComputedField(t),r=new ns(s,t.isMaxInclusive);await Promise.all(t.intervals.map((async n=>{const o=await e.createMeshWriters(n.meshes);r.add(n,o)})));const i=await e.createMeshWriters(t.defaultSymbol);r.setDefault(i);const a=await e.createMeshWriters(t.backgroundFill);return r.setBackgroundFill(a),r}add(e,t){this._intervals.push({interval:e,result:t}),this._intervals.sort(((s,r)=>s.interval.min-r.interval.min))}size(){return super.size()+this._intervals.length}hasArcadeDependency(e){return this._field?.hasArcadeDependency(e)||this._intervals.some((t=>t.result.some((s=>s.hasArcadeDependency(e)))))}doMatch(e,t){const s=this._field?.read(e,t);if(s==null||isNaN(s)||s===1/0||s===-1/0)return null;for(let r=0;r<this._intervals.length;r++){const{interval:i,result:a}=this._intervals[r],n=s>=i.min,o=this._isMaxInclusive?s<=i.max:s<i.max;if(n&&o)return a}return null}},Yr=class os extends W{static async fromLabelSchema(e,t){const s=t.classes.map((async i=>{const a=await e.createMeshWriters(i.meshes);return{minScale:i.minScale,maxScale:i.maxScale,meshes:a,expression:null,where:await e.storage.createWhereClause(i.where)}})),r=await Promise.all(s);return new os(r)}constructor(e){super(),this._labels=e}match(e,t,s){if(!this._labels.length)return null;const r=this._getLabels(t.$view.scale),i=[];for(const a of r)a.where&&!a.where(e,s)||i.push(...a.meshes);return i}hasArcadeDependency(e){return this._labels.some((t=>t.meshes.some((s=>s.hasArcadeDependency(e)))))}_getLabels(e){return this._labels.filter((t=>this._validForTileScale(t,e)))}_validForTileScale(e,t){const s=t-t/4,r=t+t/2;return(!e.minScale||e.minScale>=s)&&(!e.maxScale||e.maxScale<=r)}},Hr=class ls extends W{constructor(e,t){super(),this._defaultSymbolSortKey=0,this._nullResult=null,this._resultsMap=new Map,this._fields=[],this._fields=e,this._separator=t||""}static async fromMatcherSchema(e,t){const s=t.expression?[e.storage.createComputedField({expression:t.expression})]:[t.field?e.storage.createComputedField({field:t.field}):null,t.field2?e.storage.createComputedField({field:t.field2}):null,t.field3?e.storage.createComputedField({field:t.field3}):null],r=(await Promise.all(s)).filter((o=>!!o)),i=new ls(r,t.fieldDelimiter),a=await e.createMeshWriters(t.defaultSymbol);i.setDefault(a);const n=await e.createMeshWriters(t.backgroundFill);return i.setBackgroundFill(n),await Promise.all(t.map.map((async(o,c)=>{const l=await e.createMeshWriters(o.symbol);o.value==="<Null>"?i.setNullResult(l):i.add(o.value,l,c+1)}))),i}setNullResult(e){this._nullResult=e}getSortKey(e,t){const s=this._getValueFromFields(e,t);if(s==null||s===""||s==="<Null>")return 0;const r=this._resultsMap.get(s.toString());return r?r.sortKey:this._defaultSymbolSortKey}add(e,t,s){this._resultsMap.set(e.toString(),{meshWriters:t,sortKey:s}),this._defaultSymbolSortKey=Math.max(this._defaultSymbolSortKey,s+1)}size(){return super.size()+this._resultsMap.size}hasArcadeDependency(e){return this._fields.some((t=>t.hasArcadeDependency(e)))||[...this._resultsMap.values()].some((t=>t.meshWriters.some((s=>s.hasArcadeDependency(e)))))||this._nullResult?.some((t=>t.hasArcadeDependency(e)))||!1}doMatch(e,t){const s=this._getValueFromFields(e,t);if(this._nullResult!==null&&(s==null||s===""||s==="<Null>"))return this._nullResult;if(s==null)return null;const r=s.toString();return this._resultsMap.get(r)?.meshWriters}_getValueFromFields(e,t){const s=[];for(const r of this._fields){const i=r.read(e,t);i==null||i===""?s.push("<Null>"):s.push(i)}return s.join(this._separator)}};async function G(u,e){switch(e.type){case"simple":case"heatmap":case"dot-density":case"pie-chart":return W.from(u,e);case"interval":return Xr.fromIntervalSchema(u,e);case"dictionary":return Qr.fromDictionaryRenderer(u,e);case"label":return Yr.fromLabelSchema(u,e);case"map":return Hr.fromMatcherSchema(u,e);case"subtype":return Jr.fromSubtypes(u,e);case"cluster":return Zr.fromClusterSchema(u,e);case"track":return Kr.fromTrackSchema(u,e);default:throw new Error("Impl")}}let Jr=class cs extends W{constructor(e,t){super(),this._subMatchers=e,this._subtypeField=t}static async fromSubtypes(e,t){const s=new Map,r=[];for(const i in t.renderers){const a=parseInt(i,10),n=G(e,t.renderers[i]).then((o=>s.set(a,o)));r.push(n)}return await Promise.all(r),new cs(s,t.subtypeField)}match(e,t,s){const r=e.readAttribute(this._subtypeField),i=this._subMatchers.get(r);return i?i.match(e,t,s):null}hasArcadeDependency(e){for(const t of this._subMatchers.values())if(t.hasArcadeDependency(e))return!0;return!1}},Zr=class us extends W{static async fromClusterSchema(e,t){const[s,r]=await Promise.all([G(e,t.feature),G(e,t.cluster)]);return new us(s,r)}constructor(e,t){super(),this._featureMatcher=e,this._clusterMatcher=t}match(e,t,s){return e.readAttribute("cluster_count")===1?this._featureMatcher.match(e,t,s):this._clusterMatcher.match(e,t,s)}hasArcadeDependency(e){return this._featureMatcher.hasArcadeDependency(e)||this._clusterMatcher.hasArcadeDependency(e)}},Kr=class ds extends W{static async fromTrackSchema(e,t){const[s,r,i]=await Promise.all([G(e,t.previousObservation),G(e,t.latestObservation),G(e,t.trackLine)]);return new ds(s,r,i)}constructor(e,t,s){super(),this._previousObservationMatcher=e,this._latestObservationMatcher=t,this._trackLineMatcher=s}match(e,t,s){switch(e.readAttribute(N)){case B.TrackLine:return this._trackLineMatcher.match(e,t,s);case B.LatestObservation:return this._latestObservationMatcher.match(e,t,s);case B.PreviousObservation:return this._previousObservationMatcher.match(e,t,s)}return null}hasArcadeDependency(e){return this._trackLineMatcher.hasArcadeDependency(e)||this._latestObservationMatcher.hasArcadeDependency(e)||this._previousObservationMatcher.hasArcadeDependency(e)}},ei=class hs extends Vr{static async create(e,t){const s=await G(e,t.symbology),r=t.labels?await G(e,t.labels):null;return new hs(s,r)}constructor(e,t){super(),this._symbology=e,this._labels=t}destroy(){}async enqueueMatcherRequests(e,t){await Promise.all([this._symbology.fetchResources(e,t),this._labels?.fetchResources(e,t)])}enqueueWriterRequests(e,t,s,r){const i=this._symbology.match(t,s,r);if(i){for(const a of i)a.enqueueRequest(e,t,s);if(this._labels){const a=this._labels.match(t,s,r);if(!a)return;for(const n of a)n.enqueueRequest(e,t,s)}}}write(e,t,s,r,i,a){const n=this._symbology.match(s,r,i);if(n){for(const o of n)o.write(e,t,s,r,a);if(e.entityRecordCount()>=1&&this._labels){const o=this._labels.match(s,r,i);if(!o)return;for(const c of o)c.setReferences(n),c.write(e,t,s,r,a)}}}getSortKey(e,t){return this._symbology.getSortKey(e,t)}hasArcadeDependency(e){return!(!this._symbology.hasArcadeDependency(e)&&!this._labels?.hasArcadeDependency(e))}},ti=class{constructor(e,t,s,r,i){this.storage=e,this.proxy=t,this.viewParams=s,this.registry=r,this.fieldsMap=i}async createMeshWriters(e){const t=e.map((s=>this.registry.createMeshWriter(this.storage,this.proxy,this.viewParams,s,this.fieldsMap)));return Promise.all(t)}},si=class{constructor(e){this._outstandingMessages=[],this._queue=new Ut({concurrency:e.concurrency,process:t=>e.process(t)})}async push(e){if(e.end)return await Promise.all(this._outstandingMessages),await this._queue.push(e),void(this._outstandingMessages=[]);const t=this._queue.push(e);return this._outstandingMessages.push(t),t}},ot=class je{static async create(e,t){if(t.statisticType==="count"){const r=new $r(1);return new je(t.name,t.alias,t.type,t.statisticType,r)}const s=await e.createComputedField({expression:t.onStatisticExpression?.expression,field:t.onStatisticField});return new je(t.name,t.alias,t.type,t.statisticType,s)}constructor(e,t,s,r,i){this.name=e,this.alias=t,this.type=s,this.statisticType=r,this.computed=i}},ve=class{constructor(e){this.subscription=e,this.handledChunks=new Set}destroy(){}},_s=class{constructor(e,t,s){this._source=e,this._attributeStore=t,this._sqlOptions=s,this._sendStates=new Map}destroy(){}get enablePixelBuffering(){return!0}get isAggregate(){return!1}onSubscribe(e){const t=this.createState(e);this._sendStates.set(e.key.id,t),this.updateChunks()}onUnsubscribe(e){this._sendStates.get(e.key.id)?.destroy(),this._sendStates.delete(e.key.id)}get hasSubscribers(){return this._sendStates.size>0}requiresInvalidation(){return!1}invalidate(){const e=Array.from(this._sendStates.values());this._sendStates.clear();for(const t of e)t.destroy(),this.onSubscribe(t.subscription)}invalidateAttributeData(e){}hasArcadeDependency(e){return!1}getFeatureObjectIdsForAggregate(e){throw new Error("InternalError: AggregateId lookup not supported")}getDisplayIds(e){return this.displayMap(e,(t=>t),(t=>t))}getDisplayAndObjectIds(e){return this.displayMap(e,(t=>t),((t,s,r)=>[t,r]))}afterUpdateChunks(){}},lt=class extends _s{constructor(e,t,s,r,i){super(e,t,i),this.spatialReference=s,this.aggregateFields=r,this._arcadeDependencies=new Set,this.events=new Ye,this.featureAdapter=Ar;for(const a of r)Ps(this._arcadeDependencies,a.computed)}get aggregateQueryEngine(){return this._aggregateQueryEngine||(this._aggregateQueryEngine=new rs({featureStore:this,fieldsIndex:this._metadata.fieldsIndex,geometryType:this._metadata.geometryType,featureIdInfo:this._metadata.featureIdInfo,spatialReference:this.spatialReference})),this._aggregateQueryEngine}get isAggregate(){return!0}removeChunks(e){}hasArcadeDependency(e){return this._arcadeDependencies.has(e)}forEach(e){return this.forEachAggregateWorldSpace(e)}forEachInBounds(e,t){}forEachBounds(e,t){const s=He();for(const r of e){const i=Es(s,r.geometry,!1,!1);i&&t(i)}}},V=class{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.clear=s,this.end=r,this.debugInfo=i,this.type="append"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"append",clear:this.clear,id:this.id,append:e,end:this.end,debugInfo:this.debugInfo,subscriptionVesrion:this.subscription.version,version:t,attributeEpoch:s}}},Ge=class{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.remove=s,this.end=r,this.debugInfo=i,this.type="update"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"update",id:this.id,modify:e,debugInfo:this.debugInfo,remove:this.remove,version:t,subscriptionVesrion:this.subscription.version,end:this.end,attributeEpoch:s}}},ri=class extends ve{constructor(e,t){super(e),this.bins=new Map,this.featureCache=new Map,this.done=!1,this._store=t}reset(){this.destroy(),this.done=!1}destroy(){const e=this.subscription.tile.key.level;for(const t of this.featureCache.keys())this._store.releaseDisplayIdForObjectId(`${t}.${e}`);this.bins.clear(),this.featureCache.clear(),this.handledChunks.clear()}get tile(){return this.subscription.tile}*featuresWorldSpace(){for(const e of this.featureCache.values()){const t=e.clone();t.geometry&&Gs(t.geometry,t.geometry,!1,!1,this.subscription.tile.transform),yield t}}},ii=class ps extends lt{static async create(e,t,s,r,i,a){const n=new ge({spatialReference:t}),o=await Promise.all(e.fields.map((async l=>ot.create(n,l)))),c=e.featureFilter?await tt.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:t,filterJSON:e.featureFilter}):null;return e.index.type==="geohash"&&await js(t,E.WGS84),new ps(e,c,i,o,t,s,r,a)}constructor(e,t,s,r,i,a,n,o){super(a,n,i,r,o),this._schema=e,this._featureFilter=t,this._arcadeContextInfo=s,this._metadata=ye.createFeature({geometryType:"esriGeometryPolygon",featureIdInfo:{type:"object-id",fieldName:"aggregateId"},fieldsIndex:new _e(e.fields).toJSON(),globalIdField:null,spatialReference:a.metadata.spatialReference,outSpatialReference:a.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}createState(e){return new ri(e,this._attributeStore)}async*applyOverrideUpdate(e){for(const t of this._sendStates.values())t.reset(),yield new V(t.subscription,T.empty(this._source.metadata),!0,!1,{})}displayMap(e,t,s){const r=new Map(e.map((a=>[t(a),a]))),i=[];for(const a of this._sendStates.values())for(const n of a.featuresWorldSpace()){const{objectId:o,displayId:c}=n,l=r.get(o);if(l!=null){const d=s(c,l,o);i.push(d),r.delete(o)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const i of this._sendStates.values())for(const a of i.featuresWorldSpace())t.has(a.displayId)&&!s.has(a.objectId)&&(a.geometry&&r.push({...zt(a,this._metadata.geometryType,!1,!1),displayId:a.displayId}),s.add(a.objectId));return{features:[],aggregates:r,tracks:[]}}getFeatureObjectIdsForAggregate(e){for(const t of this._sendStates.values())for(const s of t.bins.values())if(s.id===e)return Array.from(s.containedObjectIds);return[]}async*updateChunks(){for(const e of this._sendStates.values())yield*this._update(e,this._source)}forEachAggregateWorldSpace(e){const t=new Set;for(const s of this._sendStates.values())for(const r of s.featuresWorldSpace())t.has(r.objectId)||(e(r),t.add(r.objectId))}_createIndexOptions(e){switch(this._schema.index.type){case"geohash":return{type:"geohash",fields:this.aggregateFields,featureFilter:this._featureFilter,geohashLevel:this._schema.index.fixBinLevel,spatialReference:this.spatialReference,arcadeContextInfo:this._arcadeContextInfo,scale:e.scale,sqlOptions:this._sqlOptions};case"grid":{const t=this._schema.index.fixedBinLevel,s=t!=null?e.tileInfoView.getLODInfoAt(t).scale:e.scale;return{type:"grid",fields:this.aggregateFields,cellSize:this._schema.index.size,featureFilter:this._featureFilter,spatialReference:this.spatialReference,arcadeContextInfo:this._arcadeContextInfo,scale:s,sqlOptions:this._sqlOptions}}}}async*_update(e,t){const{handledChunks:s,subscription:r,bins:i,featureCache:a}=e,n=r.tile;if(e.done)return;for(const g of t.chunks()){if(s.has(g.chunkId))continue;s.add(g.chunkId);const f=g.queryInfo;if("tileId"in f){const y=new Xe(f.tileId);if(y.level!==n.level||y.world!==n.key.world)continue}g.getAggregateIndex(this._createIndexOptions(e.tile)).putBounded(i,e.tile.extent,e.tile.resolution)}const o=[],c=r.tile.transform,l=r.tile.key.level;for(const g of i.values()){let f=a.get(g.id);if(f)f.attributes=g.getAttributes();else{const y=g.getGeometry(this.spatialReference,c);f=new A(y,g.getAttributes(),null,g.id),y||(f.centroid=g.getGeometricCentroid(this.spatialReference,c)),f.displayId=this._attributeStore.createDisplayIdForObjectId(`${f.objectId}.${l}`),a.set(g.id,f)}o.push(f)}this.events.emit("changed"),e.done=!t.updateTracking.updating;const d=T.fromOptimizedFeatures(o,this._metadata,c),h=d.getCursor(),p=e.subscription.tile.createArcadeEvaluationOptions(this._arcadeContextInfo);for(;h.next();)this._attributeStore.setAttributeData(h.getDisplayId(),h,p,this._sqlOptions);yield new Ge(e.subscription,d,[],e.done,{})}},fs=class{constructor(e){this._statistics=e}get statistics(){return this._statistics}};const Mt=Math.PI/180;let ct=class We{static create(e){return new We(e.map((t=>ai(t))))}constructor(e){this._statistics=e}values(){return this._statistics.values()}insert(e,t){for(const s of this._statistics)s.insert(e,t)}merge(e){for(let t=0;t<this._statistics.length;t++){const s=this._statistics[t],r=e._statistics[t];if(s.field.name!==r.field.name)throw new Error("InternalError: Tried to merge incompatible statistics");s.merge(r)}}clone(){return new We(this._statistics.map((e=>e.clone())))}};function ai(u){switch(u.statisticType){case"min":return new ni(u);case"max":return new oi(u);case"avg":return new ci(u);case"avg_angle":return new ui(u);case"sum":case"count":return new li(u);case"mode":return new di(u)}}let Q=class{constructor(e){this.field=e}insert(e,t){if(!this.field.computed)return;const s=this.field.computed.read(e,t);kr(s)||this._insertValue(s)}},ni=class gs extends Q{constructor(){super(...arguments),this.type="min",this.value=Number.MAX_VALUE}_insertValue(e){this.value=Math.min(this.value,e)}merge(e){this.value=Math.min(this.value,e.value)}clone(){const e=new gs(this.field);return e.value=this.value,e}},oi=class ys extends Q{constructor(){super(...arguments),this.type="max",this.value=Number.MIN_VALUE}_insertValue(e){this.value=Math.max(this.value,e)}merge(e){this.value=Math.max(this.value,e.value)}clone(){const e=new ys(this.field);return e.value=this.value,e}},li=class ms extends Q{constructor(){super(...arguments),this.type="sum",this.value=0}_insertValue(e){this.value+=e}merge(e){this.value+=e.value}clone(){const e=new ms(this.field);return e.value=this.value,e}},ci=class bs extends Q{constructor(){super(...arguments),this.type="avg",this._total=0,this._count=0}get value(){return this._total/this._count}_insertValue(e){this._total+=e,this._count+=1}merge(e){this._total+=e._total,this._count+=e._count}clone(){const e=new bs(this.field);return e._total=this._total,e._count=this._count,e}},ui=class Is extends Q{constructor(){super(...arguments),this.type="avg_angle",this._x=0,this._y=0,this._count=0}get value(){const e=this._x/this._count,t=this._y/this._count,s=180/Math.PI;return Math.atan2(t,e)*s}_insertValue(e){this._x=this._x+Math.cos(e*Mt),this._y=this._y+Math.sin(e*Mt),this._count+=1}merge(e){this._x+=e._x,this._y+=e._y,this._count+=e._count}clone(){const e=new Is(this.field);return e._x=this._x,e._y=this._y,e._count=this._count,e}},di=class ws extends Q{constructor(){super(...arguments),this._frequencies=new Map}get value(){let e,t=0;for(const[s,r]of this._frequencies.entries())r>t&&(t=r,e=s);return e}_insertValue(e){const t=this._frequencies.get(e);t!=null?this._frequencies.set(e,t+1):this._frequencies.set(e,1)}merge(e){for(const[t,s]of e._frequencies.entries()){const r=this._frequencies.get(t);r!=null?this._frequencies.set(t,r+s):this._frequencies.set(t,s)}}clone(){const e=new ws(this.field);return e._frequencies=new Map(this._frequencies),e}},Le=class ae extends fs{static createId(e,t){return`${e}.${t}`}static create(e,t,s,r){return new ae(e,t,ct.create(s),r)}constructor(e,t,s,r){super(s),this.gridX=e,this.gridY=t,this._worldUnitsPerCell=r,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._objectIds=new Set}get id(){return ae.createId(this.gridX,this.gridY)}get containedObjectIds(){return this._objectIds}get count(){return this._count}get firstObjectId(){return this._objectIds.values().next().value}get centroidXWorld(){return this._xWorldTotal/this._count}get centroidYWorld(){return this._yWorldTotal/this._count}clone(){const e=new ae(this.gridX,this.gridY,this._statistics.clone(),this._worldUnitsPerCell);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._firstFeatureAttributes=this._firstFeatureAttributes,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r){this._count===0?this._firstFeatureAttributes=e.readAttributes():this._firstFeatureAttributes=null,this._count+=1,this._xWorldTotal+=s,this._yWorldTotal+=r,this._statistics.insert(e,t),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._firstFeatureAttributes=e._firstFeatureAttributes,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroidX(e){return e==null?this.centroidXWorld:Ws(e,this.centroidXWorld)}getCentroidY(e){return e==null?this.centroidYWorld:Ls(e,this.centroidYWorld)}getGeometry(e,t){const s=this.gridX*this._worldUnitsPerCell,r=this.gridY*this._worldUnitsPerCell,i=new k([4],[s,r,s+this._worldUnitsPerCell,r,s+this._worldUnitsPerCell,r+this._worldUnitsPerCell,s,r+this._worldUnitsPerCell]);if(t!=null){const a=new k;return L(a,i,!1,!1,"esriGeometryPolygon",t)}return i}getCentroid(e){const t=new k([],[this.centroidXWorld,this.centroidYWorld]);if(e!=null){const s=new k;return L(s,t,!1,!1,"esriGeometryPoint",e)}return t}getGeometricCentroid(e,t){const s=this.gridX*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,r=this.gridY*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,i=new k([],[s,r]);if(t!=null){const a=new k;return L(a,i,!1,!1,"esriGeometryPoint",t)}return i}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return this._firstFeatureAttributes!=null?{...e,...this._firstFeatureAttributes}:e}},vs=class{constructor(e){this._options=e}insert(e,t){const s=e.getCursor(),{arcadeContextInfo:r,scale:i}=this._options,a=Je(i,r);for(;s.next();)this._insertFeature(s,a,this._options.sqlOptions,t)}_insertFeature(e,t,s,r){const{featureFilter:i}=this._options;if(i!==null&&!i.check(e,s))return;let a=0,n=0;if(e.geometryType==="esriGeometryPoint")a=e.readXWorldSpace(),n=e.readYWorldSpace();else{if(r){const c=e.readCentroidForDisplay();if(c==null)return;const[l,d]=c.coords;if(l<0||l>C||d<0||d>C)return}const o=e.readCentroidWorldSpace();if(o==null)return;a=o.coords[0],n=o.coords[1]}this._insert(e,a,n,t)}};const hi=96;function Ue(u,e){return Us(u)*zs*hi/e}let _i=class extends vs{constructor(e){super(e),this._cells=new Map,this._pixelsPerMapUnit=Ue(e.spatialReference,e.scale)}put(e){for(const t of this._cells.values()){const s=e.get(t.id);s?s.merge(t):e.set(t.id,t.clone())}}putBounded(e,t,s){const r=[t.xmin,t.ymin,t.xmax,t.ymax],[i,a,n,o]=r,c=Math.floor(i*this._pixelsPerMapUnit/this._options.cellSize),l=Math.floor(a*this._pixelsPerMapUnit/this._options.cellSize),d=Math.ceil(n*this._pixelsPerMapUnit/this._options.cellSize),h=Math.ceil(o*this._pixelsPerMapUnit/this._options.cellSize);for(let p=l;p<=h;p++)for(let _=c;_<=d;_++){const g=`${_}.${p}`,f=this._cells.get(g);if(!f)continue;const y=e.get(f.id);y?f&&!e.has(f.id)&&y.merge(f):e.set(f.id,f.clone())}}_insert(e,t,s,r){const i=t*this._pixelsPerMapUnit,a=s*this._pixelsPerMapUnit,n=Math.floor(i/this._options.cellSize),o=Math.floor(a/this._options.cellSize);this._getCellOrCreate(n,o).insert(e,r,t,s)}_getCellOrCreate(e,t){const s=Le.createId(e,t);let r=this._cells.get(s);if(!r){const i=1*this._options.cellSize/this._pixelsPerMapUnit;r=Le.create(e,t,this._options.fields,i),this._cells.set(s,r)}return r}},pi=class{constructor(e,t){this.inner=e,this.displayId=t}};const Ct=128;let fi=class extends ve{constructor(e){super(e),this.didSend=!1,this.done=!1}},gi=class{constructor(e,t,s,r,i){this._level=e,this._scale=t,this._indexOptions=s,this._clusterRadius=r,this._store=i,this._cells=new Map,this._handledChunks=new Set,this._statistics=new Map,this._clusters=new Map}destroy(){this._clearClusters()}_clearClusters(){for(const e of this._clusters.values())this._store.releaseDisplayIdForObjectId(e.inner.id);this._clusters.clear()}*aggregatesWorldSpace(){for(const e of this._clusters.values()){const t=e.inner.getCentroid(null);yield new A(t,e.inner.getAttributes(),null,e.inner.id,e.displayId)}}clusters(){return this._clusters.values()}updateChunks(e,t){let s=!1;for(const n of e){const o=n.queryInfo;"tileId"in o&&new Xe(o.tileId).level!==this._level||this._handledChunks.has(n.normalizedChunkId)||(this._handledChunks.add(n.normalizedChunkId),s=!0,n.getAggregateIndex({...this._indexOptions,scale:this._scale}).put(this._cells))}const r={xMin:1/0,yMin:1/0,xMax:-1/0,yMax:-1/0},i=Ue(this._indexOptions.spatialReference,this._scale),a=this._indexOptions.cellSize;for(const{subscription:n}of t){const o=n.tile.bounds,c=Math.floor(o[0]*i/a),l=Math.floor(o[1]*i/a),d=Math.ceil(o[2]*i/a),h=Math.ceil(o[3]*i/a);r.xMin=Math.min(r.xMin,c),r.yMin=Math.min(r.yMin,l),r.xMax=Math.max(r.xMax,d),r.yMax=Math.max(r.yMax,h)}return this._lastCellBounds!=null&&r.xMin===this._lastCellBounds.xMin&&r.yMin===this._lastCellBounds.yMin&&r.yMin===this._lastCellBounds.yMin&&r.yMax===this._lastCellBounds.yMax||(s=!0,this._lastCellBounds=r),s&&this._clusterCells(r),s}async updateStatistics(e){let t=!1;for(const s of this._clusters.values())s.inner.count>1&&(t=this._updateAggregateStatistics(this._statistics,s.inner)||t);if(t){const s=Array.from(this._statistics.entries()).map((([r,i])=>({fieldName:r,minValue:i.minValue,maxValue:i.maxValue})));await e.container.updateStatistics(this._level,s)}}createAggregateFeatures(e,t){const s=e.subscription,r=[],i=s.tile.transform;for(const a of this._clusters.values()){let n=a.inner.getCentroidX(i);const o=a.inner.getCentroidY(i),c=s.tile.lod,l=c.wrap?c.worldSize[0]:null,d=a.inner.count===1?a.inner.firstObjectId:a.inner.id,h=a.displayId;if(l!=null)if(l===1){const p=new k([],[n,o]),_=new A(p,a.inner.getAttributes(),null,d,h);_.geometry.coords[0]-=C,r.push(_);const g=new k([],[n,o]),f=new A(g,a.inner.getAttributes(),null,d,h);f.geometry.coords[0]+=C,r.push(f)}else n>C+C/2?n-=l*C:n<-256&&(n+=l*C);if(n<C+Ct&&n>=-128&&o<C+Ct&&o>=-128){const p=new k([],[n,o]),_=new A(p,a.inner.getAttributes(),null,d,h);r.push(_)}}return T.fromOptimizedFeatures(r,t,s.tile.transform)}_clusterCells(e){let t=Array.from(this._cells.values());t=t.sort(((n,o)=>o.count-n.count));const s=[];for(const n of this._clusters.values())s.push(n.inner.id);this._clusters.clear();const r=this._clusterRadius*(1/Ue(this._indexOptions.spatialReference,this._scale)),i=1+this._clusterRadius/this._indexOptions.cellSize,a=new Set;for(const n of t){if(a.has(n.id)||n.gridX<e.xMin||n.gridX>e.xMax||n.gridY<e.yMin||n.gridY>e.yMax)continue;const o=this._store.createDisplayIdForObjectId(n.id),c=new pi(n.clone(),o);a.add(n.id),this._clusters.set(n.id,c);const l=n.centroidXWorld,d=n.centroidYWorld;for(let h=n.gridY-i;h<=n.gridY+i;h++)for(let p=n.gridX-i;p<=n.gridX+i;p++){if(h===n.gridY&&p===n.gridX)continue;const _=this._cells.get(Le.createId(p,h));if(!_||a.has(_.id))continue;const g=Math.abs(_.centroidXWorld-l),f=Math.abs(_.centroidYWorld-d);g<r&&f<r&&(c.inner.merge(_),a.add(_.id))}}for(const n of s)this._store.releaseDisplayIdForObjectId(n)}_updateAggregateStatistics(e,t){let s=!1;for(const r of t.statistics.values()){if(r.field.type==="esriFieldTypeString")continue;const i=r.value,a=r.field,n=e.get(a.name);if(n){const{minValue:o,maxValue:c}=n,l=Math.min(n.minValue,i),d=Math.max(n.maxValue,i);o===l&&c===d||(n.minValue=l,n.maxValue=d,s=!0)}else e.set(a.name,{minValue:i,maxValue:i}),s=!0}return s}},yi=class Ss extends lt{static async create(e,t,s,r,i,a,n){const o=new ge({spatialReference:s}),c={type:"grid",fields:await Promise.all(t.fields.map((async l=>ot.create(o,l)))),spatialReference:s,featureFilter:t.featureFilter?await tt.create({geometryType:r.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:r.metadata.timeInfo,fieldsIndex:r.metadata.fieldsIndex,spatialReference:s,filterJSON:t.featureFilter}):null,cellSize:t.clusterRadius/4,arcadeContextInfo:a,sqlOptions:n};return new Ss(e,t.clusterRadius,c,t.fields,r,i,n)}constructor(e,t,s,r,i,a,n){super(i,a,s.spatialReference,s.fields,n),this._connection=e,this._clusterRadius=t,this._indexOptions=s,this._cellsPerScale=new Map,this._metadata=ye.createFeature({geometryType:"esriGeometryPoint",featureIdInfo:{type:"object-id",fieldName:"aggregateId"},fieldsIndex:new _e([...r,...this._source.metadata.fieldsIndex.fields,{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}]).toJSON(),globalIdField:null,spatialReference:i.metadata.spatialReference,outSpatialReference:i.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}get enablePixelBuffering(){return!1}invalidate(){super.invalidate();for(const e of this._cellsPerScale.values())e.destroy();this._cellsPerScale.clear()}onSubscribe(e){super.onSubscribe(e),this._requiredLevel=e.tile.level,this._requiredScale=e.tile.scale}createState(e){return new fi(e)}async*applyOverrideUpdate(e){for(const t of this._cellsPerScale.values())t.destroy();this._cellsPerScale.clear();for(const t of this._sendStates.values())t.done=!1}displayMap(e,t,s){const r=new Map(e.map((n=>[t(n),n]))),i=[],a=this._getClusterState(this._requiredLevel,this._requiredScale);for(const n of a.clusters()){const o=r.get(n.inner.id);if(o==null){if(n.inner.count===1){const{firstObjectId:c}=n.inner,l=c?r.get(c):null;if(l!=null){const d=s(n.displayId,l,c);i.push(d),r.delete(c)}}}else{const c=s(n.displayId,o,n.inner.id);i.push(c),r.delete(n.inner.id)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[],i=[],a=this._getClusterState(this._requiredLevel,this._requiredScale);for(const n of a.aggregatesWorldSpace())if(t.has(n.displayId)&&!s.has(n.displayId)){const o=zt(n,this._metadata.geometryType,!1,!1);if(s.add(n.displayId),o.attributes.cluster_count===1){r.push({...o,displayId:n.displayId});continue}i.push({...o,displayId:n.displayId})}return{features:r,aggregates:i,tracks:[]}}getFeatureObjectIdsForAggregate(e){const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.clusters())if(s.inner.id===e)return Array.from(s.inner.containedObjectIds);return[]}async*updateChunks(){const e=this._source.chunks();if(!e.length)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale),s=Array.from(this._sendStates.values()).filter((a=>a.subscription.tile.level===this._requiredLevel));if(t.updateChunks(e,s)||!this._source.updateTracking.updating)for(const a of s)a.subscription.tile.level===this._requiredLevel&&(a.didSend=!1,a.done=!1);const r=Array.from(this._sendStates.values()).filter((a=>a.done)).map((a=>a.subscription.tile.key)),i=new Set(r);for(const a of this._sendStates.values())this._source.updateTracking.updating&&(r.some((n=>n.containsChild(a.subscription.tile.key)))||a.subscription.tile.key.getChildKeys().every((n=>i.has(n))))||a.didSend||a.subscription.tile.level!==this._requiredLevel||(a.didSend=!0,yield*this._update(a,t,this._source));await t.updateStatistics(this._connection)}forEachAggregateWorldSpace(e){if(this._requiredLevel==null||this._requiredScale==null)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.aggregatesWorldSpace())e(s)}_getClusterState(e,t){if(e==null||t==null)throw new Error("InternalError: Level and scale must be defined");let s=this._cellsPerScale.get(t);return s||(s=new gi(e,t,this._indexOptions,this._clusterRadius,this._attributeStore),this._cellsPerScale.set(t,s)),s}async*_update(e,t,s){if(e.done)return;const r=t.createAggregateFeatures(e,this._metadata);this.events.emit("changed"),e.done=!s.updateTracking.updating;const i=r.getCursor(),a=e.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.arcadeContextInfo);for(;i.next();)this._attributeStore.setAttributeData(i.getDisplayId(),i,a,this._sqlOptions);yield new V(e.subscription,r,!0,e.done,{})}},mi=class xs{static fromReader(e){const t=[],s=e.copy(),r=He();for(;s.next();)s.getBounds(r)&&t.push(s.getIndex());const i=Ns(9,(a=>(s.setIndex(a),{minX:s.getBoundsXMin(),minY:s.getBoundsYMin(),maxX:s.getBoundsXMax(),maxY:s.getBoundsYMax()})));return i.load(t),new xs(i)}constructor(e){this._index=e}search(e){const t={minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]};return this._index.search(t)}};const bi=64;function Ii(u,e,t,s){const r=[u.xmin,u.ymin,u.xmax,u.ymax],i=Bs.fromExtent(Vs(r,s)),a=ce(i,s,E.WGS84,{densificationStep:e*bi});if(!a)return null;const n=Nt(new k,a,!1,!1),o=n.coords.filter(((f,y)=>!(y%2))),c=n.coords.filter(((f,y)=>y%2)),l=Math.min(...o),d=Math.min(...c),h=Math.max(...o),p=Math.max(...c),_=ze(l,d,t,E.WGS84),g=ze(h,p,t,E.WGS84);return _&&g?{bounds:r,geohashBounds:{xLL:_[0],yLL:_[1],xTR:g[0],yTR:g[1]},level:t}:null}function ze(u,e,t,s){if(s.isWebMercator){const a=_t(u/pt.radius),n=a-360*Math.floor((a+180)/360),o=[0,0];return Tt(o,0,_t(Math.PI/2-2*Math.atan(Math.exp(-e/pt.radius))),n,t),o}const r=ce({x:u,y:e},s,E.WGS84);if(!r)return null;const i=[0,0];return Tt(i,0,r.y,r.x,t),i}function wi(u,e){let t=-90,s=90,r=-180,i=180;for(let a=0;a<e;a++){const n=Math.ceil((a+1)/2),o=Math.floor((a+1)/2),c=1-a%2,l=30-(3*n+2*o),d=30-(2*n+3*o),h=3*c+2*(1-c),p=2*c+3*(1-c),_=3*c+7*(1-c)<<d,g=(7*c+3*(1-c)<<l&u.geohashX)>>l,f=(_&u.geohashY)>>d;for(let y=h-1;y>=0;y--){const b=(r+i)/2,I=g&1<<y?1:0;r=(1-I)*r+I*b,i=(1-I)*b+I*i}for(let y=p-1;y>=0;y--){const b=(t+s)/2,I=f&1<<y?1:0;t=(1-I)*t+I*b,s=(1-I)*b+I*s}}return[r,t,i,s]}function Tt(u,e,t,s,r){r%2&&(r+=1);let i=0,a=0,n=-90,o=90,c=-180,l=180;for(let d=0;d<r/2;d++){for(let h=0;h<5;h++){const p=(c+l)/2,_=s>p?1:0;i|=_<<29-(h+5*d),c=(1-_)*c+_*p,l=(1-_)*p+_*l}for(let h=0;h<5;h++){const p=(n+o)/2,_=t>p?1:0;a|=_<<29-(h+5*d),n=(1-_)*n+_*p,o=(1-_)*p+_*o}}u[2*e]=i,u[2*e+1]=a}let Ot=class Ne extends fs{static create(e,t,s,r){const i=ct.create(e),a=new Array(32);for(let n=0;n<a.length;n++)a[n]=null;return new Ne(i,t,s,r,a)}constructor(e,t,s,r,i){super(e),this.xNode=t,this.yNode=s,this.depth=r,this.children=i,this._objectIds=new Set,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._xGeohashTotal=0,this._yGeohashTotal=0,this.next=null}get id(){return`${this.xNode}.${this.yNode}`}get containedObjectIds(){return this._objectIds}get count(){return this._count}clone(){const e=new Ne(this._statistics.clone(),this.xNode,this.yNode,this.depth,this.children);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._xGeohashTotal=this._xGeohashTotal,e._yGeohashTotal=this._yGeohashTotal,e.next=this.next,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r,i,a){this._count+=1,this._xWorldTotal+=t,this._yWorldTotal+=s,this._xGeohashTotal+=r,this._yGeohashTotal+=i,this._statistics.insert(e,a),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._xGeohashTotal+=e._xWorldTotal,this._yGeohashTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroid(e){throw new Error("getCentroid not supported for GeohashNode")}getGeometry(e,t){const s=this._getLngLatBounds(),[r,i,a,n]=s,o=ce({rings:[[[r,i],[r,n],[a,n],[a,i],[r,i]]]},E.WGS84,e),c=Nt(new k,o,!1,!1);return t!=null?L(new k,c,!1,!1,"esriGeometryPolygon",t,!1,!1):c}getGeometricCentroid(e,t){const s=this._getLngLatBounds(),[r,i,a,n]=s,o=ce({x:(r+a)/2,y:(i+n)/2},E.WGS84,e),c=Qs(new k,o);return t!=null?L(new k,c,!1,!1,"esriGeometryPoint",t,!1,!1):c}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return e.aggregateCount=this._count,e}find(e,t,s,r,i,a){if(r>=s)return this;const n=1-r%2,o=3*n+2*(1-n),c=2*n+3*(1-n),l=30-i-o,d=30-a-c,h=((e&7*n+3*(1-n)<<l)>>l)+((t&3*n+7*(1-n)<<d)>>d)*(8*n+4*(1-n)),p=this.children[h];return p==null?null:p.find(e,t,s,r+1,i+o,a+c)}_getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*t+2*s),i=30-(2*t+3*s),a=this.xNode<<r,n=this.yNode<<i;return wi({geohashX:a,geohashY:n},this.depth)}};class vi{constructor(e){this._fields=e,this._size=0,this._depth=0,this._root=Ot.create(this._fields,0,0,0)}destroy(){}get size(){return this._size}get depth(){return this._depth}find(e,t,s){return this._root.find(e,t,s,0,0,0)}insert(e,t,s,r,i,a,n){let o=this._root,c=0,l=0,d=0;for(;o!==null;){if(o.insert(e,t,s,r,i,n),c>=a)return;const h=Math.ceil((c+1)/2),p=Math.floor((c+1)/2),_=1-c%2,g=30-(3*h+2*p),f=30-(2*h+3*p),y=(r&7*_+3*(1-_)<<g)>>g,b=(i&3*_+7*(1-_)<<f)>>f,I=y+b*(8*_+4*(1-_));l=l<<3*_+2*(1-_)|y,d=d<<2*_+3*(1-_)|b,o.children[I]==null&&(o.children[I]=Ot.create(this._fields,l,d,c+1),this._depth=Math.max(this._depth,c+1),this._size+=1),c+=1,o=o.children[I]}}putBins(e,t){for(const s of this.getNodes(t)){const r=e.get(s.id);r?r.merge(s):e.set(s.id,s.clone())}}getNodes(e){const t=[],{geohashBounds:s,level:r}=e;let i=this._root;for(;i!==null;){const a=i.depth,n=i.xNode,o=i.yNode;if(a>=r){t.push(i),i=i.next;continue}const c=Math.ceil((a+1)/2),l=Math.floor((a+1)/2),d=1-a%2,h=30-(3*c+2*l),p=30-(2*c+3*l),_=~((1<<h)-1),g=~((1<<p)-1),f=(s.xLL&_)>>h,y=(s.yLL&g)>>p,b=(s.xTR&_)>>h,I=(s.yTR&g)>>p,F=n<<3*d+2*(1-d),S=o<<2*d+3*(1-d),v=F+8*d+4*(1-d),M=S+4*d+8*(1-d),w=Math.max(F,f),x=Math.max(S,y),O=Math.min(v,b),D=Math.min(M,I);let P=null,j=null;for(let xe=x;xe<=D;xe++)for(let ke=w;ke<=O;ke++){const Rs=ke-F+(xe-S)*(8*d+4*(1-d)),X=i.children[Rs];X&&(P||(P=X,P.next=i.next),j&&(j.next=X),j=X,X.next=i.next)}i=P||i.next}return t}}let Si=class extends vs{constructor(e){super(e),this._tree=new vi(this._options.fields)}put(e){throw new Error("Geohash tree does not support put")}putBounded(e,t,s){const{geohashLevel:r,spatialReference:i}=this._options,a=Ii(t,s,r,i);a!=null&&this._tree.putBins(e,a)}_insert(e,t,s,r){const{geohashLevel:i,spatialReference:a}=this._options,n=ze(t,s,i,a);n&&this._tree.insert(e,t,s,n[0],n[1],i,r)}},ks=class ne extends st{static from(e,t){if(e instanceof this){const s=new Set(t),r=e._indices.filter((i=>s.has(i)));return new ne(e._reader,r)}return new ne(e.copy(),t)}constructor(e,t){super(e.metadata),this._currentIndex=-1,this._displayTransform=null,this._reader=e,this._indices=t}setTransformForDisplay(e){const t=this._reader.getInTransform();if(t==null)return void(this._displayTransform=Fe(e));const s=Fe(t),r=Fe(e),[i,a]=s.scale,[n,o]=s.translate,[c,l]=r.scale,[d,h]=r.translate,p=i/c,_=a/l,g=(n-d)/c,f=(o-h)/l;this._displayTransform={originPosition:"lowerLeft",scale:[1/p,1/_,1,1],translate:[-g/p,-f/_,0,0]}}getInTransform(){return this._reader.getInTransform()}get fields(){return this._reader.fields}get hasNext(){return this._currentIndex+1<this._indices.length}getSize(){return this._indices.length}getCursor(){return this.copy()}copy(){const e=new ne(this._reader.copy(),this._indices);return e._currentIndex=this._currentIndex,e._displayTransform=this._displayTransform,e._processorAttributes=this._processorAttributes,e}get contextTimeZone(){return this._reader.contextTimeZone}set contextTimeZone(e){this._reader.contextTimeZone=e}get usedMemory(){return Ze+this._reader.usedMemory}setProcessorAttributes(e){this._processorAttributes=Object.assign(this._processorAttributes??{},e)}_nextIndex(){return++this._currentIndex<this._indices.length&&(this._reader.setIndex(this._indices[this._currentIndex]),!0)}next(){for(;this._nextIndex()&&!this._reader._getExists(););return this._currentIndex<this._indices.length}readXForDisplay(){return this._displayTransform?ft(this._displayTransform,this._reader.readXForDisplay()):this._reader.readXForDisplay()}readYForDisplay(){return this._displayTransform?gt(this._displayTransform,this._reader.readYForDisplay()):this._reader.readYForDisplay()}readGeometryForDisplay(){return this._displayTransform?this._reader.readGeometryForDisplayTransformed(this._displayTransform):this._reader.readGeometryForDisplay()}readCentroidForDisplay(){const e=this._reader.readCentroidForDisplay()?.clone();if(e){const[t,s]=e.coords;this._displayTransform?(e.coords[0]=ft(this._displayTransform,t),e.coords[1]=gt(this._displayTransform,s)):(e.coords[0]=t,e.coords[1]=s)}return e}get geometryType(){return this._reader.geometryType}get hasFeatures(){return this._reader.hasFeatures}get exceededTransferLimit(){return this._reader.exceededTransferLimit}get hasZ(){return this._reader.hasZ}get hasM(){return this._reader.hasM}readAttribute(e,t=!1){const s=this._reader.readAttribute(e,t);return s==null&&this._processorAttributes?this._processorAttributes[e]:s}readAttributes(){return{...this._processorAttributes??{},...this._reader.readAttributes()}}joinAttributes(e){return this._reader.joinAttributes(e)}getBounds(e){return this._reader.getBounds(e)}getAttributeHash(){return this._reader.getAttributeHash()}getObjectId(){return this._reader.getObjectId()}getDisplayId(){return this._reader.getDisplayId()}setDisplayId(e){return this._reader.setDisplayId(e)}setIndex(e){return this._reader.setIndex(e)}getIndex(){return this._reader.getIndex()}readXWorldSpace(){return this._reader.readXWorldSpace()}readYWorldSpace(){return this._reader.readYWorldSpace()}_readX(){return this._reader.readXForDisplay()}_readY(){return this._reader.readYForDisplay()}_readServerCentroid(){return this._reader._readServerCentroid()}readLegacyFeatureForDisplay(){const e=this.readCentroidForDisplay();return{attributes:this.readAttributes(),geometry:this.readLegacyGeometryForDisplay(),centroid:(e&&{x:e.coords[0],y:e.coords[1]})??null}}readLegacyGeometryForDisplay(){const e=this.readGeometryForDisplay();return Bt(e,this.geometryType,!1,!1)}readGeometryArea(){return this._displayTransform?this._reader.readGeometryForDisplayTransformed(this._displayTransform)?.area()??0:this._reader.readGeometryArea()}readGeometryWorldSpace(){return this._reader.readGeometryWorldSpace()}_readGeometry(){return this._reader._readGeometry()}_readAttribute(e,t){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}_readAttributes(){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}readArcadeFeature(){return this._reader.readArcadeFeature()}geometry(){return this._reader.geometry()}field(e){return this._reader.field(e)}hasField(e){return this._reader.hasField(e)}setField(e,t){return this._reader.setField(e,t)}keys(){return this._reader.keys()}castToText(e=!1){return this._reader.castToText(e)}},Z=class{size(){return this.reader.getSize()}get fields(){return this.reader.fields}invalidate(){this._aggregateIndex=null,this._aggregateIndexHash=null,this._spatialIndex=null}registerOverrides(e){this.reader.registerOverrides(e),this.invalidate()}queryFeaturesInBounds(e){const t=this._getSpatialIndex().search(e);return ks.from(this.reader,t)}getAggregateIndex(e){const t=JSON.stringify(e);if(t!==this._aggregateIndexHash){switch(this._aggregateIndexHash=t,e.type){case"grid":this._aggregateIndex=new _i(e);break;case"geohash":this._aggregateIndex=new Si(e)}this._aggregateIndex.insert(this.reader,this.isTiled)}return this._aggregateIndex}_getSpatialIndex(){return this._spatialIndex||(this._spatialIndex=mi.fromReader(this.reader)),this._spatialIndex}};const $t=1e4,xi=1e3;let qt=class{constructor(){this.modified=[],this.removed=[]}modify(e){this.modified.push(e)}remove(e){this.removed.push(e)}get isEmpty(){return this.modified.length===0&&this.removed.length===0}},Fs=class Ms extends Z{constructor(e){super(),this._reader=e,this.chunkId="override",this.normalizedChunkId="override"}static fromFeatures(e,t){const s=T.fromOptimizedFeatures(e,t);return new Ms(s)}get reader(){return this._reader}get queryInfo(){return{}}get first(){return!1}get end(){return!1}get isTiled(){return!1}getTileReader(e){if(!this._reader.getSize())return null;const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}},te=class{constructor(e,t){this.inner=e,this.isWeak=t,this.lastWeak=null}get isStrong(){return!this.isWeak}},ki=class{constructor(){this._overrides=new Map,this._update=new qt,this._lastCleanup=0}hasOverride(e){return this._overrides.has(e)}onChunkInsert(e){if(this._overrides.size){const t=e.reader.getCursor();for(;t.next();){const s=t.getObjectId(),r=this._overrides.get(s);if(r?.lastWeak&&(r.lastWeak=null),r?.isWeak){const i=t.readOptimizedFeatureWorldSpace();r.inner=i,this._update.modify(i),this.invalidate()}}}e.registerOverrides(this)}apply(e,t){const{updateWeak:s,removeWeak:r,update:i,remove:a,release:n}=e.commands;this.invalidate();for(const o of s){const c=new te(o,!0),l=this._overrides.get(o.objectId);l?.isStrong?l.lastWeak=c:(this._overrides.set(o.objectId,c),this._update.modify(o))}for(const o of i){const c=new te(o,!1),l=this._overrides.get(o.objectId);c.lastWeak=l?.isWeak?l:l?.lastWeak??null,this._overrides.set(o.objectId,c),this._update.modify(o)}for(const o of r){const c=new te(null,!0),l=this._overrides.get(o);l?.isStrong?l.lastWeak=c:(this._overrides.set(o,c),this._update.remove(o))}for(const o of a){const c=new te(null,!1),l=this._overrides.get(o);c.lastWeak=l?.isWeak?l:l?.lastWeak??null,this._overrides.set(o,c),this._update.remove(o)}if(n.length){const o=new Set;for(const c of n){const l=this._overrides.get(c);l?.lastWeak?(this._overrides.set(c,l.lastWeak),l.lastWeak.inner==null?this._update.remove(c):this._update.modify(l.lastWeak.inner)):l&&!l.isWeak&&(this._overrides.delete(c),o.add(c))}t.forEachUnsafe((c=>{const l=c.getObjectId();o.has(l)&&(this._update.modify(c.readOptimizedFeatureWorldSpace()),o.delete(l))}));for(const c of o.values())this._update.remove(c)}}clearWeakOverrides(){for(const[e,t]of this._overrides.entries())t.isWeak&&this._overrides.delete(e);this.invalidate()}cleanup(e){if(this._overrides.size<$t)return;const t=performance.now();if(t-this._lastCleanup<xi)return;this._lastCleanup=t;const s=this._getWeakDeletions();if(!(s.size<$t)){for(const r of e){const i=r.reader.withoutOverrides().getCursor();for(;i.next();){const a=i.getObjectId();s.delete(a)}}for(const r of s)this._overrides.delete(r);s.size&&this.invalidate()}}takeOverrideUpdate(){const e=this._update;return e.isEmpty?null:(this._update=new qt,e)}asChunk(e){if(!this._chunk){const t=[];for(const s of this._overrides.values())s.inner!=null&&t.push(s.inner);this._chunk=Fs.fromFeatures(t,e)}return this._chunk}invalidate(){this._chunk=null}putWeakObjectIdsFromGlobalIds(e,t,s){for(const[r,i]of this._overrides.entries())if(i.isWeak&&i.inner!=null){const a=i.inner.attributes[s];a&&t.has(a)&&!e.has(a)&&e.set(a,r)}else if(i.lastWeak!=null&&i.lastWeak.inner!=null){const a=i.lastWeak.inner.attributes[s];a&&t.has(a)&&!e.has(a)&&e.set(a,r)}}_getWeakDeletions(){const e=new Set;for(const[t,s]of this._overrides.entries())s.isWeak&&s.inner==null&&e.add(t);return e}},Fi=class extends ve{},Mi=class extends _s{constructor(e,t,s,r){super(e,t,r),this._arcadeContextInfo=s,this.handledChunks=new Set,this.handledChunksForIdCreation=new Set,this.handledChunksForAttributeData=new Set,this._streamLayerDeferredObjectIdsToRemove=[]}destroy(){super.destroy();for(const e of this._source.chunks())this._cleanupChunkIds(e)}invalidateAttributeData(e){this.handledChunksForAttributeData.clear(),this._arcadeContextInfo=e,this._evalOptions!=null&&(this._evalOptions=Je(this._evalOptions.$view.scale,e))}onSubscribe(e){super.onSubscribe(e),this._evalOptions=e.tile.createArcadeEvaluationOptions(this._arcadeContextInfo)}createState(e){return new Fi(e)}get aggregateQueryEngine(){return null}displayMap(e,t,s){const r=new Map(e.map((a=>[t(a),a]))),i=[];for(const a of this._source.chunks()){const n=a.reader.getCursor();for(;n.next();){const o=n.getObjectId(),c=n.getDisplayId(),l=r.get(o);if(l!=null){const d=s(c,l,o);i.push(d),r.delete(o)}}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const i of this._source.chunks()){const a=i.reader.getCursor();for(;a.next();){const n=a.getObjectId(),o=a.getDisplayId();t.has(o)&&!s.has(n)&&(r.push({...a.readLegacyFeatureWorldSpace(),displayId:o}),s.add(n))}}return{features:r,aggregates:[],tracks:[]}}async*applyOverrideUpdate(e){const t=[];for(const a of e.modified){const n=this._attributeStore.createDisplayIdForObjectId(a.objectId);a.displayId=n,t.push(n)}const s=T.fromOptimizedFeatures(e.modified,this._source.metadata).getCursor();for(;s.next();)this._attributeStore.setAttributeData(s.getDisplayId(),s,this._evalOptions,this._sqlOptions);const r=[];for(const a of e.removed){const n=this._attributeStore.getDisplayIdForObjectId(a);n!=null&&r.push(n)}m("esri-2d-update-debug")&&console.debug("FeatureUpdateStrategy.applyLocalEdit",{message:e,modifiedDisplayIds:t,removedDisplayIds:r});const i=Fs.fromFeatures(e.modified,this._source.metadata);this.handledChunks.add(i.chunkId),this.handledChunksForAttributeData.add(i.chunkId),this.handledChunksForIdCreation.add(i.chunkId);for(const a of this._sendStates.values())a.handledChunks.add(i.chunkId),yield new Ge(a.subscription,null,t,!1,i.queryInfo);for(const a of this._sendStates.values()){const n=i.getTileReader(a.subscription.tile);yield new Ge(a.subscription,n,r,!1,i.queryInfo)}for(const a of e.removed)this._attributeStore.releaseDisplayIdForObjectId(a)}async*updateChunks(){if(this._source.chunks().length){await this._updateAttributeData();for(const e of this._sendStates.values())yield*this._update(e)}}removeChunks(e){for(const t of e)this.handledChunks.delete(t.chunkId),this.handledChunksForAttributeData.delete(t.chunkId),this._cleanupChunkIds(t)}afterUpdateChunks(){for(const e of this._streamLayerDeferredObjectIdsToRemove)this._attributeStore.releaseDisplayIdForObjectId(e);this._streamLayerDeferredObjectIdsToRemove=[]}_cleanupChunkIds(e){if(this.handledChunksForIdCreation.has(e.chunkId)){const t=e.reader.getCursor();for(;t.next();){const s=t.getObjectId();this._source.isStream?this._streamLayerDeferredObjectIdsToRemove.push(s):this._attributeStore.releaseDisplayIdForObjectId(s)}this.handledChunksForIdCreation.delete(e.chunkId)}}async _updateAttributeData(){for(const e of this._source.chunks()){const{chunkId:t,reader:s}=e;if(!this.handledChunksForIdCreation.has(t)){this.handledChunksForIdCreation.add(t);const r=s.getCursor();for(;r.next();){const i=this._attributeStore.createDisplayIdForObjectId(r.getObjectId());r.setDisplayId(i)}}}for(const e of this._source.chunks())if(!this.handledChunksForAttributeData.has(e.chunkId)){this.handledChunksForAttributeData.add(e.chunkId);const t=e.reader.getCursor();for(;t.next();){const s=t.getDisplayId();this._attributeStore.setAttributeData(s,t,this._evalOptions,this._sqlOptions)}}}*_update(e){const{subscription:t,handledChunks:s}=e;for(const r of this._source.chunks()){const{chunkId:i}=r;if(s.has(i))continue;s.add(i);const a=r.getTileReader(t.tile);a&&(yield new V(e.subscription,a,!1,r.end,r.queryInfo))}}},oe;const Ci=()=>pe.getLogger("esri.views.2d.layers.features.processor.TrackStrategy"),Ti=32;class Oi{constructor(e,t,s,r,i){this.chunkIndex=e,this.featureIndex=t,this.objectId=s,this.displayId=r,this.time=i}}class At{static getOid(e){return Or+e}constructor(e,t,s,r,i,a,n,o){this._schema=e,this.trackId=t,this.objectId=s,this.displayId=r,this._fields=i,this._spatialReference=a,this._metadata=n,this._isStream=o,this._maxDisplayDuration=this._schema.maxDisplayDuration>0?this._schema.maxDisplayDuration:1/0,this._maxDisplayObservationsPerTrack=this._schema.maxDisplayObservationsPerTrack>=1?this._schema.maxDisplayObservationsPerTrack:1/0,this._observationRecords=[],this._nextObservationRecords=[],this._trackLinePath=[],this._bounds=[],this._trackLineGeometry=new k}get _trackLineAttributes(){const e={...this._latestObservationFeature?.attributes??{},aggregateId:this.objectId,[N]:B.TrackLine};if(this._statistics!=null)for(const t of this._statistics.values())e[t.field.name]=t.value;return e}get _startTimeField(){return this._metadata.timeInfo?.startTimeField}get length(){return this._observationRecords.length}*observations(){yield*this._observationRecords}*previousObservations(){for(let e=0;e<this._observationRecords.length-1;e++)yield this._observationRecords[e]}get latestObservationFeature(){return this._latestObservationFeature}get latestObservationRecord(){return this._latestObservationRecord}stageObservation(e,t){this._nextObservationRecords.push(new Oi(e,t.getIndex(),t.getObjectId(),t.getDisplayId(),this._startTimeField!=null?t.readAttributeAsTimestamp(this._startTimeField):null))}commitObservations(e,t,s){const r=new Set(this._nextObservationRecords.map((l=>l.objectId))),i=this._observationRecords.filter((l=>!r.has(l.objectId))).map((l=>l.objectId));let a,n;switch(this._observationRecords=[],this._trackLinePath=[],this._isStream||this._startTimeField==null||this._nextObservationRecords.sort(((l,d)=>{const h=l.time,p=d.time;return h!=null&&p!=null?h-p:0})),this._schema.timeField){case"startTimeField":a=this._metadata.timeInfo?.startTimeField;break;case"endTimeField":a=this._metadata.timeInfo?.endTimeField;break;case"timeReceived":a=this._isStream?ss:null}n=this._isStream?s?.end??Date.now():s?.end??-1/0;const o=t.map((l=>l.reader.getCursor()));let c;for(let l=this._nextObservationRecords.length-1;l>=0&&!(this._observationRecords.length>=this._maxDisplayObservationsPerTrack);l--){const d=this._nextObservationRecords[l],h=o[d.chunkIndex];re(h),h.setIndex(d.featureIndex);const p=a!=null?h.readAttributeAsTimestamp(a):null;(p!=null?n-p:0)>=this._maxDisplayDuration||(this._commitObservation(d,h),c??=d)}if(c!=null){const{chunkIndex:l,featureIndex:d}=c,h=`${c.objectId}.latest`,p=e.createDisplayIdForObjectId(h),_=o[l];re(_),_.setIndex(d);const g=new A(_.readGeometryWorldSpace(),{..._.readAttributes(),[N]:B.LatestObservation},null,h,p);this._latestObservationFeature&&i.push(this._latestObservationFeature.objectId),this._latestObservationFeature=g,this._latestObservationRecord=c}else this._latestObservationFeature=null;return this._trackLineGeometry=qi(this._trackLineGeometry,this._trackLinePath,this._spatialReference),this._bounds=Ri(this._trackLineGeometry),this._nextObservationRecords=[],i}updateStatistics(e,t){this._statistics=ct.create(this._fields);const s=e.map((r=>r.reader.getCursor()));for(const{chunkIndex:r,featureIndex:i}of this._observationRecords){const a=s[r];re(a),a.setIndex(i),this._statistics.insert(a,t)}}overlapsTile(e){for(const t of this._bounds)if(Ys(t,e.bounds,Ti))return!0;return!1}getLatestObservationFeatureForTile(e){if(this._latestObservationFeature==null)return null;const{objectId:t,displayId:s,geometry:r,attributes:i}=this._latestObservationFeature,a=new k;L(a,r,!1,!1,this._metadata.geometryType,e.subscription.tile.transform);const n=yt(1/0,1/0,-1/0,-1/0);return Ai(a,((o,c)=>Vt(n,[o,c]))),Hs(n,yt(0,0,C,C))?new A(a,i,null,t,s):null}getTrackLineFeatureForTile(e){const t=new k;return L(t,this._trackLineGeometry,!1,!1,"esriGeometryPolyline",e.subscription.tile.transform),new A(t,this._trackLineAttributes,null,this.objectId,this.displayId)}getTrackLineOptimizedFeature(){return new A(this._trackLineGeometry,this._trackLineAttributes,null,this.objectId,this.displayId)}getTrackLineDisplayFeature(){const{_trackLineGeometry:e,_trackLineAttributes:t,displayId:s}=this;return{geometry:Bt(e,"esriGeometryPolyline",!1,!1),attributes:t,displayId:s}}_commitObservation(e,t){const s=t.readCentroidWorldSpace();let r=s?.coords[0],i=s?.coords[1];s==null&&(r=t.readXWorldSpace(),i=t.readYWorldSpace()),r!=null&&i!=null&&(this._observationRecords.unshift(e),this._trackLinePath.unshift([r,i]))}}class $i extends ve{constructor(e){super(e),this.done=!1}}class ut extends lt{static async create(e,t,s,r,i,a){const n=new ge({spatialReference:t}),o=await Promise.all(e.fields.map((async l=>ot.create(n,l)))),c=e.featureFilter?await tt.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:t,filterJSON:e.featureFilter}):null;return t.isWrappable||Rr()||await Promise.all([Ee(()=>import("./chunk-DSo0DT4y.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48])),Ee(()=>import("./chunk-DjrwEoDI.js"),__vite__mapDeps([48,1,3,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47])),Dr()]).then((([l,d,h])=>{oe={fromGeometryToGXGeometry:d.fromGeometryToGXGeometry,toGeometry:d.toGeometry,fromSpatialReference:l.fromSpatialReference}})),new ut(e,s,r,t,o,c,i,a)}constructor(e,t,s,r,i,a,n,o){super(t,s,r,i,o),this._schema=e,this._featureFilter=a,this._arcadeContextInfo=n,this._tracks=new Map,this._handledChunks=new Set,this._metadata=t.metadata.weakCloneWithAdditionalFields([{name:N,alias:"trackPart",type:"esriFieldTypeSmallInteger"}]),this._trackLineMetadata=ye.createFeature({geometryType:"esriGeometryPolyline",featureIdInfo:{type:"object-id",fieldName:"aggregateId"},fieldsIndex:{fields:[...this._source.metadata.fieldsIndex.fields,...this.aggregateFields,{name:N,alias:"trackPart",type:"esriFieldTypeSmallInteger"},{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}],timeZoneByFieldName:null},globalIdField:null,spatialReference:t.metadata.spatialReference,outSpatialReference:t.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:t.metadata.timeInfo,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}destroy(){super.destroy();for(const e of this._tracks.values())this._removeTrack(e);this._tracks.clear()}get _isStream(){return this._source.isStream}get enablePixelBuffering(){return!0}get isAggregate(){return!1}requiresInvalidation(){const e=new Set(this._source.chunks().map((t=>t.chunkId)));for(const t of e)if(!this._handledChunks.has(t))return!0;for(const t of this._handledChunks)if(!e.has(t))return!0;return!1}invalidate(){this._handledChunks.clear(),super.invalidate()}createState(e){return new $i(e)}async*applyOverrideUpdate(e){Ci().error("Applying override to tracks is not supported")}displayMap(e,t,s){const r=new Map(e.map((a=>[t(a),a]))),i=[];for(const a of this._tracks.values()){const n=r.get(a.objectId);if(n!=null){const c=s(a.displayId,n,a.objectId);i.push(c),r.delete(a.objectId);continue}const o=a.latestObservationFeature;if(o?.objectId){const c=r.get(o.objectId);if(c!=null){const l=s(o.displayId,c,o.objectId);i.push(l),r.delete(o.objectId);continue}}for(const c of a.observations()){const l=r.get(c.objectId);if(l!=null){const d=s(c.displayId,l,c.objectId);i.push(d),r.delete(c.objectId)}}}return i}getDisplayFeatures(e){const t=new Set(e),s=[],r=[],i=this._source.chunks().map((a=>a.reader.getCursor()));for(const a of this._tracks.values()){if(t.has(a.displayId)&&r.push(a.getTrackLineDisplayFeature()),a.latestObservationFeature!=null&&t.has(a.latestObservationFeature.displayId)){const{displayId:n,chunkIndex:o,featureIndex:c}=a.latestObservationRecord,l=i[o];l.setIndex(c),s.push({displayId:n,attributes:{},...l.readLegacyFeatureWorldSpace()})}for(const{displayId:n,chunkIndex:o,featureIndex:c}of a.observations())if(t.has(n)){const l=i[o];l.setIndex(c),s.push({displayId:n,attributes:{},...l.readLegacyFeatureWorldSpace()})}}return{features:s,aggregates:[],tracks:r}}getFeatureObjectIdsForAggregate(e){for(const t of this._tracks.values())if(t.objectId===e)return Array.from(t.observations(),(s=>s.objectId));return[]}async*updateChunks(){this._handledChunks.size===0&&this._rebuildTracks();for(const e of this._sendStates.values())yield*this._update(e)}forEachAggregateWorldSpace(e){for(const t of this._tracks.values())e(t.getTrackLineOptimizedFeature())}_rebuildTracks(){const e=this._source.chunks();if(!e.length)return;const t=this._metadata.timeInfo?.trackIdField;if(t==null)return;const s=new Set;for(let r=0;r<e.length;r++){const i=e[r];this._handledChunks.add(i.chunkId);const a=i.reader.getCursor();for(;a.next();){const n=a.readAttribute(t),o=a.getObjectId();if(n!=null&&o!=null&&(this._featureFilter===null||this._featureFilter.check(a,this._sqlOptions))){if(a.getDisplayId()||a.setDisplayId(this._attributeStore.createDisplayIdForObjectId(o)),!this._tracks.has(n)){const c=At.getOid(n),l=this._attributeStore.createDisplayIdForObjectId(c),d=new At(this._schema,n,c,l,this.aggregateFields,this.spatialReference,this._source.metadata,this._isStream);this._tracks.set(n,d)}this._tracks.get(n).stageObservation(r,a),s.add(n)}}}for(const r of this._tracks.values())if(s.has(r.trackId)){const i=r.commitObservations(this._attributeStore,e,this._featureFilter?.timeExtent);for(const a of i)this._attributeStore.releaseDisplayIdForObjectId(a);r.updateStatistics(e,Je(1,this._arcadeContextInfo))}else this._removeTrack(r)}_removeTrack(e){this._tracks.delete(e.trackId),this._attributeStore.releaseDisplayIdForObjectId(e.objectId);for(const{objectId:t}of e.observations())this._attributeStore.releaseDisplayIdForObjectId(t);e.latestObservationFeature!=null&&this._attributeStore.releaseDisplayIdForObjectId(e.latestObservationFeature.objectId)}*_update(e){if(e.done)return;e.done=!this._source.updateTracking.updating;const t=[],s=[];for(const l of this._tracks.values())if(l.length>0){if(this._schema.showLatestObservation){const d=l.getLatestObservationFeatureForTile(e);d!=null&&t.push(d)}this._schema.showTrackLine&&l.overlapsTile(e.subscription.tile)&&s.push(l.getTrackLineFeatureForTile(e))}const r=T.fromOptimizedFeatures(t,this._metadata,e.subscription.tile.transform),i=T.fromOptimizedFeatures(s,this._trackLineMetadata,e.subscription.tile.transform);let a=[];if(this._schema.showPreviousObservations){const l=this._source.chunks().map((()=>[]));for(const d of this._tracks.values())for(const{chunkIndex:h,featureIndex:p}of d.previousObservations())l[h].push(p);a=this._source.chunks().map(((d,h)=>{const p=d.getTileReader(e.subscription.tile);if(p==null)return null;const _=ks.from(p,l[h]);return _.setProcessorAttributes({[N]:B.PreviousObservation}),_.geometryType!=="esriGeometryPoint"&&_.getInTransform()!=null||_.setTransformForDisplay(e.subscription.tile.transform),_})).filter(Xs)}this.events.emit("changed");const n=e.subscription.tile.createArcadeEvaluationOptions(this._arcadeContextInfo),o=i.getCursor();for(;o.next();)this._attributeStore.setAttributeData(o.getDisplayId(),o,n,this._sqlOptions);for(const l of a){const d=l.getCursor();for(;d.next();)this._attributeStore.setAttributeData(d.getDisplayId(),d,n,this._sqlOptions)}const c=r.getCursor();for(;c.next();)this._attributeStore.setAttributeData(c.getDisplayId(),c,n,this._sqlOptions);yield new V(e.subscription,i,!1,!1,{});for(const l of a)yield new V(e.subscription,l,!1,!1,{});yield new V(e.subscription,r,!1,e.done,{})}}function qi(u,e,t){if(e.length<2)return Y(u,[e],!1,!1);if(t.isWrappable){let i=!1;for(let a=1;a<e.length;a++){const n=e[a][0],o=Js(n,e[a-1][0],t);n!==o&&(e[a][0]=o,i=!0)}if(i){const a=Er({paths:[e],spatialReference:t});if(a!=null)return Y(u,a.paths,!1,!1)}return Y(u,[e],!1,!1)}const s=oe.fromGeometryToGXGeometry({hasM:!1,hasZ:!1,paths:[e]}),r=oe.fromSpatialReference(t);if(r!=null){const i=Pr(s,1e6,r,Zs.geodesic);if(i!=null){const a=oe.toGeometry(i,r);if(a!=null&&"paths"in a)return Y(u,a.paths,!1,!1)}}return Y(u,[e],!1,!1)}function Ai(u,e){const{coords:s,lengths:r}=u;if(!r.length)return void e(s[0],s[1]);let i=0;for(let a=0;a<r.length;a++){const n=r[a];let o=0,c=0;for(let l=0;l<n;l++)o+=s[2*(l+i)],c+=s[2*(l+i)+1],e(o,c);i+=n}}function Ri(u){const{lengths:e,coords:t}=u,s=2;if(!e.length)return[mt()];const r=[];let i=0;for(let a=0;a<e.length;a++){const n=e[a],o=mt();r.push(o);for(let c=0;c<n;c++){const l=t[s*(c+i)],d=t[s*(c+i)+1];Vt(o,[l,d])}i+=n}return r}class Di{constructor(e,t){this._connection=e,this._source=t,this._version=1,this._registry=new qr,this._proxy=new Fr({fetch:(s,r)=>this._connection.layerView.fetch(s,r),fetchDictionary:(s,r)=>this._connection.layerView.fetchDictionary(s,r)}),this._attributeStore=new Mr({isLocal:!1,update:s=>Qe(this._connection.container.updateAttributeView(s))})}destroy(){this._proxy.destroy(),this._strategy?.destroy(),this._attributeStore.destroy()}get aggregateQueryEngine(){return this._strategy?.aggregateQueryEngine}get version(){return this._version}getDisplayFeatures(e){return this._strategy?this._strategy.getDisplayFeatures(e):{features:[],aggregates:[],tracks:[]}}getDisplayIds(e){const t={};return this._strategy&&this._strategy.displayMap(e,(s=>s),((s,r,i)=>{t[i]=s})),t}getFeatureObjectIdsForAggregate(e){return this._strategy?this._strategy.getFeatureObjectIdsForAggregate(e):[]}onSubscribe(e){this._strategy?.onSubscribe(e)}onUnsubscribe(e){this._strategy?.onUnsubscribe(e)}requiresInvalidation(){return this._strategy?.requiresInvalidation()??!1}async update(e,t,s,r,i){const a=e.processor,n=K(this._schema?.storage,a.storage),o=K(this._schema?.mesh.properties,a.mesh.properties),c=K(this._schema?.mesh.factory,a.mesh.factory),l=K(this._schema?.mesh.strategy,a.mesh.strategy),d=Pi(this._schema?.expressionProperties,a.expressionProperties),h=d.some((v=>this._attributeStore.hasArcadeDependency(v))),p=d.some((v=>this._factory?.hasArcadeDependency(v)??!1)),_=d.some((v=>this._strategy?.hasArcadeDependency(v)))||this._strategy?.isAggregate&&h,g=p||_,f=o||c||l;if(!(n||f||p||h||_)&&!r)return!1;m("esri-2d-update-debug")&&console.debug(`Version[${this._version}] SymbolProcessor.update`,{changes:Qt(this._schema,a),schema:a}),this._schema=a;const y=E.fromJSON(this._source.service.outSpatialReference),b=new ge({fields:this._source.metadata.fieldsIndex,spatialReference:y}),I={currentUser:a.mesh.properties.currentUser};if((n||f||h)&&(await this._attributeStore.update(a.storage,b,this._source.metadata,t),this._strategy?.invalidateAttributeData(H(a))),!r&&!f&&!g)return!1;(l||o||g)&&await this._updateStrategy(a.mesh.strategy,y,i,H(a),I),this._updateSortKey(b,"sortKey"in a.mesh.properties?a.mesh.properties.sortKey:null);const F=a.mesh.factory.symbology.type==="dictionary"?a.mesh.factory.symbology.fieldMap:null,S=new ti(b,this._proxy,s,this._registry,F);return(c||a.mesh.factory.symbology.type==="dictionary")&&(this._factory=await ei.create(S,a.mesh.factory)),this._version=t,!0}async applyOverrideUpdate(e){if(!this._strategy)return;const t=this._strategy.applyOverrideUpdate(e);for await(const s of t)try{await this._process(s)}catch{}}async updateChunks(){await this._doUpdateChunks(),this._strategy?.afterUpdateChunks()}async removeChunks(e){this._strategy?.removeChunks(e),this._attributeStore.incrementDisplayIdGeneration()}updateHighlight({highlights:e}){if(!this._strategy||!this._strategy.hasSubscribers)return void this._attributeStore.setHighlight(e.map((({objectId:s,highlightFlags:r})=>({objectId:s,highlightFlags:r,displayId:-1}))),e);const t=this._strategy.displayMap(e,(({objectId:s})=>s),((s,{highlightFlags:r},i)=>({objectId:i,displayId:s,highlightFlags:r})));this._attributeStore.setHighlight(t,e)}invalidate(){this._strategy&&this._strategy.invalidate()}async _doUpdateChunks(){if(!this._strategy)return;const e=this._strategy.updateChunks(),t=[],s=new Map;for await(const r of e){let i=s.get(r.id);i==null&&(i=new si({concurrency:16,process:n=>this._process(n)}),s.set(r.id,i));const a=i.push(r).catch((n=>Ke(n)));t.push(a)}try{await Promise.all(t)}catch{}m("esri-2d-update-debug")&&console.log("SendUpdates"),this._attributeStore.sendUpdates(),m("esri-2d-update-debug")&&console.log("SendUpdates.await")}async _updateStrategy(e,t,s,r,i){switch(this._strategy?.destroy(),e.type){case"feature":this._strategy=new Mi(this._source,this._attributeStore,r,i);break;case"binning":this._strategy=await ii.create(e,t,this._source,this._attributeStore,r,i);break;case"cluster":this._strategy=await yi.create(this._connection,e,t,this._source,this._attributeStore,r,i);break;case"track":this._strategy=await ut.create(e,t,this._source,this._attributeStore,r,i)}for(const a of s)this._strategy.onSubscribe(a)}async _updateSortKey(e,t){if(this._sortInfo=Xt(this._sortInfo?.computed),t!=null){const s=t.byRenderer?null:await e.createComputedField(t);this._sortInfo={...t,computed:s}}}async _process(e){const t=e.subscription;if(m("esri-2d-update-debug")){const c=t.tile;console.debug(`Version[${this._version}] Tile[${c.key.id}, end=${e.end}] Processor._process`)}const s={currentUser:this._schema?.mesh.properties.currentUser};await this._fetchResources(e,s),q(t.signal);const r=await this._write(e,t.tile.createArcadeEvaluationOptions(H(this._schema)),s),i=t.tile.tileInfoView.getLODInfoAt(t.tile.key);q(t.signal);const{message:a,transferList:n}=r.serialize(i),o={objectIdMap:null,inner:e.createMessage(a,this._version,this._attributeStore.epoch)};if(this._schema?.mesh.properties.returnMeshObjectId){o.objectIdMap={};const c=e.reader?.getCursor();if(c)for(;c.next();)o.objectIdMap[c.getDisplayId()]=c.getObjectId()}if(q(t.signal),await this._connection.container.onMessage(o,{signal:t.signal,transferList:n}),this._attributeStore.sendUpdates(),m("esri-2d-update-debug")){const c=t.tile;console.debug(`Version[${this._version}] Tile[${c.key.id}, end=${e.end}] Processor._process.await`)}}async _fetchResources(e,t){await this._fetchMatcherResources(e),await this._fetchWriterResources(e,t)}async _fetchMatcherResources(e){if(e.reader)return this._factory.enqueueMatcherRequests(this._proxy,e.reader)}async _fetchWriterResources(e,t){if(!e.reader)return;const s=e.reader.getCursor(),r=e.subscription.tile.createArcadeEvaluationOptions(H(this._schema));for(;s.next();)this._factory.enqueueWriterRequests(this._proxy,s,r,t);await this._proxy.fetchEnqueuedResources()}async _write(e,t,s){const r=e.subscription.tile,i=e.reader?.getCursor(),a=i?.getSize()??0,n=r.tileInfoView.tileInfo.isWrappable,o=r.tileInfoView.tileInfo.spatialReference.isWGS84,c=new Br(r.key,this._strategy.enablePixelBuffering,n,o,a);if(!i)return c;const l=r.createArcadeEvaluationOptions(H(this._schema));let d=0;for(;i.next();){++d%1e3||(await Ks(0),q(e.subscription));const h=this._getSortKeyValue(i,t);c.entityStart(i.getDisplayId(),h),this._factory.write(c,this._proxy,i,l,s,r.level),c.entityEnd()}return c}_getSortKeyValue(e,t){if(!this._sortInfo)return 0;const{computed:s,order:r,byRenderer:i}=this._sortInfo,a=i?this._factory.getSortKey(e,t):s?.read(e,t);return a==null||isNaN(a)?0:a*(r==="asc"?-1:1)}}function Pi(u,e){const t=[];return u?.timeExtent?.start===e.timeExtent?.start&&u?.timeExtent?.end===e.timeExtent?.end||t.push("timeProperties"),t}function H(u){const{timeZone:e}=u?.mesh.properties??{},{timeExtent:t}=u?.expressionProperties??{};return{timeZone:e,timeExtent:t}}let Ei=class Cs{static from(e){let t=0,s=0,r=0;return e.forEach((i=>{const a=i._readGeometry();a&&(s+=a.isPoint?1:a.lengths.reduce(((n,o)=>n+o),0),r+=a.isPoint?1:a.lengths.length,t+=1)})),new Cs(t,s,r)}constructor(e,t,s){this.featureCount=e,this.vertexCount=t,this.ringCount=s}toJSON(){return{featureCount:this.featureCount,ringCount:this.featureCount,vertexCount:this.featureCount}}};const Oe=4;function ji(u){switch(u.type){case"object-id":case"unique-id-simple":return`${u.fieldName} ASC`;case"unique-id-composite":return`${u.fieldNames.join(",")} ASC`}}function Gi(u,e,t){const s=ji(t.featureIdInfo),r=u.source,i={returnCentroid:!(r!==null&&typeof r=="object"&&"path"in r&&tr(r.path))&&t.serviceGeometryType==="esriGeometryPolygon",returnGeometry:!0,timeReferenceUnknownClient:t.timeReferenceUnknownClient??void 0,outSpatialReference:E.fromJSON(u.outSpatialReference),orderByFields:u.type==="memory"?[]:[s],where:e.mutable.dataFilter.definitionExpression??"1=1",outFields:e.mutable.availableFields,multipatchOption:t.serviceGeometryType==="esriGeometryMultiPatch"?"xyFootprint":null};if(e.type==="feature"){const{gdbVersion:a,historicMoment:n,timeExtent:o}=e.mutable.dataFilter;return{...i,gdbVersion:a,historicMoment:n?new Date(n):null,timeExtent:o?sr.fromJSON(o):null,outFields:e.mutable.availableFields}}return i}let Wi=class Ts{static fromSchema(e,t,s){const r=t.type==="feature"?t.mutable.dataFilter.queryScaleRanges:[],i=t.mutable.displayFilterInfo;return new Ts(Gi(e,t,s),i,r,s.subtypeField,t.mutable.dataFilter.customParameters,s.geometryType,e.queryMetadata)}constructor(e,t,s,r,i,a,n){this._queryParams=e,this._displayFilter=t,this._queryScaleRanges=s,this._subtypeField=r,this._customParameters=i,this._geometryType=a,this._queryMetadata=n}get pageSize(){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support paged queries");const e=this._queryMetadata.supportsMaxRecordCountFactor?Oe:null,t=(this._queryMetadata.maxRecordCount??8e3)*(e??1);return Math.min(8e3,t)}get objectIdsQueryPageSize(){return this._queryMetadata?.maxRecordCount??2e3}updateHistoricMoment(e){this._queryParams.historicMoment=e}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t,s){if(!t.getSize())return null;const r=e.clone();if(this._queryParams.outFields[0]==="*"){if((r.outFields??[])[0]==="*")return null;r.outFields=this._queryParams.outFields}else{const a=new Set(this._queryParams.outFields),n=[];for(const o of a)t.hasField(o)||n.push(o);if(n.length===0)return null;r.outFields=n}r.returnGeometry=!1,r.returnCentroid=!1,r.quantizationParameters=null,r.cacheHint=!0;const i={inner:r,customParameters:this._customParameters};if(m("esri-tiles-debug")&&s!=null){const a=s.chunkId.toString().replaceAll("/",".");i.customParameters=i.customParameters?{...i.customParameters,chunkId:a}:{chunkId:a}}return i}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new Yt({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,t){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support tile queries");const s=this.createQuery(t),r=s.inner;if(this._queryScaleRanges.length){const i=this._queryScaleRanges.filter((a=>(!a.minScale||a.minScale>=e.maxScale)&&(!a.maxScale||a.maxScale<=e.minScale))).map((a=>a.subtypeCode));if(i.length){const a=`${this._subtypeField} IN (${i})`;r.where=bt(r.where,a)}}if(this._displayFilter&&(r.where=bt(r.where,er(this._displayFilter,e.minScale,e.maxScale))),r.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),r.resultType="tile",r.geometry=e.extent,this._queryMetadata.supportsQuantization?this._geometryType==="esriGeometryPolyline"&&(r.maxAllowableOffset=e.resolution*m("feature-polyline-generalization-factor")):this._geometryType!=="esriGeometryPolyline"&&this._geometryType!=="esriGeometryPolygon"||(r.maxAllowableOffset=e.resolution,this._geometryType==="esriGeometryPolyline"&&(r.maxAllowableOffset*=m("feature-polyline-generalization-factor"))),r.defaultSpatialReferenceEnabled=this._queryMetadata.supportsDefaultSpatialReference,r.compactGeometryEnabled=this._queryMetadata.supportsCompactGeometry,this._queryMetadata.supportsMaxRecordCountFactor&&(r.maxRecordCountFactor=Oe),m("esri-tiles-debug")){const i=e.id.replaceAll("/",".");s.customParameters=s.customParameters?{...s.customParameters,tileId:i}:{tileId:i}}return s}createPagedTileQuery(e,t){const s=this.pageSize;return this.createTileQuery(e,{start:s*t,num:s,returnExceededLimitFeatures:!0})}createPagedQuery(e,t){const s=this.pageSize;return this.createQuery({start:s*e,num:s,returnExceededLimitFeatures:!0,maxRecordCountFactor:Oe,quantizationParameters:t,cacheHint:!0})}createObjectIdsQuery(e){return this.createQuery({objectIds:e,outFields:["*"]})}};const Li=2500;let le=class extends Ht{constructor(e){super(),this._connection=e,this._enabledEventTypes=new Set,this._updateInfo={websocket:0,client:0},this._lastTime=performance.now(),this._queuedCommands=[],this.addHandles([De((()=>this._strategy?.connectionStatus??"disconnected"),(t=>{this._layerView.setProperty({propertyName:"pipelineConnectionStatus",value:t})}),{initial:!0}),De((()=>this._strategy?.errorString||null),(t=>this._layerView.setProperty({propertyName:"pipelineErrorString",value:t})),{initial:!0})])}destroy(){this._strategy=null,this.removeAllHandles()}get _layerView(){return this._connection.layerView}set strategy(e){this._strategy==null&&this._resetUpdateInfo(performance.now());const t="event-handles";this.removeHandles(t),e!=null&&(this.addHandles([e.events.on("data-received",(s=>this._onFeature(s))),e.events.on("message-received",(s=>this._onWebSocketMessage(s))),e.events.on("features-updated",(s=>this._onUpdate(s))),e.events.on("tick",(()=>this._onTick()))],t),this._queuedCommands.forEach((s=>s(e))),this._queuedCommands=[]),this._strategy=e}updateCustomParameters(e){e!=null&&this._callOrEnqueue((t=>t.updateCustomParameters(e)))}sendMessageToSocket(e){this._callOrEnqueue((t=>t.sendMessageToSocket(e)))}sendMessageToClient(e){this._callOrEnqueue((t=>t.sendMessageToClient(e)))}enableEvent(e,t){t?this._enabledEventTypes.add(e):this._enabledEventTypes.delete(e)}disconnect(){this._strategy?.disconnect()}connect(){this._strategy?.connect()}clear(){this._strategy?.clear()}_onWebSocketMessage(e){this._enabledEventTypes.has("message-received")&&this._layerView.emitEvent({name:"message-received",event:e})}_onFeature(e){this._updateInfo.websocket++,this._enabledEventTypes.has("data-received")&&this._layerView.emitEvent({name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}})}_onUpdate(e){this._updateInfo.client+=e}_onTick(){const e=performance.now(),t=e-this._lastTime;if(t>Li){const s=Math.round(this._updateInfo.client/(t/1e3)),r=Math.round(this._updateInfo.websocket/(t/1e3));this._resetUpdateInfo(e),this._layerView.emitEvent({name:"update-rate",event:{client:s,websocket:r}})}}_resetUpdateInfo(e){this._lastTime=e,this._updateInfo.client=0,this._updateInfo.websocket=0}_callOrEnqueue(e){this._strategy!=null?e(this._strategy):this._queuedCommands.push(e)}};z([ie()],le.prototype,"_strategy",void 0),le=z([Jt("esri.views.2d.layers.features.sources.StreamMessenger")],le);let J=class extends Z{constructor(e,t,s,r){super(),this._reader=e,this._queryJSON=t,this._page=s,this._end=r,this.chunkId=`${this._page}${this.end?"e":""}`,this.normalizedChunkId=this.chunkId}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get queryInfo(){return{type:"snapshot",chunkId:this.chunkId,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}};async function Ui(u,e,t,s={}){const r=(await Promise.allSettled(t.map((i=>zi(u,e,i,s))))).filter((i=>i.status==="rejected")).map((i=>i.reason));if(r.length)throw new R("featurelayer-query","Encountered errors when downloading data",{errors:r})}async function zi(u,e,t,s={}){const r=`${u.chunkPrefix??""}${t.num}`,i=await u.fetch(t.query,s,{chunkId:r}),a=new J(i,t.query.inner.toJSON(),t.num,!1);a.chunkId=a.normalizedChunkId=r,q(s),e.insert(a)}const $e=8e3;class Ni{constructor(e,t,s,r){this.store=e,this.queryInfo=t,this._options=s,this._fetch=r,this._nextBatch=new Set,this._fetchFeatures=rr((async()=>{if(this._nextBatch.size===0||this._options.signal?.aborted)return;const i=Array.from(this._nextBatch);this._nextBatch.clear(),i.length>$e&&pe.getLogger("esri.views.2d.layers.FeatureLayerView2D").warn(new R("highlight-too-many-features",`highlight is limited to ${$e} features on large layers configured with a display filter to avoid performance issues`));const a=this.queryInfo.objectIdsQueryPageSize,n=Math.ceil($e/a),o=Math.min(n,Math.ceil(i.length/a)),c=Array.from({length:o},((l,d)=>{const h=d*a,p=Math.min(h+a,i.length);return{num:d,query:this.queryInfo.createObjectIdsQuery(i.slice(h,p))}}));try{await Ui({chunkPrefix:"cache."+ir(),fetch:this._fetch},this.store,c,this._options)}catch{}}))}prepareCacheUpdate(e,t){if(t)for(const s of t)this._nextBatch.delete(s);for(const s of e)this._nextBatch.add(s)}applyCacheUpdate(){return this._nextBatch.size===0||this._options.signal?.aborted?null:this._fetchFeatures().catch((()=>{}))}}let dt=class{constructor(e){this._store=e,this._controller=new AbortController}destroy(){this._controller.abort()}get _options(){return{signal:this._controller.signal}}unsafeSetQueryHistoricMoment(e){throw new Error("InternalError: LoadStrategy does not support query info")}async queryByObjectId(e){throw new Error("InternalError: LoadStrategy does not support fetching")}async addParquetFile(e){throw new Error("InternalError: LoadStrategy does not support loading blobs")}prepareCacheUpdate(e,t){}applyCacheUpdate(){return null}};const qe=268435455;let Bi=class{constructor(){this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.idFieldIndices=[],this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}};function Vi(u,e,t,s=!1){const o=u.asUnsafe(),c=o.pos(),l=new Bi;let d=0,h=0;const p=1,_=2,g=4,f=3;let y=null,b=!1;const I=[];for(;o.next();)switch(o.tag()){case 12:y=o.processMessage(nr);break;case 9:if(l.exceededTransferLimit=o.getBool(),l.exceededTransferLimit){l.offsets.geometry=s?new Float64Array(8e3):new Int32Array(8e3),l.centroid=s?new Float64Array(16e3):new Int32Array(16e3);for(let S=0;S<l.centroid.length;S++)l.centroid[S]=qe}break;case 13:{const S=o.processMessage(ar);S.index=d++,I.push(S);break}case 15:{const S=o.getLength(),v=o.pos()+S;if(!l.exceededTransferLimit){const w=l.offsets.geometry,x=l.centroid;w.push(0),x.push(qe),x.push(qe)}!b&&l.exceededTransferLimit&&(b=!0,l.offsets.attributes=s?new Float64Array(8e3*d):new Uint32Array(8e3*d));let M=h*d;for(;o.pos()<v&&o.next();)switch(o.tag()){case p:{b?l.offsets.attributes[M++]=o.pos():l.offsets.attributes.push(o.pos());const w=o.getLength();o.skipLen(w);break}case _:if(e){const w=o.getLength(),x=o.pos()+w;for(;o.pos()<x&&o.next();)switch(o.tag()){case f:{o.getUInt32();const O=o.getSInt64(),D=o.getSInt64();l.centroid[2*h]=O,l.centroid[2*h+1]=D;break}default:o.skip()}}else{l.offsets.geometry[h]=o.pos();const w=o.getLength();l.vertexCount+=w,o.skipLen(w)}break;case g:{const w=o.getLength(),x=o.pos()+w;for(;o.pos()<x&&o.next();)switch(o.tag()){case f:{o.getUInt32();const O=o.getSInt64(),D=o.getSInt64();l.centroid[2*h]=O,l.centroid[2*h+1]=D;break}default:o.skip()}break}default:o.skip()}h++,l.hasFeatures=!0;break}default:o.skip()}l.fields=new _e(I),l.featureCount=h,l.fieldCount=d;const F=jr(t);return l.idFieldIndices=Array.from(F,(S=>l.fields.get(S)?.index)),l.transform=y,l.displayIds=new Uint32Array(l.featureCount),l.groupIds=new Uint16Array(l.featureCount),o.move(c),l}const Qi=!0,Rt=268435455,Dt=128,Pt=128e3,$={small:{delta:new Int32Array(Dt),decoded:new Int32Array(Dt)},small64:{delta:new Float64Array(0),decoded:new Float64Array(0)},large:{delta:new Int32Array(Pt),decoded:new Int32Array(Pt)},large64:{delta:new Float64Array(0),decoded:new Float64Array(0)}};function Et(u,e){return e?u<=$.small64.delta.length?$.small64:(u<=$.large64.delta.length||($.large64.delta=new Float64Array(Math.round(1.25*u)),$.large64.decoded=new Float64Array(Math.round(1.25*u))),$.large64):u<=$.small.delta.length?$.small:(u<=$.large.delta.length||($.large.delta=new Int32Array(Math.round(1.25*u)),$.large.decoded=new Int32Array(Math.round(1.25*u))),$.large)}function Xi(u){try{const t=new or(new Uint8Array(u),new DataView(u));for(;t.next();){if(t.tag()===2)return Yi(t.getMessage());t.skip()}}catch(e){const t=new R("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});pe.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(t)}return null}function Yi(u){for(;u.next();){if(u.tag()===1)return u.getMessage();u.skip()}return null}function Hi(u){const l=u.getLength(),d=u.pos()+l;for(;u.pos()<d&&u.next();)switch(u.tag()){case 1:return u.getString();case 2:return u.getFloat();case 3:return u.getDouble();case 4:return u.getSInt32();case 5:return u.getUInt32();case 6:return u.getInt64();case 7:return u.getUInt64();case 8:return u.getSInt64();case 9:return u.getBool();default:return u.skip(),null}return null}function Ji(u,e,t,s,r,i){return .5*Math.abs(u*s+t*i+r*e-u*i-t*e-r*s)}function Ae(u,e,t,s,r){return u?e*r-s*t===0&&e*s+t*r>0:!1}class de extends st{static fromBuffer(e,t,s=!1){const r=t.geometryType,i=Xi(e),a=Vi(i,r==="esriGeometryPoint",t.featureIdInfo,s);return new de(i,a,t,s)}constructor(e,t,s,r){super(s),this._use64Bit=r,this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0},this._parseCaches=new Array,this._geometryType=s.geometryType,this._reader=e,this._header=t,this._hasNext=t.hasFeatures,this._isPoints=s.geometryType==="esriGeometryPoint"}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){if(this._header.idFieldIndices.length===1)return this._readAttributeAtIndex(this._header.idFieldIndices[0]);const e=this._header.idFieldIndices.map((t=>this._readAttributeAtIndex(t)));return JSON.stringify(e)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const e=this._reader.clone(),t=new de(e,this._header,this.metadata,this._use64Bit);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}get usedMemory(){return Ze+(this._cache.geometry?.usedMemory??0)}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];return e===Rt?null:new k([],[e,t])}_readGeometry(e=!1){if(this._cache.geometry===void 0){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===Rt)return null;const s=this._header.centroid[2*this._featureIndex],r=this._header.centroid[2*this._featureIndex+1];t=new k([],[s,r])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(s===0)return null;r.move(s);try{t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r)}catch{return null}}return t?.coords.length===0&&(t=null),this._cache.geometry=t,t}return this._cache.geometry}_readAttribute(e,t){const s=this._header.fields.get(e);if(s==null)return;const r=this._readAttributeAtIndex(s.index),i=this._header.fields.isDateField(s.name);return t?r==null?r:i?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext,e._parseCaches=this._parseCaches}_readAttributeAtIndex(e){let t=this._parseCaches[e];if(t||(t=new Cr(this.getSize()),this._parseCaches[e]=t),t.has(this._featureIndex))return t.get(this._featureIndex);const s=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],r=this._reader;r.move(s);const i=Hi(r);return t.set(this._featureIndex,i),i}_readGeometryDeltaDecoded(e=!1){if(this._cache.unquantGeometry===void 0){const t=this._readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=t,t;const s=Et(t.coords.length,this._use64Bit).decoded,r=t.clone(s),i=r.coords;let a=0;for(const n of r.lengths){for(let o=1;o<n;o++){const c=2*(a+o),l=2*(a+o-1);i[c]+=i[l],i[c+1]+=i[l+1]}a+=n}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}_parseGeometry(e){const r=e.asUnsafe(),i=r.getLength(),a=r.pos()+i,n=[],o=[];for(;r.pos()<a&&r.next();)switch(r.tag()){case 2:{const c=r.getUInt32(),l=r.pos()+c;for(;r.pos()<l;)o.push(r.getUInt32());break}case 3:{const c=r.getUInt32(),l=r.pos()+c;for(n.push(r.getSInt64()),n.push(r.getSInt64()),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();r.pos()<l;)n.push(r.getSInt64()),n.push(r.getSInt64()),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();break}default:r.skip()}return new k(o,n)}_parseGeometryForDisplay(e){const r=e.asUnsafe(),i=r.getLength(),a=r.pos()+i,n=[],o=[];let c=0,l=0,d=null,h=0;const p=this.geometryType==="esriGeometryPolygon",_=this.geometryType==="esriGeometryPolyline",g=p||_;for(;r.pos()<a&&r.next();)switch(r.tag()){case 2:{const f=r.getUInt32(),y=r.pos()+f;for(;r.pos()<y;){const b=r.getUInt32();n.push(b),c+=b}d=Et(2*c,this._use64Bit).delta;break}case 3:{r.getUInt32();const f=2+(this.hasZ?1:0)+(this.hasM?1:0);re(d);for(const y of n)if(l+f*y>d.length)for(let b=0;b<y;b++)r.getSInt64(),r.getSInt64(),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();else if(p&&Qi){const b=this.getAreaSimplificationThreshold(y,this._header.vertexCount);let I=2,F=1;const S=!1;let v=r.getSInt64(),M=r.getSInt64();d[l++]=v,d[l++]=M,this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();let w=r.getSInt64(),x=r.getSInt64();for(this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();I<y;){let O=r.getSInt64(),D=r.getSInt64();this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();const P=v+w,j=M+x;Ji(v,M,P,j,P+O,j+D)>=b?(h+=-.5*(P-v)*(j+M),F>1&&Ae(g,d[l-2],d[l-1],w,x)?(d[l-2]+=w,d[l-1]+=x):(d[l++]=w,d[l++]=x,F++),v=P,M=j):(O+=w,D+=x),w=O,x=D,I++}F<3||S?l-=2*F:(h+=-.5*(v+w-v)*(M+x+M),Ae(g,d[l-2],d[l-1],w,x)?(d[l-2]+=w,d[l-1]+=x,o.push(F)):(d[l++]=w,d[l++]=x,o.push(++F)))}else{let b=0,I=r.getSInt64(),F=r.getSInt64();this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64(),d[l++]=I,d[l++]=F,b+=1;for(let S=1;S<y;S++){const v=r.getSInt64(),M=r.getSInt64(),w=I+v,x=F+M;h+=-.5*(w-I)*(x+F),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64(),S>2&&Ae(g,d[l-2],d[l-1],v,M)?(d[l-2]+=v,d[l-1]+=M):(d[l++]=v,d[l++]=M,b+=1),I=w,F=x}o.push(b)}break}default:r.skip()}return this._cache.area=h,o.length?new k(o,d):d!=null?this._createDeltaQuantizedExtrudedGeometry(d[0],d[1]):null}}let Se=class{constructor(e,t){this.service=e,this._metadata=t}destroy(){}};function Zi(u,e){switch(u.type){case"memory":return new ea(u,e);case"ogc":return new ra(u,e);case"feature-service":return u.queryMetadata.supportsFormatPBF&&m("featurelayer-pbf")?new ta(u,e):new sa(u,e)}}async function Ki(u){const e=new ur;return await e.open(u,{}),e}class ea extends Se{constructor(e,t){super(e,t),this._portsOpen=Ki(e.source).then((s=>this.client=s))}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return T.fromFeatureSet(s,this._metadata)}}let ta=class extends Se{async executeQuery(e,t){const{data:s}=await lr(this.service.source,e,t),r=!e.quantizationParameters;return de.fromBuffer(s,this._metadata,r)}},sa=class extends Se{async executeQuery(e,t){const{source:s,queryMetadata:r}=this.service;if(e.quantizationParameters!=null&&!r.supportsQuantization){const a=e.clone(),n=Zt(a.quantizationParameters);a.quantizationParameters=null;const{data:o}=await Pe(s,a,this._metadata.spatialReference,t),c=cr(o,this._metadata.featureIdInfo);return Kt(n,c),T.fromOptimizedFeatureSet(c,this._metadata)}const{data:i}=await Pe(s,e,this._metadata.spatialReference,t);return this._metadata.geometryType==="esriGeometryPoint"&&(i.features=i.features?.filter((a=>{if(a.geometry!=null){const n=a.geometry;return Number.isFinite(n.x)&&Number.isFinite(n.y)}return!0}))),T.fromFeatureSet(i,this._metadata)}},ra=class extends Se{async executeQuery(e,t){if(e.quantizationParameters&&!this.service.queryMetadata.supportsQuantization){const r=e.clone(),i=Zt(r.quantizationParameters);r.quantizationParameters=null;const a=await vt(this.service.source,e,t);return Kt(i,a),T.fromOptimizedFeatureSet(a,this._metadata)}const s=await vt(this.service.source,e,t);return T.fromOptimizedFeatureSet(s,this._metadata)}},Os=class extends dt{constructor(e,t,s,r,i){super(s),this._serviceInfo=e,this._queryInfo=t,this._metadata=r,this._connection=i,this._queue=new Ut({concurrency:32,process:async a=>{const n={signal:a.options?.signal,query:a.query.customParameters,useRequestQueue:!0};return this._adapter.executeQuery(a.query.inner,n)}}),this._adapter=Zi(e,r)}unsafeSetQueryHistoricMoment(e){this._queryInfo.updateHistoricMoment(e)}async updateFields(e){this._queryInfo.updateFields(e);const t=Array.from(this._store.chunks()).map((async r=>{const i=Yt.fromJSON(r.queryInfo.queryJSON);if(i)try{return await this._tryUpdateFields(r.reader,i,{chunkId:r.chunkId}),null}catch(a){return a}})),s=(await Promise.all(t)).filter((r=>r));if(s.length)throw new R("featurelayer-query","Encountered errors when downloading fields",{errors:s})}async queryByObjectId(e){if(e.length===0)return T.empty(this._metadata);const t=this._queryInfo.createQuery({objectIds:e});return this._fetch(t,null,null)}async _fetch(e,t,s){const r=await this._enqueue(e,t);return await this._tryUpdateFields(r,e.inner,s),r}async _tryUpdateFields(e,t,s){const r=this._queryInfo.createPatchFieldsQuery(t,e,s);if(!r)return;const i=await this._enqueue(r,this._options);i.getSize()===e.getSize()?e.joinAttributes(i):pe.getLogger("esri.views.2d.layers.features.sources.strategies.AFetchLoadStrategy").error(new R("featurelayer-query",`Failed to join features. Expected a count of ${e.getSize()} features, but got ${i.getSize()}`,{query:r.inner.toJSON(),debugInfo:s}))}async _enqueue(e,t){return this._connection.onEvent({type:"fetchStart"}),this._queue.push({query:e,options:t}).finally((()=>{this._connection.onEvent({type:"fetchEnd",done:this._queue.length===0})}))}},$s=class extends Os{constructor(e,t,s,r,i){super(e,t,s,r,i),this._chunksById=new Map,this._featureCache=new Ni(s,t,this._options,this._fetch.bind(this))}prepareCacheUpdate(e,t){return this._featureCache.prepareCacheUpdate(e,t)}applyCacheUpdate(){return this._featureCache.applyCacheUpdate()}unload(e){this._removeChunks(e.tile)}_addChunk(e){const t=e.tile.id;this._chunksById.has(t)||this._chunksById.set(t,[]);const s=e.size();(s||e.first||e.end)&&(m("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] ATileLoadStrategy.addChunk [count=${s}]`),this._chunksById.get(t).push(e),this._store.insert(e))}_removeChunks(e){const t=this._chunksById.get(e.key.id)??[];for(const s of t)m("esri-2d-update-debug")&&console.debug(`Tile[${e.key.id}] Chunk[${s.chunkId}] ATileLoadStrategy.removeChunk`),this._store.remove(s);this._chunksById.delete(e.key.id)}},jt=class extends Z{constructor(e,t,s,r,i,a){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._sourceTile=r,this._sourceTileDepth=i,this._end=a,this.chunkId=`${this._tile.key.id}.${this._sourceTile?.key.id}${this._end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._sourceTile?.key.normalizedId}${this._end?"e":""}`}get queryInfo(){return{type:"drill-down-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,sourceTileDepth:this._sourceTileDepth,sourceTileId:this._sourceTile?.key.id,size:this.size(),end:this.end}}get first(){return this._sourceTileDepth===0}get reader(){return this._reader}get end(){return this._end}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}},ia=class{constructor(e,t){this.subscription=e,this._tileIdToResult=new Map,this._controller=new AbortController,this._handles=fe([ue(e.signal,(()=>this._controller.abort())),ue(t,(()=>this._controller.abort()))])}destroy(){this._controller.abort(),this._handles.remove()}get(e){return this._tileIdToResult.get(e)}set(e,t){this._tileIdToResult.set(e,t)}get options(){return{signal:this._controller.signal}}},aa=class extends $s{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{supportsDisplayFilter:!0,willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new ia(e,this._options));const t=this._loadStates.get(e.key.id);let s;try{for await(const i of this._fetchChunkInfos(t,e.tile,0)){const{queryJSON:a,reader:n,sourceTile:o,sourceTileDepth:c,tile:l}=i,d=new jt(n,a,l,o,c,!1);q(t.options),this._addChunk(d)}}catch(i){s=i}const r=new jt(T.empty(this._metadata),null,e.tile,null,-1,!0);if(this._addChunk(r),s)throw s}unload(e){super.unload(e),this._loadStates.get(e.key.id)?.destroy(),this._loadStates.delete(e.key.id)}async*_fetchChunkInfos(e,t,s){let r=e.get(t.id);const i=!!r;if(r||(r=await this._fetchChunkInfo(e,t,s),e.set(t.id,r)),r.reader.exceededTransferLimit&&s<m("featurelayer-query-max-depth"))for(const a of t.createChildTiles())yield*this._fetchChunkInfos(e,a,s+1);else i||(yield r)}async _fetchChunkInfo(e,t,s){const r=e.subscription.tile.getQuantizationParameters(),i=this._queryInfo.createTileQuery(t,{returnExceededLimitFeatures:!1,quantizationParameters:r});return{reader:await this._fetch(i,e.options,{chunkId:t.id}),queryJSON:i.inner.toJSON(),tile:e.subscription.tile,sourceTile:t,sourceTileDepth:s}}},Gt=class extends Z{constructor(e,t,s,r,i){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._page=r,this._end=i,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get queryInfo(){return{type:"paged-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get page(){return this._page}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}},na=class{constructor(e,t){this.subscription=e,this._pages=new Set,this._controller=new AbortController,this._done=!1,this._handles=fe([ue(e.signal,(()=>this._controller.abort())),ue(t,(()=>this._controller.abort()))])}destroy(){this._controller.abort(),this._handles.remove()}get pageStart(){let e=-1;for(const t of this._pages.values())e=Math.max(e,t);return e+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(e,t){this._pages.add(e),this._done=this._done||t}};class oa extends $s{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{supportsDisplayFilter:!0,willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){const t=dr(this._loadStates,e.key.id,(()=>new na(e,this._options)));for await(const s of this._fetchPages(t))this._addChunk(s)}unload(e){super.unload(e),this._loadStates.get(e.key.id)?.destroy(),this._loadStates.delete(e.key.id)}async*_fetchPages(e){let t;try{for await(const s of this._concurrentPageStream(e))q(e.options),s.size()!==0&&(yield s)}catch(s){t=s}if(t&&es(t)||(yield new Gt(T.empty(this._metadata),null,e.subscription.tile,-1,!0)),t)throw t}async*_concurrentPageStream(e){const t=m("featurelayer-query-tile-concurrency"),s=this._pageStreamAll(e),r=[];let i=!1,a=1;for(;!i;){const n=[];for(;!i&&r.length<a;){const o=s.next();if(!o.value){i=!0;break}const c=o.value;c.then((l=>{l.reader.exceededTransferLimit||(i=!0)})).catch((l=>{i=!0})).finally((()=>{r.splice(r.indexOf(c),1)})),r.push(c),n.push(c)}for(const o of n)yield o;r.length&&await Promise.race(r),a<t&&(a+=1)}}*_pageStreamAll(e){const t=Math.ceil(m("featurelayer-query-tile-max-features")/this._queryInfo.pageSize);for(let s=0;s<t;s++)yield this._downloadPage(s,e)}async _downloadPage(e,t){q(t.options);const s=t.subscription.tile,r=this._queryInfo.createPagedTileQuery(s,e),i=await this._fetch(r,t.options,{chunkId:`${s.id}-${e}`});return q(t.options),new Gt(i,r.inner.toJSON(),s,e,!1)}}let Re=null;async function Be(){return Re||(Re=la()),Re}async function la(){const u=await Ee(()=>import("./chunk-6EcuAM-e.js"),[]);return await u.default({module_or_path:hr("esri/libs/parquet/pkg/bundle_bg.wasm")}),u}const qs=u=>async function(e,t,s){const r=u(),{data:i}=await et(e,{responseType:"array-buffer",query:r,headers:{range:`bytes=${t}-${s}`},useRequestQueue:!0});return i},As=u=>async function(e){const t=u(),{data:s}=await et(e,{responseType:"native",method:"head",query:t,useRequestQueue:!0}),r=s.headers.get("Content-Length");if(r==null)throw new Error("Unable to parse content length");return parseInt(r,10)};let Wt=class Ve{static async create(e,t){const s=await Be(),r=await s.readMetadata(e,qs(t),As(t));return Ve.fromFileMetadata(r)}static fromFileMetadata(e){const t=[];for(let s=0;s<e.numFields();s++){const r=e.getFieldByIndex(s);t.push({name:r.name,type:r.type,alias:r.name,index:r.index}),r.free()}return new Ve(e,t)}constructor(e,t){this._inner=e,this.fields=t}destroy(){this._inner.free()}[Symbol.dispose](){this.destroy()}get size(){return this._inner.numRows()}getFieldIndex(e){return this._inner.getFieldIndex(e)}tryReadGeoMetadata(){const e=this._inner.keyValueMetadata("geo");return e==null?null:JSON.parse(e)}tryReadEsriMetadata(){const e=this._inner.keyValueMetadata("esri");return e==null?null:JSON.parse(e)}};function ca(u){switch(u){case"esriGeometryPoint":return ee.Point;case"esriGeometryPolygon":return ee.Polygon;case"esriGeometryPolyline":return ee.Polyline;case"esriGeometryMultipoint":return ee.Multipoint;default:throw new Error(`InternalError: Found unexpected GeometryType: ${u}`)}}function Lt(u,e,t){const s=Gr.new();if(s.geometryType=ca(u.geometryType),u.encoding.type==="location")s.latIndex=e.getFieldIndex(u.encoding.latitudeFieldName),s.lngIndex=e.getFieldIndex(u.encoding.longitudeFieldName);else if(s.wkbIndex=e.getFieldIndex(u.encoding.primaryFieldName),u.encoding.multiscale){const r=Wr.new();for(const i of u.encoding.multiscale.levels){const[a,n]=i.transform.translate,[o,c]=i.transform.scale,l=e.getFieldIndex(i.column);r.push(l,a,n,o,c)}s.setMultiscaleInfo(r)}return s.inWkid=u.spatialReference.wkid,t&&(s.outWkid=t.wkid),s}class he{static async create(e,t){const s=await Be(),r=qs(t.getCustomParameters),i=As(t.getCustomParameters),a=await s.readMetadata(e,r,i),n=Lt(t.geometryInfo,a,t.outSpatialReference),o=await s.readFile(e,r,i,a,n);return new he(o,Wt.fromFileMetadata(o.metadata()))}static async fromFile(e,t,s){const r=await Be(),i=await r.readMetadataFromFile(e),a=t?Lt(t,i,s):void 0,n=await r.readFileFromBinary(a,e);return new he(n,Wt.fromFileMetadata(n.metadata()))}constructor(e,t){this.inner=e,this.metadata=t}destroy(){this.inner.free(),this.metadata.destroy()}[Symbol.dispose](){this.destroy()}}class ht extends st{constructor(e,t,s,r,i,a=new Uint32Array(r.size())){super(e),this._fields=t,this._geometryInfo=s,this._inner=r,this._chunkId=i,this._displayIds=a,this._index=-1,this.usedMemory=Ze,this._size=this._inner.size();const n=e.featureIdInfo;n.type==="object-id"&&(this._objectIdFieldIndex=this._fields.get(n.fieldName)?.index),this._chunkId>65535&&console.error("Exceeded max allowed parquet reader size")}destroy(){super.destroy(),this._inner.free()}get fields(){return this._fields}get geometryType(){return this._geometryInfo.geometryType}get hasFeatures(){return!0}get hasNext(){throw new Error("Method not implemented.")}get exceededTransferLimit(){return!1}get hasZ(){return!1}get hasM(){return!1}getInTransform(){return null}getSize(){return this._size}getCursor(){return this.copy()}getAttributeHash(){let e="";for(const t of this.fields.fields)e+=this._readAttribute(t.name,!1)+".";return e}getObjectId(){return this._objectIdFieldIndex!=null?this._inner.readAttribute(this._index,this._objectIdFieldIndex):this._index<<16|this._chunkId}getDisplayId(){return this._displayIds[this._index]}setDisplayId(e){this._displayIds[this._index]=e}setIndex(e){this._index=e}getBoundsXMin(){return this._inner.boundsXMin(this._index)}getBoundsYMin(){return this._inner.boundsYMin(this._index)}getBoundsXMax(){return this._inner.boundsXMax(this._index)}getBoundsYMax(){return this._inner.boundsYMax(this._index)}setBoundsXMin(e){throw new Error("InternalError: Setting bounds is unsupported")}setBoundsYMin(e){throw new Error("InternalError: Setting bounds is unsupported")}setBoundsXMax(e){throw new Error("InternalError: Setting bounds is unsupported")}setBoundsYMax(e){throw new Error("InternalError: Setting bounds is unsupported")}getIndex(){return this._index}next(){for(;++this._index<this._size&&!this._getExists(););return this._index<this._size}readGeometryArea(){return this.readGeometryForDisplay()?.area()??0}copy(){const e=new ht(this.metadata,this._fields,this._geometryInfo,this._inner,this._chunkId,this._displayIds);return this.copyInto(e),e}copyInto(e){super.copyInto(e),e._index=this._index}readGeometryForDisplayTransformed(e){const[t,s]=e.translate,[r,i]=e.scale,a=this._inner.readGeometryTransformed(this._index,t,s,r,i);return a?new k(a.readLengthsUnsafe(),a.readCoordsUnsafe()):null}_readGeometry(e){const t=this._inner.readCoords(this._index),s=this._inner.readLengths(this._index);return t&&s?new k(s,t):null}_readX(){return this._readGeometry()?.coords[0]}_readY(){return this._readGeometry()?.coords[1]}_readServerCentroid(){return null}_readAttribute(e,t){const s=this.fields.get(e);if(!s)return;if(s.index==null)return this.getObjectId();const r=this._inner.readAttribute(this._index,s.index);if(r==null)return r;const i=this.fields.isDateField(s.name);return t?r==null?r:i?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._fields.fields)t.index!=null?this._inner.hasField(t.index)&&(e[t.name]=this._readAttribute(t.name,!1)):e.__OBJECTID=this.getObjectId();return e}}class ua extends dt{constructor(e,t,s,r){super(r),this._service=e,this._metadata=t,this._schema=s,this._chunkId=0,this._files=[],this._availableFields=new Set(s.mutable.availableFields);const{geometryInfo:i}=this._service;if(i.encoding.type==="location")this._availableFields.add(i.encoding.latitudeFieldName),this._availableFields.add(i.encoding.longitudeFieldName);else if(i.encoding.multiscale!=null&&i.encoding.multiscale.levels.length>=1){const a=i.encoding.multiscale.levels[0];this._availableFields.add(a.column)}else this._availableFields.add(i.encoding.primaryFieldName)}destroy(){for(const e of this._files)e.destroy()}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}async updateFields(e){await this._promise;const t=new Set(e),s=_r(t,this._availableFields);this._availableFields=pr(s,this._availableFields),s.size&&await Promise.all(this._files.map((r=>{const i=Array.from(s).map((a=>r.metadata.getFieldIndex(a)));return r.inner.updateChunks(new Uint16Array(i))})))}async load(e){return this._promise==null&&(this._promise=this._download().then((()=>{this._loadHigherResGeometry()}))),this._promise}unload(e){}async addParquetFile(e){this._insert(e)}async _loadHigherResGeometry(){const{geometryInfo:e}=this._service;if(e.encoding.type==="wkb"){if(!(e.encoding.multiscale!=null&&e.encoding.multiscale.levels.length>=1))return;await this.updateFields([e.encoding.primaryFieldName])}const t=Array.from(this._store.chunks());this._store.clear();for(const s of t)this._store.insert(s);this._store.refresh()}async _insert(e){const t=await he.create(e,{geometryInfo:this._service.geometryInfo,outSpatialReference:this._service.outSpatialReference,getCustomParameters:()=>this._schema.mutable.dataFilter.customParameters}),{geometryInfo:s}=this._service;q(this._options);const{fields:r,timeZoneByFieldName:i}=this._service.metadata.fieldsIndex,a=r.map((c=>({...c,index:t.metadata.getFieldIndex(c.name)}))),n=_e.fromJSON({fields:a,timeZoneByFieldName:i}),o=new Uint16Array(Array.from(this._availableFields.values()).map((c=>n.get(c)?.index)).filter((c=>c!=null)));await t.inner.readChunksWithCallback(o,(c=>{const l=this._chunkId++,d=new ht(this._metadata,n,s,c,l),h=new J(d,null,l,!1);this._store.insert(h)})),this._files.push(t)}async _download(){try{await Promise.all(this._service.source.urls.map((t=>this._insert(t))));const e=new J(T.empty(this._metadata),null,-1,!0);this._store.insert(e)}catch(e){throw console.error(e),e}}}class da extends Os{constructor(e,t,s,r,i,a){super(e,t,s,i,a),this._snapshotInfo=r}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(e){return this._promise==null&&(this._promise=this._download()),this._promise}unload(e){}async _download(){const e=this._snapshotInfo.initialTolerance,t=e?new fr({mode:"view",originPosition:"upper-left",tolerance:e}):null;await this._downloadStreaming(t),t!=null&&await this._downloadRefresh()}async _downloadStreaming(e){try{for await(const t of this._fetchPages(e))this._store.insert(t)}catch(t){throw new R("featurelayer-query","Encountered error when downloading data",{error:t})}}async _downloadRefresh(){try{const e=[];for await(const t of this._fetchPages(null))e.push(t);this._store.clear();for(const t of e)this._store.insert(t);this._store.refresh()}catch(e){throw new R("featurelayer-query","Encountered error when downloading data",{error:e})}}async*_fetchPages(e){let t;try{for await(const s of this._concurrentPageStream(e))s.size()!==0&&(yield s)}catch(s){t=s}if(t&&es(t)||(yield new J(T.empty(this._metadata),null,-1,!0)),t)throw t}async*_concurrentPageStream(e){const t=m("featurelayer-snapshot-concurrency"),s=this._pageStreamAll(e),r=[];let i=!1,a=1;for(;!i;){const n=[];for(;!i&&r.length<a;){const o=s.next();if(!o.value){i=!0;break}const c=o.value;c.then((l=>{l.reader.exceededTransferLimit||(i=!0)})).catch((l=>{i=!0})).finally((()=>{r.splice(r.indexOf(c),1)})),r.push(c),n.push(c)}for(const o of n)yield o;r.length&&await Promise.race(r),a<t&&(a+=1)}}*_pageStreamAll(e){const t=Math.ceil(this._snapshotInfo.maxFeatureCount/this._queryInfo.pageSize);for(let s=0;s<t;s++)yield this._downloadPage(s,e)}async _downloadPage(e,t){q(this._options);const s=this._queryInfo.createPagedQuery(e,t),r=await this._fetch(s,this._options,{chunkId:e.toString()}),i=new J(r,s.inner.toJSON(),e,!1);return q(this._options),i}}let U=class extends Ht{constructor(u){super(u)}get connectionStatus(){return this.connection?.connectionStatus}get errorString(){return this.connection?.errorString}};z([ie()],U.prototype,"connection",void 0),z([ie()],U.prototype,"connectionStatus",null),z([ie()],U.prototype,"errorString",null),U=z([Jt("esri.views.2d.layers.features.sources.StreamConnectionState")],U);let ha=class{constructor(e,t){this._metadata=e,this._onUpdate=t,this._objectIdToFeature=new Map}get size(){return this._objectIdToFeature.size}get reader(){return T.fromFeatures([...this._objectIdToFeature.values()],this._metadata)}add(e){this._objectIdToFeature.set(e.objectId,e)}forEach(e){this._objectIdToFeature.forEach(e)}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),t):null}clear(){this._objectIdToFeature=new Map}update(e,t){this._onUpdate(e?.length??0)}};class _a extends Z{constructor(e){super(),this._reader=e,this.chunkId="stream-chunk",this.normalizedChunkId="stream-chunk"}get reader(){return this._reader}get first(){return!0}get end(){return!0}get queryInfo(){return{type:"stream",chunkId:this.chunkId,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}}let pa=class extends dt{constructor(e,t,s,r,i){super(s),this._service=e,this._dataFilter=t,this._streamOptions=r,this._metadata=i,this._connectionState=new U,this._forceRefresh=!1,this.events=new Ye;const{timeInfo:a}=this._metadata,{purgeOptions:n}=t;this._stagingStore=new ha(this._metadata.weakCloneWithAdditionalFields([{name:ss,alias:"timeReceived",type:"esriFieldTypeDate"}]),(o=>this.events.emit("features-updated",o))),this._manager=new Lr(this._stagingStore,i.featureIdInfo,a,n),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){return this._connectionState?.errorString}async refresh(){const e=this._chunk!=null;return this._manager.checkForUpdates()||!e||this._forceRefresh?(this._chunk&&this._store.remove(this._chunk),this._forceRefresh=!1,this._chunk=new _a(this._stagingStore.reader),this._store.insert(this._chunk),this.events.emit("tick"),!0):(this.events.emit("tick"),!1)}async updateFields(e){throw new Error("Updating available fields not supported for StreamLayer")}async load(e){}unload(e){}disconnect(){this._connection=Xt(this._connection),this._connectionState.connection=null,this._handlesGroup?.remove()}connect(){if(this._connection!=null)return;const{geometryType:e,spatialReference:t}=this._metadata,{maxReconnectionAttempts:s,maxReconnectionInterval:r,geometryDefinition:i,definitionExpression:a,customParameters:n}=this._dataFilter;this._connection=Ur(this._service.source,t,this._streamOptions.outSR,e,a,i,s,r,n),this._handlesGroup=fe([this._connection.on("data-received",(o=>this._onFeature(o))),this._connection.on("message-received",(o=>this._onWebSocketMessage(o)))]),this._connectionState.connection=this._connection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear(),this._forceRefresh=!0}updateCustomParameters(e){this._connection?.updateCustomParameters(e)}sendMessageToSocket(e){this._connection?.sendMessageToSocket(e)}sendMessageToClient(e){this._connection?.sendMessageToClient(e)}_onWebSocketMessage(e){if("type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this._manager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this._manager.removeByTrackId(t);break;case"clear":this.clear()}this.events.emit("message-received",e)}_onFeature(e){try{this._manager.add(e),this.events.emit("data-received",e)}catch{}}};class fa{constructor(e){this._metadata=e,this._chunks=new Map,this._chunksToRemove=[],this._overrides=new ki,this.events=new Ye,this.featureAdapter=new Tr}destroy(){this.clear()}clear(){for(const e of this._chunks.values())this._chunksToRemove.push(e);this._chunks.clear(),this._overrides.clearWeakOverrides()}*chunks(){this._overrides&&(yield this._overrides.asChunk(this._metadata)),yield*this._chunks.values()}insert(e){m("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.insert`),this._overrides.onChunkInsert(e),this._chunks.set(e.chunkId,e),this.events.emit("changed")}remove(e){m("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.remove`),this._chunks.delete(e.chunkId),this._chunksToRemove.push(e)}cleanup(){const e=this._chunksToRemove;return this._chunksToRemove=[],this._overrides.cleanup(this._chunks.values()),e}applyOverride(e){this._overrides.apply(e,this),this.events.emit("changed");for(const t of this._chunks.values())t.invalidate()}takeOverrideUpdate(){return this._overrides.takeOverrideUpdate()}refresh(){this.events.emit("refresh")}forEach(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const i=r.getObjectId();t.has(i)||(e(r.copy()),t.add(i))}}}forEachUnsafe(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const i=r.getObjectId();t.has(i)||(e(r),t.add(i))}}}mapObjectIdsFromGlobalIds(e,t){const s=new Map,r=new Set(e);return this._overrides.putWeakObjectIdsFromGlobalIds(s,r,t),this._forEachUnsafeIgnoreOverrides((i=>{const a=i.readAttribute(t);if(a&&r.has(a)&&!s.has(a)){const n=i.getObjectId();s.set(a,n)}})),s}forEachInBounds(e,t){const s=new Set;for(const r of this.chunks()){const i=r.queryFeaturesInBounds(e);for(;i.next();){const a=i.getObjectId();s.has(a)||(t(i.copy()),s.add(a))}}}forEachBounds(e,t){const s=He();for(const r of e)r.getBounds(s)&&t(s)}_forEachUnsafeIgnoreOverrides(e){const t=new Set;for(const s of this._chunks.values()){const r=s.reader.withoutOverrides().getCursor();for(;r.next();){const i=r.getObjectId();t.has(i)||(e(r),t.add(i))}}}}class ga{constructor(e,t,s,r,i){this.service=e,this._aggregateAdapter=t,this._subscriptions=s,this._connection=r,this._cachedObjectIds=i,this._updateTracking=new zr({debugName:"FeatureSource"}),this._didInvalidateData=!1,this._metadata=ye.createFeature(e.metadata),this._store=new fa(this._metadata)}destroy(){this._strategy?.destroy(),this._store.destroy(),this._streamMessenger?.destroy(),this.service.type==="memory"&&this.service.source.map((e=>e.close()))}get metadata(){if(!this._metadata)throw new Error("InternalError: Metadata not defined. Was update called?");return this._metadata}get store(){return this._store}get streamMessenger(){return this._streamMessenger==null&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return Ei.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){if(!this._schema)return null;const{dataFilter:e}=this._schema.mutable,t=this._schema.mutable.availableFields,s=this._metadata;this._queryEngine=new rs({featureStore:this._store,fieldsIndex:s.fieldsIndex,geometryType:s.geometryType,featureIdInfo:s.featureIdInfo,hasM:!1,hasZ:!1,spatialReference:this.service.outSpatialReference,aggregateAdapter:this._aggregateAdapter,timeInfo:s.timeInfo,definitionExpression:e.definitionExpression,availableFields:t})}return this._queryEngine}get isStream(){return this._schema.type==="stream"}get hasDisplayFilter(){return!!this._schema&&"displayFilterInfo"in this._schema.mutable&&this._schema.mutable.displayFilterInfo!=null}chunks(){return Array.from(this._store.chunks())}prepareCacheUpdate(e,t){const s=new Set,r=new Set;for(const i of e)this._cachedObjectIds.has(i)||(this._cachedObjectIds.add(i),s.add(i));for(const i of t)this._cachedObjectIds.delete(i),r.add(i);this.hasDisplayFilter&&this._strategy.prepareCacheUpdate(s,r)}async applyCacheUpdate(){this.hasDisplayFilter&&await this._updateTracking.addPromise(this._strategy.applyCacheUpdate())}cleanup(){return this._store.cleanup()}onSubscribe(e){this._connection.onEvent({type:"subscribe",tile:e.tile.id});const t=this._strategy?.load(e);t&&(t.then((()=>this._connection.onEvent({type:"loaded",tile:e.tile.id}))).catch((s=>this._connection.onEvent({type:"error",tile:e.tile.id,error:s}))),this._updateTracking.addPromise(t))}onResume(e){this._updateTracking.addPromise(ts(this._strategy?.load(e)))}onUnsubscribe(e){this._connection.onEvent({type:"unsubscribe",tile:e.tile.id}),this._strategy?.unload(e)}applyOverride(e){this._didInvalidateData=!0,this._store.applyOverride(e)}takeOverrideUpdate(){return this._store.takeOverrideUpdate()}async update(e,t){const s=e.source,r=Qt(this._schema?.mutable,s.mutable);if(!r)return!1;if(m("esri-2d-update-debug")&&console.debug(`Version[${t}] FeatureSource.update`,{changes:r}),this._schema=s,this._queryEngine?.destroy(),this._queryEngine=null,this.service.type==="feature-service"&&this.service.queryMetadata.lastEditDate!=null&&(this._lastEditDate=this.service.queryMetadata.lastEditDate),this._streamMessenger==null&&this._schema.type==="stream"&&this._initStreamMessenger(),It(r,"sourceRefreshVersion")&&this._strategy?.refresh)return this._strategy.refresh();if((s.type==="feature"||s.type==="parquet")&&It(r,"availableFields")){if(await this._queryLastEditDateChanged()||this._didInvalidateData)this._didInvalidateData=!1,await this._updateStrategy(t);else{this._connection.onEvent({type:"updateFieldsStart"});try{await this._strategy.updateFields(s.mutable.availableFields),this._connection.onEvent({type:"updateFieldsEnd"})}catch(i){this._connection.onEvent({type:"updateFieldsError",error:i})}}return!1}return!!(Me(r,"dataFilter")||Me(r,"sourceRefreshVersion")||this._strategy.about.supportsDisplayFilter&&Me(r,"displayFilterInfo"))&&(await this._updateStrategy(t),!0)}async addParquetFile(e){this._strategy.addParquetFile(e)}unsafeSetQueryHistoricMoment(e){this._schema.type==="feature"&&(this._schema.mutable.dataFilter.historicMoment=e,this._strategy.unsafeSetQueryHistoricMoment(new Date(e)))}_initStreamMessenger(){this._streamMessenger==null&&(this._streamMessenger=new le(this._connection))}async normalizeOverrides(e){const t={historicMoment:e.historicMoment,commands:{updateWeak:e.commands.updateWeak.map(A.fromJSON),removeWeak:e.commands.removeWeak,update:e.commands.update.map(A.fromJSON),remove:e.commands.remove,release:e.commands.release}},s=e.commands.updateByIdWeak,r=await this._queryOptimizedFeatures(s);return t.commands.updateWeak.push(...r),t}async _queryOptimizedFeatures(e){if(e.length===0)return[];const t=[],s=(await this._strategy.queryByObjectId(e)).getCursor();for(;s.next();)t.push(s.readOptimizedFeatureWorldSpace());return t}getObjectIdsFromGlobalIds(e){const t=this.metadata.globalIdField;if(t==null)throw new Error("InternalError: Recieved an edit with globalIds, but not supported by the service");const s=this._store.mapObjectIdsFromGlobalIds(e,t).values();return Array.from(s)}async _queryLastEditDateChanged(){if(this._lastEditDate==null)return!1;const e=this.service.source,t={...e.query,f:"json"},s=(await et(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate;return s!==this._lastEditDate&&(this._lastEditDate=s,!0)}async _createStrategy(){const e="isSourceHosted"in this.service&&this.service.isSourceHosted,t=Array.isArray(this.service.source),s=this.service.source&&"collection"in this.service.source,r=e||t||s;if(this._schema.type==="stream"){const o=new pa(this.service,this._schema.mutable.dataFilter,this._store,{outSR:this.service.outSpatialReference},this.metadata);return this._streamMessenger.strategy=o,o}if(this._schema.type==="parquet"){const o=this.service;return new ua(o,this._metadata,this._schema,this._store)}const i=this.service,a=Wi.fromSchema(i,this._schema,this._metadata),n=await this._supportSnapshotMode(i,a);return n?new da(i,a,this._store,n,this.metadata,this._connection):r?new oa(i,a,this._store,this.metadata,this._connection):new aa(i,a,this._store,this.metadata,this._connection)}async _updateStrategy(e){const t=await this._createStrategy();this._connection.onEvent({type:"updateStrategyStart",about:t.about});const s=!!this._strategy;this._store.clear(),this._strategy?.destroy(),this._strategy=t,m("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategy`,{strategy:t});const r=Array.from(this._subscriptions.values());if(!r.length)return void this._connection.onEvent({type:"updateStrategyEnd"});const i=Promise.all(r.map((a=>this._strategy.load(a).then((()=>this._connection.onEvent({type:"loaded",tile:a.tile.id}))).catch((n=>this._connection.onEvent({type:"error",tile:a.tile.id,error:n}))))));this._updateTracking.addPromise(i),this._strategy.prepareCacheUpdate(this._cachedObjectIds);try{s&&await i}catch(a){Ke(a)}this._connection.onEvent({type:"updateStrategyEnd"}),m("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategyEnd`,{strategy:t})}async _supportSnapshotMode(e,t){const{queryMetadata:s}=e,r=s.snapshotInfo;return r?await this._executeExceedsLimitQuery(e,t,r)?null:r:null}async _executeExceedsLimitQuery(e,t,s){if(!s.supportsExceedsLimit)return this._executeExceedsLimitFallbackQuery(e,t,s);try{const r=e.source,i=t.createQuery();i.inner.orderByFields=[],i.inner.returnGeometry=!1;const a=new gr;return a.statisticType="exceedslimit",a.maxPointCount=s.maxFeatureCount,a.maxRecordCount=s.maxFeatureCount,a.outStatisticFieldName="exceedslimit",s.maxVertexCount&&(a.maxVertexCount=s.maxVertexCount),i.inner.outStatistics=[a],i.inner.cacheHint=!0,(await Pe(r,i.inner,void 0,{query:i.customParameters})).data.features[0]?.attributes.exceedslimit!==0}catch{return!0}}async _executeExceedsLimitFallbackQuery(e,t,s){if(s.maxVertexCount)return!0;const r=e.source,i=t.createQuery();i.inner.orderByFields=[],i.inner.returnGeometry=!1,i.inner.cacheHint=!0;try{return(await yr(r,i.inner,{query:i.customParameters})).data.count>s.maxFeatureCount}catch{return!0}}}class ya{constructor(e,t){this.tile=e,this.version=t,this._abortController=new AbortController}get key(){return this.tile.key}get signal(){return this._abortController.signal}abort(){this._abortController.abort()}}class se{constructor(e){this.inner=e,this.resolver=xr()}}class wo{constructor(){this._aggregateAdapter={getFeatureObjectIds:e=>this._processor.getFeatureObjectIdsForAggregate(e)},this._subscriptions=new Map,this._cachedObjectIds=new Set,this._updateRequested=!1,this._didSourceRefresh=!1,this._updateSubscriptionRequests=[],this._updateHighlightRequests=[]}destroy(){this._subscriptions.clear(),this._processor?.destroy(),this._source?.destroy(),this._handles?.remove(),this._updateOverridesRequest=null,this._tileInfoView=null}onAttach(e){m("esri-2d-update-debug")&&console.debug("Pipeline.onAttach");const t=this._connection,s=mr.fromJSON(e.tileInfoJSON);this._tileInfoView=new br(s),this._source=new ga(e.service,this._aggregateAdapter,this._subscriptions,t,this._cachedObjectIds),this._processor=new Di(t,this._source),this._handles=fe([this._source.store.events.on("changed",(()=>this._requestUpdate())),this._source.store.events.on("refresh",(()=>this._requestRefresh())),De((()=>this._source.updateTracking.updating),(()=>{this._requestUpdate(),ts(this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}))}))])}onDetach(){m("esri-2d-update-debug")&&console.debug("Pipeline.onDetach"),this.destroy()}set remoteClient(e){this._connection=new Nr(e)}get features(){const e=this._source?.queryEngine;if(!e)throw new R("no-queryEngine","No query engine defined");return e}get aggregates(){const e=this._processor?.aggregateQueryEngine;if(!e)throw new R("no-queryEngine","No aggregate query engine defined");return e}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}getDisplayFeatures(e){return this._processor.getDisplayFeatures(e)}getDisplayIds(e){return this._processor.getDisplayIds(e)}getObjectIdsFromGlobalIds(e){return this._source.getObjectIdsFromGlobalIds(e)}async updateSchema(e,t){return m("esri-2d-update-debug")&&this._updateSchemaRequest&&console.error("InternalError: Schema already updating"),this._updateSchemaRequest=new se({schema:e,version:t}),this._requestUpdate(),this._updateSchemaRequest.resolver.promise}updateSubscriptions(e){const t=new se(e);return this._updateSubscriptionRequests.push(t),this._requestUpdate(),t.resolver.promise}updateHighlight(e){const t=new se(e);return this._updateHighlightRequests.push(t),this._requestUpdate(),t.resolver.promise}async addParquetFile(e){return this._source.addParquetFile(e)}async onOverride(e){if(this._updateOverridesRequest!=null)throw new R("featurelayer","InternalError - Already processing an edit");this._updateOverridesRequest=new se(e);const t=this._updateOverridesRequest.resolver.promise;return this._requestUpdate(),t}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(e,t){return this.features.executeQuery(e,t)}async queryHeatmapStatistics(e){const t=Math.round(Ir(e.radius));let s=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const i=typeof e.fieldOffset=="string",a=e.fieldOffset??0,n=Array.from(this._subscriptions.values()),o=this._source.chunks(),c=t**2,l=3/(Math.PI*c),d=2*t,h=Math.ceil(C/d);for(const p of n){const _=p.tile,g=new Float64Array(h*h);for(const f of o){const y=f.getTileReader(_);if(!y)continue;const b=y.getCursor();for(;b.next();){let I=1;if(e.field!=null){const O=b.readAttribute(e.field);I=i?-1*+O:+O+a}const F=b.readXForDisplay()/d,S=b.readYForDisplay()/d,v=Math.floor(F),M=Math.floor(S);if(v<0||M<0||v>=h||M>=h)continue;const w=((.5+v-F)*d)**2+((.5+M-S)*d)**2;if(w>c)continue;const x=I*(l*(1-w/c)**2);g[M+v*h]+=x}}for(let f=0;f<g.length;f++)s=Math.min(s,g[f]),r=Math.max(r,g[f])}return{max:r,min:s}}async getSampleFeatures(e){const t=this._source.chunks();if(t.reduce(((o,c)=>o+c.size()),0)<=e.minFeatureCount){if(!this._source.updateTracking.updating){const o=[];return this._source.store.forEachUnsafe((c=>o.push(c.readLegacyFeatureWorldSpace()))),o}return null}const s=new Set,r=[],i=t.map((o=>o.reader.getCursor())),a=new wr,n=3*e.sampleSize;for(let o=0;o<n&&r.length<e.sampleSize;o++){const c=i[a.getIntRange(0,t.length-1)];if(c.getSize()===0)continue;const l=a.getIntRange(0,c.getSize()-1);c.setIndex(l);const d=c.getObjectId();s.has(d)||(s.add(d),r.push(c.readLegacyFeatureWorldSpace()))}return r.length>=e.sampleSize?r:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,vr((()=>this._scheduleNextUpdate())))}_requestRefresh(){this._didSourceRefresh=!0,this._requestUpdate()}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=Qe(this._doUpdate()).finally((()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()})),this._updateRequested=!1))}_subscribe(e){const t=e.tileId;if(this._subscriptions.has(t))return;m("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.subscribe`);const s=new Sr(this._tileInfoView,t),r=new ya(s,e.version);this._subscriptions.set(t,r),this._source.onSubscribe(r),this._processor.onSubscribe(r)}_unsubscribe(e){const t=this._subscriptions.get(e);t&&(m("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.unsubscribe`),t.abort(),this._source.onUnsubscribe(t),this._processor.onUnsubscribe(t),this._subscriptions.delete(t.key.id))}async _doUpdate(){if(m("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateStart"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const i=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const a of i)this._doUpdateSubscriptions(a.inner),a.resolver.resolve()}if(this._updateHighlightRequests.length){const i=this._updateHighlightRequests,a=new Set,n=new Set;for(const o of i)for(const{objectId:c,highlightFlags:l}of o.inner.highlights)l?(a.add(c),n.delete(c)):(n.add(c),a.delete(c));this._source.prepareCacheUpdate(a,n)}const e=this._updateSchemaRequest;this._updateSchemaRequest=null;let t=!1;if(e!=null){const{schema:i,version:a}=e.inner;t=await this._doUpdateSchema(i,a)}this._processor.requiresInvalidation()&&(t=!0),this._didSourceRefresh&&(t=!0,this._didSourceRefresh=!1),t&&(this._processor.invalidate(),await this._connection.container.updateRenderState(this._processor.version));const s=this._updateOverridesRequest;if(this._updateOverridesRequest=null,s!=null){m("esri-2d-update-debug")&&console.debug("Pipeline.applyOverride",s.inner),s.inner.historicMoment!=null&&this._source.unsafeSetQueryHistoricMoment(s.inner.historicMoment);const i=await this._source.normalizeOverrides(s.inner);this._source.applyOverride(i),m("esri-2d-update-debug")&&console.debug("Pipeline.endOverride",s.inner)}if(await this._source.applyCacheUpdate(),this._updateHighlightRequests.length){const i=this._updateHighlightRequests;this._updateHighlightRequests=[];for(const a of i)this._processor.updateHighlight(a.inner),a.resolver.resolve()}const r=this._source.cleanup();this._processor.removeChunks(r);try{const i=this._source.takeOverrideUpdate();if(i!=null&&this._subscriptions.size){m("esri-2d-update-debug")&&console.debug("Pipeline.applyOverrideChangesStart"),await this._connection.container.lockForOverrides();try{await this._processor.applyOverrideUpdate(i)}catch(a){m("esri-2d-update-debug")&&console.debug("InternalError",a)}await this._connection.container.unlockForOverrides(),m("esri-2d-update-debug")&&console.debug("Pipeline.applyOverrideChangesEnd")}this._subscriptions.size&&(m("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksStart"),await this._processor.updateChunks(),m("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksEnd"))}catch(i){Ke(i)}s?.resolver.resolve(),e?.resolver.resolve(),e==null&&t&&await this._connection.container.trySwapRenderState(),this._updateRequested?(m("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=true]"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0})):(m("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=false, After flush]"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(e,t){m("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateStart`,{schema:e});const s={tileInfo:this._tileInfoView?.tileInfo},r=await this._source.update(e,t),i=Array.from(this._subscriptions.values()),a=this._processor.update(e,t,s,r,i);return m("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateEnd`),a}_doUpdateSubscriptions(e){m("esri-2d-update-debug")&&console.debug("Pipeline.updateSubscriptions",e);for(const t of e.subscribe)this._subscribe(t);for(const t of e.unsubscribe)this._unsubscribe(t)}}export{wo as default};
