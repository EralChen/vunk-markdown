import{as as y,ba as S,fZ as f,jl as g,jn as b,rr as k,iL as C,aj as i,ak as o,am as m,aq as L,bZ as H,bY as $,fL as _,fS as E,n as O,L as I}from"./chunk-XGpVqsM_.js";import{a as V}from"./chunk-CWHHaAZ_.js";import{r as j}from"./chunk-C57AUuqt.js";import"./chunk-DyqHK6XP.js";import"./chunk-Dix477Sg.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CrMA_peF.js";import"./chunk-7_UNpBu9.js";import"./chunk-BsvRrGli.js";import"./chunk-DtU9Beb_.js";import"./chunk-BfYfVSRu.js";import"./chunk-Cg5--1gk.js";let d=class extends y{constructor(e){super(e),this.availability=0,this._ids=new Set}destroy(){this._workerHandle.destroy(),this._workerHandle=null}initialize(){this._workerHandle=new R(this.schedule,{fetchAllEdgeLocations:(e,t)=>this._fetchAllEdgeLocations(e,t)})}async fetchCandidates(e,t){const r=e.coordinateHelper,{point:s}=e,a=x;this.renderCoordsHelper.toRenderCoords(s,r.spatialReference,a);const l=e.distance,c=typeof l=="number"?l:l.distance,u=await this._workerHandle.invoke({bounds:f(a[0],a[1],a[2],c),returnEdge:e.returnEdge,returnVertex:e.vertexMode!=="none"},t);return u.candidates.sort(((h,v)=>h.distance-v.distance)),u.candidates.map((h=>this._convertCandidate(r,h)))}async add(e,t){this._ids.add(e.id),await this._workerHandle.invokeMethod("add",e,t)}async remove(e,t){this._ids.delete(e.id),await this._workerHandle.invokeMethod("remove",e,t)}_convertCandidate(e,t){switch(t.type){case"edge":return new b({objectId:t.objectId,targetPoint:g(this._convertRenderCoordinate(e,t.target)),edgeStart:this._convertRenderCoordinate(e,t.start),edgeEnd:this._convertRenderCoordinate(e,t.end),isDraped:!1});case"vertex":return new j({objectId:t.objectId,targetPoint:g(this._convertRenderCoordinate(e,t.target)),isDraped:!1})}}_convertRenderCoordinate({spatialReference:e},t){const r=S();return this.renderCoordsHelper.fromRenderCoords(t,r,e),k(r)}async _fetchAllEdgeLocations(e,t){const r=[],s=[];for(const{id:a,uid:l}of e.components)this._ids.has(a)&&r.push((async()=>{const c=await this.fetchEdgeLocations(a,t.signal),u=c.locations.buffer;return s.push(u),{id:a,uid:l,objectIds:c.objectIds,locations:u,origin:c.origin,type:c.type}})());return{result:{components:(await Promise.all(r)).filter((({id:a})=>this._ids.has(a)))},transferList:s}}};i([o({constructOnly:!0})],d.prototype,"renderCoordsHelper",void 0),i([o({constructOnly:!0})],d.prototype,"fetchEdgeLocations",void 0),i([o({constructOnly:!0})],d.prototype,"schedule",void 0),i([o({readOnly:!0})],d.prototype,"availability",void 0),d=i([m("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorkerHandle")],d);let R=class extends C{constructor(t,r){super("SceneLayerSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:r})}};const x=S();let n=class extends y{get updating(){return this._updatingHandles.updating}constructor(e){super(e),this.availability=1,this._updatingHandles=new L,this._abortController=new AbortController}destroy(){this._tracker=H(this._tracker),this._abortController=$(this._abortController),this._updatingHandles.destroy()}initialize(){const{view:e}=this,t=e.resourceController;this._edgeWorker=new V(w(t)),this._workerHandle=new d({renderCoordsHelper:this.view.renderCoordsHelper,schedule:w(t),fetchEdgeLocations:async(r,s)=>{if(this._tracker==null)throw new Error("tracker-not-initialized");return this._tracker.fetchEdgeLocations(r,this._edgeWorker,s)}}),this._updatingHandles.addPromise(this._setupLayerView()),this.addHandles([_(this._workerHandle),_(this._edgeWorker)])}async fetchCandidates(e,t){return this._workerHandle.fetchCandidates(e,t)}refresh(){}async _setupLayerView(){if(this.destroyed)return;const e=this._abortController?.signal,t=await this.getLayerView();t==null||E(e)||(this._tracker=t.trackSnappingSources({add:(r,s)=>{this._updatingHandles.addPromise(this._workerHandle.add({id:r,bounds:s},e))},remove:r=>{this._updatingHandles.addPromise(this._workerHandle.remove({id:r},e))}}))}};function w(e){return t=>e.immediate.schedule(t)}i([o({constructOnly:!0})],n.prototype,"getLayerView",void 0),i([o({constructOnly:!0})],n.prototype,"view",void 0),i([o({readOnly:!0})],n.prototype,"updating",null),i([o({readOnly:!0})],n.prototype,"availability",void 0),n=i([m("esri.views.interactive.snapping.featureSources.I3SSnappingSource")],n);let p=class extends y{get updating(){return this._i3sSources.some((e=>e.updating))}constructor(e){super(e),this.availability=1,this._i3sSources=[]}destroy(){this._i3sSources.forEach((e=>e.destroy())),this._i3sSources.length=0}initialize(){const{view:e}=this,t=this.layerSource.layer;this._i3sSources=t.type==="building-scene"?this._getBuildingSceneI3SSources(e,t):[this._getSceneLayerI3SSource(e,t)]}async fetchCandidates(e,t){const r=await Promise.all(this._i3sSources.map((s=>s.fetchCandidates(e,t))));return O(t),r.flat()}refresh(){this._i3sSources.forEach((e=>e.refresh()))}_getBuildingSceneI3SSources(e,t){return t.allSublayers.toArray().map((r=>r.type==="building-component"?new n({getLayerView:async()=>(await e.whenLayerView(t)).whenSublayerView(r),view:e}):null)).filter(I)}_getSceneLayerI3SSource(e,t){return new n({getLayerView:async()=>{const r=await e.whenLayerView(t);return r.type==="scene-layer-graphics-3d"?void 0:r},view:e})}};i([o({constructOnly:!0})],p.prototype,"layerSource",void 0),i([o({constructOnly:!0})],p.prototype,"view",void 0),i([o({readOnly:!0})],p.prototype,"updating",null),i([o({readOnly:!0})],p.prototype,"availability",void 0),p=i([m("esri.views.interactive.snapping.featureSources.SceneLayerSnappingSource")],p);export{p as SceneLayerSnappingSource};
