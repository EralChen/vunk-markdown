import{aT as p,aU as y,au as b}from"./chunk-XGpVqsM_.js";function f(n,t){if(n.symbol!=null)return n.symbol;const l=t?.renderer;return l!=null&&l.type!=="dot-density"?l.getSymbol(n,t):null}function m(n,t){const l=f(n,t);if(l==null)return null;const a=t?.renderer,o=new p(a,l);if(a==null||!("visualVariables"in a)||!a.visualVariables)return o;const c=y(a,n,t)??[],e=["proportional","proportional","proportional"];for(const{variable:i,value:r}of c)if(r!=null||i.type==="size"&&i.useSymbolValue)switch(i.type){case"color":o.color=r?.toRgba();break;case"size":if(i.target==="outline")o.outlineSize=r;else{const u=i.axis,s=i.useSymbolValue?"symbol-value":r??"proportional";switch(u){case"width":e[0]=s;break;case"depth":e[1]=s;break;case"height":e[2]=s;break;case"width-and-depth":e[0]=e[1]=s;break;default:e[0]=e[1]=e[2]=s}}break;case"opacity":o.opacity=r;break;case"rotation":switch(i.axis){case"tilt":o.tilt=r;break;case"roll":o.roll=r;break;default:o.heading=r}}return e[0]==="proportional"&&e[1]==="proportional"&&e[2]==="proportional"||(o.size=e),o}async function d(n,t){return n.symbol!=null?n.symbol:t?.renderer?.getSymbolAsync(n,t)??null}async function v(n,t){const l=await d(n,t);if(!l)return null;const a=t?.renderer,o=new p(a,l);if(!a||!("visualVariables"in a)||!a.visualVariables)return o;const c=y(a,n,t)??[],e=["proportional","proportional","proportional"];for(const{variable:i,value:r}of c)if(i.type==="color")o.color=b.toUnitRGBA(r);else if(i.type==="size")if(i.target==="outline")o.outlineSize=r;else{const u=i.axis,s=i.useSymbolValue?"symbol-value":r;u==="width"?e[0]=s:u==="depth"?e[1]=s:u==="height"?e[2]=s:e[0]=e[1]=u==="width-and-depth"?s:e[2]=s}else i.type==="opacity"?o.opacity=r:i.type==="rotation"&&i.axis==="tilt"?o.tilt=r:i.type==="rotation"&&i.axis==="roll"?o.roll=r:i.type==="rotation"&&(o.heading=r);return(isFinite(e[0])||isFinite(e[1])||isFinite(e[2]))&&(o.size=e),o}function w(n,t=0){const l=n[t];return typeof l=="number"&&isFinite(l)?l:null}function g(n){for(let t=0;t<3;t++){const l=n[t];if(typeof l=="number")return isFinite(l)?l:0}return 0}export{w as a,v as n,m as r,g as s};
