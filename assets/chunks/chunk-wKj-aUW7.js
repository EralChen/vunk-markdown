import{k$ as L,bc as D,t_ as S,ex as T,U as E,iA as $,af as u,ag as h,ai as v,qC as U,t$ as B,cT as V,cC as H,u0 as P,u1 as A,u2 as x,qD as k,u3 as N,ib as Q,b8 as J,j as q,u4 as z,u5 as W,u6 as j,u7 as K,ao as Y,oH as X,bk as Z,nd as ee,ky as M,dm as re,s as I,az as te,dW as se,aG as G,aD as ie,d7 as ne,aK as ae}from"./chunk-CuaFhuP3.js";import{a0 as oe}from"./chunk-Dpk1TJd9.js";import{t as de}from"./chunk-BWAaXNf-.js";import{n as le}from"./chunk-BTcv4_aj.js";import{k as ue}from"./chunk-BOiSCgz2.js";import{s as ce}from"./chunk-Cc_KHkZu.js";import"./chunk-iOPJXyP1.js";import"./chunk-DGmg3LSc.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-DgjiXH9I.js";import"./chunk-PM-0Myzz.js";import"./chunk-BFsTrzlt.js";import"./chunk-BC9hm6Bv.js";import"./chunk-DonaGx73.js";import"./chunk-CcEbRgUF.js";import"./chunk-Bp0h8fOB.js";import"./chunk-CUw01iZy.js";import"./chunk-0U0Uh5jz.js";import"./chunk-CcGqYjy7.js";import"./chunk-CgEmLg0e.js";import"./chunk-Ba47yop0.js";import"./chunk-Dc8--CBJ.js";import"./chunk-Cu9wAREs.js";import"./chunk-Cvjt5nOV.js";import"./chunk-C7WHcUmR.js";import"./chunk-DeirovzM.js";import"./chunk-DGkpYqI6.js";import"./chunk-BqZ3Zt75.js";import"./chunk-BkThvvXm.js";import"./chunk-BLFAeZA-.js";import"./chunk-aVDAQHoW.js";import"./chunk-CK-Bcvbn.js";import"./chunk-BgGY4ULx.js";import"./chunk-BgFQAcl_.js";import"./chunk-iL5WjyEH.js";import"./chunk-B4mRqufT.js";let m=class extends L{constructor(e){super(e),this.schedule=null,this._workerUpdating=!0}get updating(){return this._workerUpdating}initialize(){const{layer:e,layerView:r,viewSpatialReference:s,renderSpatialReference:i}=this,a=e.elevationInfo;this._elevationContext=D.fromElevationInfo(a),this._workerHandle=new he(this.schedule,{createTexture:async({data:n,parameters:o})=>({result:await this.renderer.createTexture(n,o),transferList:[]}),releaseTexture:async({uid:n})=>(await this.renderer.releaseTexture(n),g),createMaterial:async({materialJSON:n})=>(await this.renderer.createMaterial(n),g),destroyMaterial:async({materialId:n})=>(await this.renderer.destroyMaterial(n),g),createDirectRenderer:async({materialId:n})=>(await this.renderer.createDirectRenderer(n),g),destroyDirectRenderer:async({materialId:n})=>(await this.renderer.destroyDirectRenderer(n),g),createLoDRenderer:async({rendererId:n,lodRenderGeometry:o},d)=>(await this.renderer.createLoDRenderer(n,o,d?.signal??void 0),g),destroyLoDRenderer:async({rendererId:n},o)=>(await this.renderer.destroyLoDRenderer(n,o?.signal??void 0),g),dispatchRenderCommands:async({commands:n})=>(await this.renderer.executeRenderCommands(n),g),applyElevationAlignment:async({mapPoints:n})=>{const{viewSpatialReference:o,elevationProvider:d,renderCoordsHelper:c}=this,p=le(n,o,this._elevationContext,d,c);return{result:p,transferList:[p.buffer]}}}),this.addResolvingPromise((async()=>{await e.load();const n={url:e.parsedUrl?.path??"",baseQuery:e.createQuery().toJSON(),objectIdField:e.objectIdField,capabilities:e.capabilities,fieldIndex:e.fieldsIndex.toJSON(),timeInfo:e.timeInfo?.toJSON(),elevationInfo:a?.toJSON(),fullExtent:e.fullExtent?.toJSON(),renderer:e.renderer?.toJSON()},o={fullOpacity:r.fullOpacity};await this._workerHandle.invokeMethod("setup",{viewSpatialReference:s.toJSON(),renderSpatialReference:i.toJSON(),viewingMode:this.viewingMode,layerInfo:n,layerViewInfo:o})})()),this.addHandles(this._workerHandle.on("notify-updating",(({updating:n})=>{this._workerUpdating=n})))}onTileTreeChange(e){this._workerHandle.invokeMethod("onTileTreeChange",{tiles:e.items.map(pe)})}onElevationChange(e){this._workerHandle.invokeMethod("onElevationChange",{context:e.context,spatialReference:e.spatialReference?.toJSON(),extent:S(e.extent)})}onLayerViewOpacityChange(e){this._workerHandle.invokeMethod("onLayerViewOpacityChange",e)}onRendererChange(e){const r=e?.toJSON();this._workerHandle.invokeMethod("onRendererChange",r)}async executeQuery(e,r){const s=await this._workerHandle.invokeMethod("executeQuery",e?.toJSON(),r),i=T.fromJSON(s);return this._ensureLayerOnFeatures(i),i}async executeQueryForIds(e,r){return await this._workerHandle.invokeMethod("executeQueryForIds",e?.toJSON(),r)}async executeQueryForCount(e,r){return await this._workerHandle.invokeMethod("executeQueryForCount",e?.toJSON(),r)}async executeQueryForExtent(e,r){const{count:s,extent:i}=await this._workerHandle.invokeMethod("executeQueryForExtent",e?.toJSON(),r);return{count:s,extent:E.fromJSON(i)}}async executeQueryForLatestObservations(e,r){const s=await this._workerHandle.invokeMethod("executeQueryForLatestObservations",e?.toJSON(),r),i=T.fromJSON(s);return this._ensureLayerOnFeatures(i),i}_ensureLayerOnFeatures(e){const{layer:r}=this;for(const s of e.features)s.layer=r,s.sourceLayer=r}};u([h()],m.prototype,"updating",null),u([h({constructOnly:!0})],m.prototype,"schedule",void 0),u([h({constructOnly:!0})],m.prototype,"layer",void 0),u([h({constructOnly:!0})],m.prototype,"layerView",void 0),u([h({constructOnly:!0})],m.prototype,"viewSpatialReference",void 0),u([h({constructOnly:!0})],m.prototype,"renderSpatialReference",void 0),u([h({constructOnly:!0})],m.prototype,"viewingMode",void 0),u([h({constructOnly:!0})],m.prototype,"renderer",void 0),u([h({constructOnly:!0})],m.prototype,"elevationProvider",void 0),u([h({constructOnly:!0})],m.prototype,"renderCoordsHelper",void 0),u([h()],m.prototype,"_workerUpdating",void 0),m=u([v("esri.views.3d.layers.graphics.pipeline.Feature3DPipelineWorkerHandle")],m);let he=class extends ${constructor(e,r){super("Feature3DPipelineWorker","setup",{},e,{strategy:"dedicated",client:r})}};function pe({id:t,lij:e,extent:r}){return{id:t,lij:e,extent:r}}const g={result:void 0};let F=class extends U{constructor(e){super(e),this._glMaterials=null,this._produces=new Map,this._renderGeometries=new Map,this._vaoCache=null,this._drawParameters=new B,this._bufferWriter=null,this.slicePlaneEnabled=!1,this.isGround=!1,this.type=e.material instanceof H?V.HUD:V.OBJECT,this.layerViewUid=e.layerViewUid}get produces(){return this._produces}get numFeatures(){let r=0;return this._renderGeometries.forEach((s=>r+=s.numElements/6)),r}get usedMemory(){let e=0;return this._renderGeometries.forEach((r=>{e+=r.vao.usedMemory})),e}intersect(e,r,s,i){const{material:a,_bufferWriter:n,layerViewUid:o,_renderGeometries:d}=this;n.intersect!=null&&d.forEach((({buffer:c,localOrigin:p,items:l})=>n.intersect(c.data,a.parameters,p,e,s,i,((f,w,y,R)=>{if(!l.visibilities[y])return;const b=l.objectIds[y];e.handleObjectIntersection({object:{id:A,graphicUid:b,layerViewUid:o,boundingVolumeWorldSpace:new P,geometries:[{material:a}]},geometryId:0,primitiveIndex:y},f,w,null,R)}))))}initialize(){this._bufferWriter=this.material.createBufferWriter(),this.material.produces.forEach(((e,r)=>{this._produces.set(r,(s=>s!==x.Highlight&&s!==x.ShadowHighlight&&e(s)))}))}destroy(){this._glMaterials.dispose();const e=this._renderGeometries.keys();for(const r of e)this.removeRenderGeometryBuffer(r)}acquireTechniques(e){const r=this.material;if(!r.shouldRender(e))return null;const{output:s,bind:i}=e;return!r.produces.get(i.slot)?.(s)||s===x.Highlight||s===x.ShadowHighlight?null:this._glMaterials.load(e.rctx,i.slot,s)?.beginSlot(i)}render(e,r){const s=this._renderGeometries;if(s.size===0)return;const{bind:i}=e,a=i.slot===k.OCCLUDER_MATERIAL||i.slot===k.TRANSPARENT_OCCLUDER_MATERIAL?i.slot:null,n=e.rctx;n.runAppleAmdDriverHelper(),n.bindTechnique(r,i,this.material.parameters);const o=r.program;for(const[d,c]of s){const{vao:p,localOrigin:l,drawCalls:f}=c;this._drawParameters.origin=l,o.bindDraw(i,this.material.parameters,this._drawParameters),r.ensureAttributeLocations(p),n.bindVAO(p),n.setPipelineState(r.getPipeline(!1,a));for(const w of f)n.drawArrays(r.primitiveType,w.start,w.count)}}initializeRenderContext(e){this._glMaterials=new N(this.material,e.materials),this._vaoCache=e.renderContext.rctx.getVaoCache(this.material.vertexAttributeLocations,Q(this._bufferWriter.vertexBufferLayout))}uninitializeRenderContext(){}addRenderGeometryBuffer(e,r,s,i){this.removeRenderGeometryBuffer(e);const{data:a,elementCount:n}=r,o=this._vaoCache.newVao(a.byteLength);o.vertexBuffers.get("geometry").setSubData(new Uint8Array(a),0,0,a.byteLength);const d={localOrigin:i,numElements:n,buffer:r,items:s,vao:o,drawCalls:this._produceDrawCalls(s)};this._renderGeometries.set(e,d)}updateRenderGeometryBuffer(e,r,s,i){const{data:a,elementCount:n}=r,o=this._renderGeometries.get(e);if(o==null)return;this._vaoCache.deleteVao(o.vao);const d=this._vaoCache.newVao(a.byteLength);d.vertexBuffers.get("geometry").setSubData(new Uint8Array(a),0,0,a.byteLength),o.localOrigin=i,o.numElements=n,o.buffer=r,o.items=s,o.vao=d,o.drawCalls=this._produceDrawCalls(s)}removeRenderGeometryBuffer(e){const r=this._renderGeometries.get(e);r!=null&&(this._vaoCache.deleteVao(r.vao),this._renderGeometries.delete(e))}updateVisibility(e,r){const s=this._renderGeometries.get(e);if(s==null)return;const{items:i}=s;if(i.visibilities.length!==r.length)throw new Error("Unexpected mismatch between old and new visibility flag buffer length.");i.visibilities=r,s.drawCalls=this._produceDrawCalls(i)}hasHighlight(){return!1}_produceDrawCalls(e){const{visibilities:r,ranges:s}=e,i=[];if(me(s)){if(s.numItems===0)return[];const a=s.numVertices;let n=null;for(let o=0;o<s.numItems;++o)r[o]?n==null?(n={start:o*a,count:a},i.push(n)):n.count+=a:n=null}else{const a=s.counts,n=a.length;if(n===0)return[];let o=null,d=0;for(let c=0;c<n;++c){const p=r[c],l=a[c];p?o==null?(o={start:d,count:l},i.push(o)):o.count+=l:o=null,d+=l}}return i}};function me(t){return"numItems"in t}u([h({constructOnly:!0})],F.prototype,"material",void 0),F=u([v("esri.views.3d.layers.graphics.pipeline.rendering.DirectRenderer")],F);let O=class{constructor(t){this._optionalFields=new Array,this._instanceGroupToIndices=new Map,this._instanceIndexToFeatureId=new Map,this._disposeResourceHandles=new Array,this._lodRendererResources=null,this._numFeatures=0,this.layerViewUid=t.layerViewUid,this.view=t.view,this.sharedResources=this.view.sharedSymbolResources,this.scheduler=this.view.resourceController.scheduler}get numFeatures(){return this._numFeatures}get usedMemory(){return(this._lodRendererResources?.lodRenderer?.symbol?.computeUsedMemory()??0)+16*this._instanceIndexToFeatureId.size}destroy(){this._disposeResourceHandles.forEach((t=>t()))}async doLoad(t,e,r){oe("enable-feature:objectAndLayerId-rendering")&&this._optionalFields.push(J.OLIDCOLOR);const s=ye((d=>e(d)),t),i=this.view.stage,a=s.getMaterials(),n=s.getTextures();i.addTextures(n),this._addDisposeResource((()=>{n.forEach((d=>d.unload())),i.removeTextures(n)})),await Promise.all(n.map((d=>this.view.stage.schedule((()=>d.load(i.renderView.renderingContext)),r)))),q(r);const o=await this._createLodRenderer(s,r);this._lodRendererResources={lodRenderer:o,materials:a,textures:n}}addInstances(t,e){const r=this._lodRendererResources;if(r==null)return;const s=r.lodRenderer;if(s==null)return;const{featureIds:i,localTransforms:a,globalTransforms:n,visibility:o}=e,d=new Array,c=s.instanceData,p=i.length,l=this._instanceIndexToFeatureId;for(let f=0;f<p;++f){const w=i[f],y=c.addInstance(),R=c.view,b=16*f;R.localTransform.copyFromTypedBuffer(y,a,b),R.globalTransform.copyFromTypedBuffer(y,n,b),c.updateModelTransform(y),c.setVisible(y,!!o[f]),d.push(y),l.set(y,w)}this._instanceGroupToIndices.set(t,d),this._numFeatures+=p}removeInstances(t){const e=this._instanceGroupToIndices.get(t);if(e==null)return;const r=this._lodRendererResources;if(r==null)return;const s=r.lodRenderer.instanceData,i=this._instanceIndexToFeatureId;for(const a of e)s.removeInstance(a),i.delete(a);this._numFeatures-=e.length,this._instanceGroupToIndices.delete(t)}updateVisibility(t,e){const r=this._instanceGroupToIndices.get(t);if(r==null)return;const s=this._lodRendererResources;if(s==null)return;const i=r.length;if(i!==e.length)throw new Error("Unexpected mismatch instance count and visibility flag buffer length.");const a=s.lodRenderer.instanceData;for(let n=0;n<i;++n)a.setVisible(r[n],!!e[n])}updateGlobalTransforms(t,e){const r=this._instanceGroupToIndices.get(t);if(r==null)return;const s=this._lodRendererResources;if(s==null)return;const i=r.length;if(16*i!==e.length)throw new Error("Unexpected mismatch instance count and visibility flag buffer length.");const a=s.lodRenderer.instanceData,n=a.view;for(let o=0;o<i;++o){const d=r[o],c=16*o;n.globalTransform.copyFromTypedBuffer(d,e,c),a.updateModelTransform(d)}}_addDisposeResource(t){this._disposeResourceHandles.push(t)}async _createLodRenderer(t,e){const r=this.view.stage,s={layerViewUid:this.layerViewUid,graphicUid:a=>this._instanceIndexToFeatureId.get(a)??-1,notifyGraphicGeometryChanged:a=>1,notifyGraphicVisibilityChanged:a=>1},i=new ue({symbol:t,optionalFields:this._optionalFields,metadata:s,shaderTransformation:null},this.scheduler);return i.slicePlaneEnabled=!1,this._addDisposeResource((()=>{r.removeRenderPlugin(i),i.destroy()})),await r.addRenderPlugin(i,e),i}};function ye(t,e){const r=e.levels.map((s=>{const i=s.components.map((a=>{const n=t(a.materialId);if(!fe(n))throw new Error("LodRenderer only supports DefaultMaterial");const o=new z(n,a.renderGeometryBuffer.data,a.renderGeometryBuffer.elementCount,a.boundingInfo);return new W(o)}));return new j(i,s.minScreenSpaceRadius)}));return new K(r)}function fe(t){return t!=null&&"materialType"in t&&t.materialType==="default"}O=u([v("esri.views.3d.layers.graphics.pipeline.rendering.LodRenderer")],O);let C=class extends Y{constructor(t){super(),this.view=null,this.layerViewUid=null,this._stage=null,this._materials=new Map,this._textures=new Map,this._directRenderers=new Map,this._lodRenderers=new Map,this.totalFeatures=0,this.view=t.view,this.layerViewUid=t.layerViewUid}initialize(){this._stage=this.view.stage}destroy(){this.removeAllHandles(),this._lodRenderers.forEach((t=>t.destroy()))}async createTexture(t,e){const{_textures:r,_stage:s}=this,i=new X(t,e);return r.set(i.id,i),s&&(i.load(s.renderView.renderingContext),s.addTexture(i)),i.id}async releaseTexture(t){const{_textures:e,_stage:r}=this,s=e.get(t);s&&(r&&(s.unload(),r.removeTexture(s)),e.delete(t))}_destroyTexture(t){const{_textures:e,_stage:r}=this,s=e.get(t);s&&(r&&(s.unload(),r.removeTexture(s)),e.delete(t))}async createMaterial(t){const{view:e}=this,r=e.state.viewingMode===Z.Global;let s=null;switch(t.type){case"default":{const i=t.parameters,a=new ee(i,{spherical:r});a.setParameters({cullFace:a.transparent?M.None:M.Back}),s=a;break}case"hud":{const i=t.parameters;s=new H(i,r)}}this._materials.set(t.materialId,s)}async destroyMaterial(t){this._materials.delete(t)}async updateMaterial(t){}async createDirectRenderer(t){if(this._directRenderers.has(t))return;const e=this._materials.get(t);if(e==null)throw new Error(`material not found ${t}`);const{view:r}=this,s=new F({material:e,layerViewUid:this.layerViewUid});this._directRenderers.set(t,s),r.stage.addRenderPlugin(s),r.stage.renderView.renderer.updateHasFlags()}async destroyDirectRenderer(t){const e=this._directRenderers.get(t);if(e==null)return;const r=this.view;r.stage.removeRenderPlugin(e),this._directRenderers.delete(t),r.stage.renderView.renderer.updateHasFlags()}async createLoDRenderer(t,e,r){const s=new O({view:this.view,layerViewUid:this.layerViewUid}),i=a=>this._materials.get(a);if(await s.doLoad(e,i,r),r?.aborted)throw s.destroy(),re();this._lodRenderers.set(t,s)}async destroyLoDRenderer(t,e){const r=this._lodRenderers.get(t);r!=null&&(r.destroy(),this._lodRenderers.delete(t))}_destroyLodRenderer({rendererId:t}){const e=this._lodRenderers.get(t);e!=null&&(e.destroy(),this._lodRenderers.delete(t))}async executeRenderCommands(t){for(const e of t)switch(e.id){case"destroy-texture":this._destroyTexture(e.textureId);break;case"update-material":this._updateMaterial(e);break;case"destroy-material":this._destroyMaterial(e);break;case"add-direct-renderer-geometry-buffer":this._addDirectRendererGeometryBuffer(e);break;case"update-direct-renderer-geometry-buffer":this._updateDirectRendererGeometryBuffer(e);break;case"remove-direct-renderer-geometry-buffer":this._removeDirectRendererGeometryBuffer(e);break;case"destroy-lod-renderer":this._destroyLodRenderer(e);break;case"add-lod-instances":this._addLodInstances(e);break;case"remove-lod-instances":this._removeLodInstances(e);break;case"update-lod-instance-data":this._updateLodInstanceData(e);break;case"update-visibility":this._updateVisibility(e)}t.length>0&&this._updateFeatureCount()}_updateFeatureCount(){let t=0;for(const e of this._directRenderers.values())t+=e.numFeatures;for(const e of this._lodRenderers.values())t+=e.numFeatures;this._set("totalFeatures",t)}get usedMemory(){let t=0;for(const e of this._directRenderers.values())t+=e.usedMemory;for(const e of this._lodRenderers.values())t+=e.usedMemory;return t}_updateMaterial({materialId:t,parameters:e}){const r=this._materials.get(t);r!=null?r.setParameters(e):console.error("material not found")}_destroyMaterial({materialId:t}){this._materials.get(t)!=null?this._materials.delete(t):console.error("material not found")}_addDirectRendererGeometryBuffer({groupId:t,rendererId:e,renderGeometryBuffer:r,renderGeometryBufferItems:s,localOrigin:i}){const a=this._directRenderers.get(e);a!=null?(a.addRenderGeometryBuffer(t,r,s,i),this.view.stage.renderView.requestRender()):console.error("no renderer assigned to provided material")}_updateDirectRendererGeometryBuffer({groupId:t,rendererId:e,renderGeometryBuffer:r,renderGeometryBufferItems:s,localOrigin:i}){const a=this._directRenderers.get(e);a!=null?(a.updateRenderGeometryBuffer(t,r,s,i),this.view.stage.renderView.requestRender()):console.error("no renderer assigned to provided material")}_removeDirectRendererGeometryBuffer({groupId:t,rendererId:e}){const r=this._directRenderers.get(e);r!=null?(r.removeRenderGeometryBuffer(t),this.view.stage.renderView.requestRender()):console.error("no renderer assigned to provided material")}_addLodInstances({rendererId:t,groupId:e,data:r}){const s=this._lodRenderers.get(t);if(s==null)throw new Error("no lod renderer assigned to provided lod renderer Id");s.addInstances(e,r),this.view.stage.renderView.requestRender()}_removeLodInstances({rendererId:t,groupId:e}){const r=this._lodRenderers.get(t);if(r==null)throw new Error("no lod renderer assigned to provided lod renderer Id");r.removeInstances(e),this.view.stage.renderView.requestRender()}_updateLodInstanceData({rendererId:t,groupId:e,globalTransforms:r}){const s=this._lodRenderers.get(t);if(s==null)throw new Error("No renderer found with the provided id");r!=null&&s.updateGlobalTransforms(e,r),this.view.stage.renderView.requestRender()}_updateVisibility({rendererId:t,groupId:e,visibility:r}){const s=this._directRenderers.get(t)??this._lodRenderers.get(t);if(s==null)throw new Error("No renderer found with the provided id");s.updateVisibility(e,r),this.view.stage.renderView.requestRender()}};u([h({readOnly:!0})],C.prototype,"totalFeatures",void 0),C=u([v("esri.views.3d.layers.graphics.pipeline.rendering.FeaturePipelineRenderManager")],C);let _=class extends L{constructor(t){super(t),this._renderer=null,this.graphicsQuery={queryForSymbologySnapping:(e,r)=>{throw new I("featurelayer:unsupported-symbology-snapping","Symbology snapping not supported")},executeQuery:async(e,r)=>await this._workerHandle.executeQuery(e,r),executeQueryForIds:async(e,r)=>await this._workerHandle.executeQueryForIds(e,r),executeQueryForCount:async(e,r)=>await this._workerHandle.executeQueryForCount(e,r),executeQueryForExtent:async(e,r)=>await this._workerHandle.executeQueryForExtent(e,r),executeQueryForLatestObservations:async(e,r)=>await this._workerHandle.executeQueryForLatestObservations(e,r)},this.maximumNumberOfFeatures=1e3}initialize(){if(this.layerView.layer.geometryType!=="point")throw new I("featurelayer:unsupported-geometry-type",`${this.layerView.layer.geometryType} is not supported`);this.addResolvingPromise(this.setup())}destroy(){this.removeAllHandles(),this._workerHandle.destroy(),te(this._renderer)}async setup(){const t=this.layerView,{layer:e,view:r,uid:s}=t,{spatialReference:i,renderSpatialReference:a,resourceController:n,renderCoordsHelper:o,elevationProvider:d}=r,c=r.state.viewingMode;if(this._renderer=new C({view:r,layerViewUid:s}),e.type!=="feature")throw new I("featurelayer:unsupported-layertype","Only FeatureLayer is supported");const p=new m({schedule:l=>n.immediate.schedule(l),layer:e,layerView:t,viewSpatialReference:i,renderSpatialReference:a,viewingMode:c,renderer:this._renderer,elevationProvider:d,renderCoordsHelper:o});this._workerHandle=await p.when(),this.addHandles([this.layerView.view.featureTiles.addClient(),se((()=>this.layerView.view.featureTiles.tiles),"change",(l=>{this._workerHandle.onTileTreeChange(l.target)}),{onListenerAdd:l=>this._workerHandle.onTileTreeChange(l),onListenerRemove:l=>this._workerHandle.onTileTreeChange(l)}),r.elevationProvider.on("elevation-change",(l=>this._workerHandle.onElevationChange(l))),G((()=>this.layerView.fullOpacity),(l=>this._workerHandle.onLayerViewOpacityChange(l)),{sync:!1}),G((()=>e.renderer),(l=>this._workerHandle.onRendererChange(l)),{sync:!1})])}get legendEnabled(){return!1}get hasAllFeatures(){return!1}get hasAllFeaturesInView(){return!1}get hasFullGeometries(){return!1}get symbologySnappingSupported(){return!1}get scaleVisibilitySuspended(){return!1}get suspendInfo(){return{}}get updating(){return this._workerHandle.updating}get dataUpdating(){return!1}get updatePolicy(){return ie.ASYNC}get maximumNumberOfFeaturesExceeded(){return!1}get updatingProgressValue(){return 1}get usedMemory(){return this._renderer?.usedMemory??0}get unloadedMemory(){return 0}get ignoresMemoryFactor(){return!0}get totalFeatures(){return this._renderer?.totalFeatures??0}get performanceInfo(){const t=this.totalFeatures;return new de(new ne(this.usedMemory,t,t,this.maximumNumberOfFeatures,0,null),t,t,this.maximumNumberOfFeaturesExceeded,"tiles","n/a")}get suspendResumeExtentMode(){return"computed"}forEachGraphic(t){}findGraphic(t){return null}highlight(t){return ce}maskOccludee(t){return ae()}async whenGraphicBounds(t,e){return null}computeAttachmentOrigin(t,e){return null}elevationAlignPointsInFeatures(t,e){throw new I("featurelayer:unsupported-elevation-alignment","Elevation alignment not supported")}async doRefresh(t){}setVisibility(t,e){}getMissingAttributesForFeature(t){return null}getHydratedGeometry(t){return null}};u([h()],_.prototype,"layerView",void 0),u([h()],_.prototype,"updating",null),u([h()],_.prototype,"totalFeatures",null),_=u([v("esri.views.3d.layers.graphics.pipeline.Feature3DPipeline")],_);export{_ as Feature3DPipeline};
