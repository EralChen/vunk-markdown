import{c0 as r,bR as t,gS as o}from"./chunk-BLrLWCUc.js";import"./chunk-CWUYlh1e.js";import"./chunk-BDqMgIU1.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */const k=r().vec3f(t.POSITION).u16(t.COMPONENTINDEX).freeze(),i=r().vec2u8(t.SIDENESS).freeze(),q=o(i),G=r().vec3f(t.POSITION0).vec3f(t.POSITION1).vec2i16(t.NORMALCOMPRESSED).u16(t.COMPONENTINDEX).u8(t.VARIANTOFFSET,{glNormalized:!0}).u8(t.VARIANTSTROKE).u8(t.VARIANTEXTENSION,{glNormalized:!0}).freeze(),J=r().vec3f(t.POSITION0).vec3f(t.POSITION1).vec2i16(t.NORMALCOMPRESSED).vec2i16(t.NORMAL2COMPRESSED).u16(t.COMPONENTINDEX).u8(t.VARIANTOFFSET,{glNormalized:!0}).u8(t.VARIANTSTROKE).u8(t.VARIANTEXTENSION,{glNormalized:!0}).freeze(),Q=new Map([[t.POSITION0,0],[t.POSITION1,1],[t.COMPONENTINDEX,2],[t.VARIANTOFFSET,3],[t.VARIANTSTROKE,4],[t.VARIANTEXTENSION,5],[t.NORMALCOMPRESSED,6],[t.NORMAL2COMPRESSED,7],[t.SIDENESS,8]]);export{k as EdgeInputBufferLayout,G as RegularEdgeInstancesLayout,J as SilhouetteEdgeInstancesLayout,i as VertexLayout,q as glVertexLayout,Q as vertexAttributeLocations};
