import{gd as s,d6 as p,an as o,t as m,d8 as l,af as r,ag as i,fC as n,ai as d}from"./chunk-CuaFhuP3.js";import{a0 as a}from"./chunk-Dpk1TJd9.js";import{P as u}from"./chunk-DDU7mEvK.js";import{l as h}from"./chunk-CK-Bcvbn.js";import"./chunk-iOPJXyP1.js";import"./chunk-DGmg3LSc.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CsUEWEu0.js";import"./chunk-Ba8yiHV-.js";import"./chunk-BlUfMS7G.js";import"./chunk-CKL2xzr-.js";import"./chunk-D35cfmA5.js";import"./chunk-DgVcmjbo.js";import"./chunk-DxiEB-nk.js";import"./chunk-CkjC4r24.js";import"./chunk-CUw01iZy.js";import"./chunk-0U0Uh5jz.js";import"./chunk-CcGqYjy7.js";import"./chunk-CgEmLg0e.js";import"./chunk-CZF6smhU.js";import"./chunk-Cb0TCUgX.js";import"./chunk-DposLphl.js";import"./chunk-Dc8--CBJ.js";import"./chunk-Cc_KHkZu.js";const c=.2;let t=class extends u(h(l)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._supportsLabeling=!1,this._applySSAO=!a("disable-feature:im-ssao"),this._shadeNormals=!!a("enable-feature:im-shading"),this.drapeTargetType=s.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??0}get lodFactor(){return this.view?.qualitySettings?.sceneService?.integratedMesh?.lodFactor??1}get progressiveLoadFactor(){return this.lodFactor>=1?c:1}get visibleAtCurrentScale(){return p(this.i3slayer.effectiveScaleRange,this.view.scale)}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add((()=>this.layer.modifications),(()=>this._loadModifications()),o),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){return new m({layer:this.layer,sourceLayer:this.layer})}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const e=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange((()=>e),(()=>this._modifications=e.toArray()),o),"modifications")}};r([i()],t.prototype,"layer",void 0),r([i()],t.prototype,"i3slayer",null),r([i(n)],t.prototype,"updatingProgress",void 0),r([i()],t.prototype,"updatingProgressValue",null),r([i()],t.prototype,"lodFactor",null),r([i({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),r([i({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),t=r([d("esri.views.3d.layers.IntegratedMeshLayerView3D")],t);const bt=t;export{bt as default};
