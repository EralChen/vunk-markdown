import{aK as t,ar as o,a2 as p,eZ as m,aj as a,am as s}from"./chunk-XGpVqsM_.js";import{d as l}from"./chunk-Z3OoEoPW.js";import"./chunk-DyqHK6XP.js";import"./chunk-Dix477Sg.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CrMA_peF.js";let e=class extends l{constructor(r){super(r),this.enablePolygons=!1}initialize(){t((()=>this.enabled),(r=>this.view.basemapTerrain.renderPatchBorders=r),o)}getTiles(){const r=this.view.basemapTerrain.spatialReference!=null?this.view.basemapTerrain.spatialReference:null;return this.view.basemapTerrain.test.getRenderedTiles().map((i=>({...i,lij:i.lij,level:i.level,geometry:p.fromExtent(m(i.extent,r))})))}};e=a([s("esri.views.3d.layers.support.TerrainTileTree3DDebugger")],e);export{e as TerrainTileTree3DDebugger};
