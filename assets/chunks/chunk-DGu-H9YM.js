import{aq as l,eu as p,ay as d,ev as r,ar as e,as as s,b9 as u,df as a,iY as f,au as v}from"./chunk-BLrLWCUc.js";import{c as h,b as y}from"./chunk-mEXGjU1m.js";let i=class extends l.JSONSupportMixin(p.ClonableMixin(d)){constructor(n){super(n),this.position=null,this.elevationInfo=null,this.feature=null}equals(n){return r(this.position,n.position)&&r(this.elevationInfo,n.elevationInfo)&&h(this.feature,n.feature)}};e([s({type:u,json:{write:{isRequired:!0}}})],i.prototype,"position",void 0),e([s({type:f}),a()],i.prototype,"elevationInfo",void 0),e([s(y)],i.prototype,"feature",void 0),i=e([v("esri.analysis.LineOfSightAnalysisObserver")],i);const x=i;let o=class extends l.JSONSupportMixin(p){constructor(t){super(t),this.position=null,this.elevationInfo=null,this.feature=null}equals(t){return r(this.position,t.position)&&r(this.elevationInfo,t.elevationInfo)&&h(this.feature,t.feature)}};e([s({type:u,json:{write:!0,origins:{"web-scene":{write:{isRequired:!0}}}}}),a()],o.prototype,"position",void 0),e([s({type:f}),a()],o.prototype,"elevationInfo",void 0),e([s(y)],o.prototype,"feature",void 0),o=e([v("esri.analysis.LineOfSightAnalysisTarget")],o);const b=o;export{b as f,x as u};
