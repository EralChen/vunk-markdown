import{M as a,v as n,_ as s}from"./chunk-BamqLJYX.js";import{fromGeometry as f,toGeometry as t,fromGeometries as c,fromGeometryToGXGeometry as u}from"./chunk-cX4u2v3D.js";import"./chunk-B92kdZ15.js";import"./chunk-BALWqwPe.js";import"./chunk-BprwJtTT.js";import"./chunk-DYmUVOBN.js";import"./chunk-DODhI9iV.js";import"./chunk-DdHotv1K.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-SqlbPPT2.js";function io(o){const r=f(o);return t(a(r.getGeometry()),r.getSpatialReference())}function po(o,r={}){const{merge:m=!1}=r,[i,p]=c(o);return n(i,m).map(e=>t(e,p))}function eo(o){return s(u(o))}export{io as execute,po as executeMany,eo as isConvex};
