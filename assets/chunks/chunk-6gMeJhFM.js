import{Y as n,s as u,cz as c,cA as l,cB as d,cC as g}from"./chunk-Bj5pIyxE.js";import"./chunk-C39j8-it.js";import"./chunk-DJw_0V8B.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-SqlbPPT2.js";function or(o,t,r,i,e){if(o==null)return null;const m=o.references("geometry")&&e?y(t,i,e):t,p=o.repurposeFeature(m);try{return o.evaluate({...r,$feature:p},o.services)}catch(s){return n.getLogger("esri.views.2d.support.arcadeOnDemand").warn("Feature arcade evaluation failed:",s),null}}const a=new Map;function y(o,t,r){const{transform:i,hasZ:e,hasM:m}=r;a.has(t)||a.set(t,f(t));const p=a.get(t)(o.geometry,i,e,m);return{...o,geometry:p}}function f(o){const t={};switch(o){case"esriGeometryPoint":return(r,i,e,m)=>g(i,t,r,e,m);case"esriGeometryPolygon":return(r,i,e,m)=>d(i,t,r,e,m);case"esriGeometryPolyline":return(r,i,e,m)=>l(i,t,r,e,m);case"esriGeometryMultipoint":return(r,i,e,m)=>c(i,t,r,e,m);default:return n.getLogger("esri.views.2d.support.arcadeOnDemand").error(new u("mapview-arcade",`Unable to handle geometryType: ${o}`)),r=>r}}export{or as default};
