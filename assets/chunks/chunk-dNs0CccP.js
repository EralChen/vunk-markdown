import{bD as p,id as c,eF as u}from"./chunk-Dx0VeHfy.js";import{createMesh as l}from"./chunk-C5RnXA9V.js";import"./chunk-DHAEDrTs.js";import"./chunk-Dmal_a4R.js";import"./chunk-DcC_5AJx.js";import"./chunk-Cj6q1fp6.js";import"./chunk-Bic-q7Hf.js";import"./chunk-DNzQGFiD.js";import"./chunk-Q4OKnWdc.js";import"./chunk-Co6Tr_ff.js";import"./chunk-AsLM4nFp.js";import"./chunk-BtXO5WR6.js";function $(a,o){const n=new Array,m=p.fromJSON(o.spatialReference);for(const e of o.features){const t=e.metadata,r=c(e.geometry);if(!t||!r){n.push(null);continue}r.spatialReference=m;const s=r.extent,f=l({layerView:a,nodeIndex:t.meta.node.index,featureIndex:t.index,extent:s,spatialReference:m});n.push(f),e.geometry=null}const i=u.fromJSON(o);for(let e=0;e<i.features.length;e++){const t=i.features[e],r=n[e];t.geometry=r}return i}export{$ as processQueryGeometries};
