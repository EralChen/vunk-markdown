import{jD as g,jE as w,jF as u}from"./chunk-Dx0VeHfy.js";import{d as R,i as p,f as k,J as C,K as P,F as S,b}from"./chunk-DpJVogQA.js";import{j as I}from"./chunk-B8h3Mgtp.js";/* @preserve
* @terraformer/arcgis - v2.1.1 - MIT
* Copyright (c) 2012-2022 Environmental Systems Research Institute, Inc.
* Tue Aug 02 2022 14:23:48 GMT-0700 (Pacific Daylight Time)
*/var M=function(e,n){for(var r=0;r<e.length;r++)if(e[r]!==n[r])return!1;return!0},f=function(e){return M(e[0],e[e.length-1])||e.push(e[0]),e},y=function(e){var n=0,r=0,t=e.length,a=e[r],o;for(r;r<t-1;r++)o=e[r+1],n+=(o[0]-a[0])*(o[1]+a[1]),a=o;return n>=0},E=function(e){var n={};for(var r in e)e.hasOwnProperty(r)&&(n[r]=e[r]);return n},v=function(e){var n=[],r=e.slice(0),t=f(r.shift().slice(0));if(t.length>=4){y(t)||t.reverse(),n.push(t);for(var a=0;a<r.length;a++){var o=f(r[a].slice(0));o.length>=4&&(y(o)&&o.reverse(),n.push(o))}}return n},G=function(e){for(var n=[],r=0;r<e.length;r++)for(var t=v(e[r]),a=t.length-1;a>=0;a--){var o=t[a].slice(0);n.push(o)}return n},L=function i(e,n){n=n||"OBJECTID";var r={wkid:4326},t={},a;switch(e.type){case"Point":t.x=e.coordinates[0],t.y=e.coordinates[1],e.coordinates[2]!=null&&(t.z=e.coordinates[2]),t.spatialReference=r;break;case"MultiPoint":t.points=e.coordinates.slice(0),e.coordinates[0][2]!=null&&(t.hasZ=!0),t.spatialReference=r;break;case"LineString":t.paths=[e.coordinates.slice(0)],e.coordinates[0][2]!=null&&(t.hasZ=!0),t.spatialReference=r;break;case"MultiLineString":t.paths=e.coordinates.slice(0),e.coordinates[0][0][2]!=null&&(t.hasZ=!0),t.spatialReference=r;break;case"Polygon":t.rings=v(e.coordinates.slice(0)),e.coordinates[0][0][2]!=null&&(t.hasZ=!0),t.spatialReference=r;break;case"MultiPolygon":t.rings=G(e.coordinates.slice(0)),e.coordinates[0][0][0][2]!=null&&(t.hasZ=!0),t.spatialReference=r;break;case"Feature":e.geometry&&(t.geometry=i(e.geometry,n)),t.attributes=e.properties?E(e.properties):{},e.id&&(t.attributes[n]=e.id);break;case"FeatureCollection":for(t=[],a=0;a<e.features.length;a++)t.push(i(e.features[a],n));break;case"GeometryCollection":for(t=[],a=0;a<e.geometries.length;a++)t.push(i(e.geometries[a],n));break}return t};function T(i,e,n){return L(i,e)}const Z=R({__name:"json-resolver",props:{source:{type:Array,default:()=>[]}},setup(i){const e=i;function n(l){const s=l.lastIndexOf("}");return s===-1?l:l.slice(0,s+1)}const r=p(()=>n(e.source.find(l=>l.info&&l.info.includes("json"))?.content||"")),t=k({type:"FeatureCollection",features:[]});function a(l){const s=JSON.parse(l),c=s.features.at(-1);return c&&!c.geometry&&s.features.pop(),s}const o={Point:"point",MultiPoint:"multipoint",LineString:"polyline",MultiLineString:"polyline",Polygon:"polygon",MultiPolygon:"polygon",GeometryCollection:"geometrycollection"},h={point:new u({color:[255,0,0],size:"12px",outline:{color:[255,255,255],width:1}}),multipoint:new u({color:[0,255,0],size:"12px",outline:{color:[255,255,255],width:1}}),polyline:new w({color:[0,0,255],width:2}),polygon:new g({color:[255,255,0,.5],outline:{color:[0,0,0],width:1}})},m=p(()=>t.value.features.map(s=>{const c=T(s.geometry),d=o[s.geometry.type];return c.type=o[s.geometry.type],{geometry:c,attributes:s.properties||{},symbol:h[d]}}));return C(async()=>{P(r.value),await S();try{t.value=a(r.value)}catch{try{const l=I(r.value);t.value=a(l)}catch{}}}),(l,s)=>b(l.$slots,"default",{data:m.value})}});export{Z as _};
