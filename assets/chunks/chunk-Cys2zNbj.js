import{aK as s,ar as n,d7 as d,aj as u,am as l}from"./chunk-XGpVqsM_.js";import{c as g}from"./chunk-C_aMnZ3C.js";import"./chunk-DyqHK6XP.js";import"./chunk-Dix477Sg.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CrMA_peF.js";import"./chunk-aL52J51R.js";import"./chunk-DdqzZVtJ.js";import"./chunk-M42oCGLT.js";import"./chunk-CVITqnnW.js";import"./chunk-B8DfIh-V.js";import"./chunk-cx_wZU7Q.js";import"./chunk-QXap_35O.js";import"./chunk-C8-lVsN3.js";import"./chunk-CUzevAry.js";import"./chunk-BUjDwyFa.js";import"./chunk-BFLErLYb.js";import"./chunk-CJHteJef.js";import"./chunk-CKwt2uXH.js";import"./chunk-CujHzHWW.js";import"./chunk-Caulfaw_.js";import"./chunk-CBPG4_63.js";import"./chunk-CeHGJKUL.js";import"./chunk-B4mRqufT.js";import"./chunk-6EcuAM-e.js";import"./chunk-HzULNgmR.js";import"./chunk-iL5WjyEH.js";let i=class extends g{initialize(){this.addHandles([s((()=>this.view.scale),(()=>this._update()),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some((a=>a.renderer!=null)),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const fi=i;export{fi as default};
