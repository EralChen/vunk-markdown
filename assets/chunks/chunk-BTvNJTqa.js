import{cM as s,cO as n,et as a,s as l,aT as u,ar as i,as as p,au as y}from"./chunk-Br7Cq08f.js";import"./chunk-CPn_Zo84.js";import"./chunk-DyzdzEp-.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-SqlbPPT2.js";let r=class extends s(n(u)){constructor(o){super(o),this.resourceInfo=null,this.type="unknown"}initialize(){this.addResolvingPromise(new Promise((o,t)=>{a(()=>{const e=this.resourceInfo&&(this.resourceInfo.layerType||this.resourceInfo.type);let m="Unknown layer type";e&&(m+=" "+e),t(new l("layer:unknown-layer-type",m,{layerType:e}))})}))}read(o,t){super.read({resourceInfo:o},t)}write(o,t){return null}};i([p({readOnly:!0})],r.prototype,"resourceInfo",void 0),i([p({type:["show","hide"]})],r.prototype,"listMode",void 0),i([p({json:{read:!1},readOnly:!0,value:"unknown"})],r.prototype,"type",void 0),r=i([y("esri.layers.UnknownLayer")],r);const _=r;export{_ as default};
