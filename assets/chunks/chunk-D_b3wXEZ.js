import{bD as p,id as c,eF as u}from"./chunk-DadqOv6U.js";import{createMesh as l}from"./chunk-Dg6lsl7P.js";import"./chunk-CPKck_yD.js";import"./chunk-C3oNrwgT.js";import"./chunk-DAHJ9Q9X.js";import"./chunk-Cj6q1fp6.js";import"./chunk-Cr_4n0Hf.js";import"./chunk-DxOoUp2S.js";import"./chunk-oSfj3hjX.js";import"./chunk-DNDxphL5.js";import"./chunk-q1i1UMbD.js";import"./chunk-CB4WRstQ.js";function $(a,o){const n=new Array,m=p.fromJSON(o.spatialReference);for(const e of o.features){const t=e.metadata,r=c(e.geometry);if(!t||!r){n.push(null);continue}r.spatialReference=m;const s=r.extent,f=l({layerView:a,nodeIndex:t.meta.node.index,featureIndex:t.index,extent:s,spatialReference:m});n.push(f),e.geometry=null}const i=u.fromJSON(o);for(let e=0;e<i.features.length;e++){const t=i.features[e],r=n[e];t.geometry=r}return i}export{$ as processQueryGeometries};
