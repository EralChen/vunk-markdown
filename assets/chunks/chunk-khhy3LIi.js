const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/chunk-C7WHcUmR.js","assets/chunks/chunk-Dpk1TJd9.js","assets/chunks/chunk-iOPJXyP1.js","assets/static/onCreateApp.DRclb75I.css","assets/static/src_layouts_default_aside-6ea01de8.BjbON5Ij.css","assets/static/src_layouts_default_navbar-403af73f.u3IytZI2.css","assets/static/vitepress_components_VPDocOutlineItem-0942cada.tkRPm3MX.css","assets/static/vitepress_components_VPDocAsideOutline-b0d47973.Ds9uynvM.css","assets/static/src_styles_common_reset-f7a68b0e.BAKp5MHC.css","assets/static/src_styles_common_color-a7a524c7.CVau4Kly.css","assets/static/src_styles_common_is-19c6c24d.DKAKruk7.css","assets/static/style-bd199161.DVw0mqUT.css","assets/static/style-ee024ed9.COZrvgTQ.css","assets/static/src_styles_element-plus_reset-752cc03d.htEpr2M-.css","assets/static/src_styles_element-plus_form-item-877afd6a.Dy4HJB2K.css","assets/static/src_styles_element-plus_table-6cbc5816.DXG1SsxY.css","assets/static/src_styles_element-plus_tabs-67d1a98b.BMDMQPDv.css","assets/static/src_styles_element-plus_tree-cc28503d.nmT5n0wM.css","assets/static/src_styles_element-plus_dialog-7f91a00e.D4nTsJge.css","assets/static/src_styles_element-plus_breadcrumb-8ce3a1a1.CwEEGJYc.css","assets/static/src_styles_element-plus_menu-33b44202.hFAFO4eV.css","assets/static/style-769e248f.DDhCRjCR.css","assets/static/style-22d30bfc.TwvRHEyK.css","assets/static/style-d089cd8f.Cc2PI5FU.css","assets/static/style-e86a26b0.CqxSaK_p.css","assets/static/style-51eec318.o0zCZ1y4.css","assets/static/src_styles_form_sub-7371c85e.y3zh-mS3.css","assets/static/src_styles_layout_index-2891f17b.BNCqvENj.css","assets/static/style-ab3e4bd5.BuWAVw4m.css","assets/static/style-2bf8ed1f.CRScSR0a.css","assets/static/style-603b4474.BZwgKm1s.css","assets/static/style-c5252da0.CFNWXuiE.css","assets/static/style-6fd0e256.X9gIGpBH.css","assets/static/style-3c45b3af.Di2LGzYR.css","assets/static/style-27a3a9b4.C8H6Fcyw.css","assets/static/src_styles_markdown_reset-fbd16bdd.D3vNaEcf.css","assets/static/src_styles_markdown_shiki-0d2326df.uut6VZYd.css","assets/static/style-b2fddf65.BmytK7dW.css","assets/static/style-2208d37a.ChwmoEkt.css","assets/static/pages_uno-88a4f3d7.lpyrja-g.css","assets/chunks/chunk-CuaFhuP3.js","assets/chunks/chunk-DGmg3LSc.js"])))=>i.map(i=>d[i]);
import{_ as N}from"./chunk-iOPJXyP1.js";import{wR as U,wS as j,ti as D,b2 as W,b3 as A,ao as H,m4 as J,kp as k,aG as y,aH as V,af as n,ag as o,ai as S,an as m,aK as L,Y as q,eQ as G,am as R,bX as Z,bR as K,aX as Q,iA as X,jk as B,oM as Y,fu as ee,fv as te,$ as ie,m3 as re,m5 as ne,f$ as se,j as $,dW as oe,jf as ae,bW as h,fB as M,aM as P,wT as le,g6 as de}from"./chunk-CuaFhuP3.js";import{t as ue}from"./chunk-DmxaQ-k8.js";import{T as pe,S as C}from"./chunk-Dpk1TJd9.js";import{i as he,o as ce}from"./chunk-Dh11eMC4.js";import{d as ye}from"./chunk-DIHMukqi.js";import"./chunk-DGmg3LSc.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-Drs-cvLt.js";import"./chunk-BQFtbDTt.js";function O(e,t){return j(t.extent,E),U(E,W(fe,e.x,e.y,0))}const E=D(),fe=A();let c=class extends H{get tiles(){const e=this.tilesCoveringView,t=this.pointOfInterest!=null?this.pointOfInterest:this.view.center;return e.sort(((i,s)=>O(t,i)-O(t,s))),e}_scaleEnabled(){return J(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||this.tileInfo==null)return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:i}=t,s=[];for(const{row:r,colFrom:a,colTo:l}of e)for(let w=a;w<=l;w++){const v=t.normalizeCol(w),f=new k(null,i,r,v);this.tileInfo.updateTileInfo(f),s.push(f)}return s}get tileInfo(){return this.view.featuresTilingScheme?.tileInfo??null}get tileSize(){return this.tileInfo!=null?this.tileInfo.size[0]:256}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.addHandles(y((()=>this.view?.state?.viewpoint),(()=>this.notifyChange("tilesCoveringView")),V))}};n([o({readOnly:!0})],c.prototype,"tiles",null),n([o({readOnly:!0})],c.prototype,"_scaleEnabled",null),n([o({readOnly:!0})],c.prototype,"tilesCoveringView",null),n([o({readOnly:!0})],c.prototype,"tileInfo",null),n([o({readOnly:!0})],c.prototype,"tileSize",null),n([o({constructOnly:!0})],c.prototype,"view",void 0),n([o({constructOnly:!0})],c.prototype,"layer",void 0),n([o()],c.prototype,"pointOfInterest",void 0),c=n([S("esri.views.2d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],c);let g=class extends H{get _sortedTilesCoveringView(){const t=(this.view.featureTiles?.tiles?.toArray()??[]).map(ge),i=this._effectivePointOfInterest;return i!=null&&t.sort(((s,r)=>O(i,s)-O(i,r))),t}get tileInfo(){return this.view.featureTiles?.tilingScheme?.toTileInfo()??null}get tileSize(){return this.view.featureTiles?.tileSize??256}get _effectivePointOfInterest(){const t=this.pointOfInterest;return t??this.view.pointsOfInterest?.focus.location}constructor(t){super(t),this.tiles=[],this.pointOfInterest=null}initialize(){this.addHandles([y((()=>this.view.featureTiles),(t=>{this.removeHandles(x),t&&this.addHandles(t.addClient(),x)}),m),y((()=>this._sortedTilesCoveringView),(t=>this._set("tiles",t)),{initial:!0,equals:(t,i)=>pe(t,i,((s,r)=>s.id===r.id))})])}};function ge({lij:[e,t,i],extent:s}){return new k(`${e}/${t}/${i}`,e,t,i,s)}n([o({readOnly:!0})],g.prototype,"tiles",void 0),n([o({readOnly:!0})],g.prototype,"_sortedTilesCoveringView",null),n([o({readOnly:!0})],g.prototype,"tileInfo",null),n([o({readOnly:!0})],g.prototype,"tileSize",null),n([o({constructOnly:!0})],g.prototype,"view",void 0),n([o()],g.prototype,"pointOfInterest",void 0),n([o()],g.prototype,"_effectivePointOfInterest",null),g=n([S("esri.views.3d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],g);const x="feature-tiles";let b=class extends ye{constructor(e){super(e)}initialize(){const e=setInterval((()=>this._fetchDebugInfo()),2e3);this.addHandles(L((()=>clearInterval(e))))}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach((r=>{e.set(r.data.id,r.featureCount)})),this._debugInfo.pendingTiles.forEach((r=>{e.set(r.data.id,r.featureCount),t.set(r.data.id,r.state)}));const i=r=>{const a=t.get(r),l=e.get(r)??"?";return a?`${a}:${l}
${r}`:`store:${l}
${r}`},s=new Map;return this._debugInfo.storedTiles.forEach((r=>{s.set(r.data.id,r.data)})),this._debugInfo.pendingTiles.forEach((r=>{s.set(r.data.id,r.data)})),Array.from(s.values()).map((r=>({lij:[r.level,r.row,r.col],level:r.level,geometry:q.fromExtent(G(r.extent,this.view.spatialReference)),label:i(r.id)})))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then((e=>{this._debugInfo=e,this.update()}))}};n([o({constructOnly:!0})],b.prototype,"handle",void 0),b=n([S("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],b);let p=class extends H{get updating(){return this._updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this._updatingHandles=new R,this._suspendController=null,this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const i=[];for(const{points:s}of t.pointsInFeatures)for(const{z:r}of s)i.push(r);return{elevations:i,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this.updateOutFields=Z((async(t,i)=>{await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateOutFields",[...t],i)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},i))}))}destroy(){this._suspendController=K(this._suspendController),this._workerHandle.destroy(),this._updatingHandles.destroy()}initialize(){this._workerHandle=new _e(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.query,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.addHandles([this._workerHandle.on("notify-updating",(({updating:e})=>this._workerHandleUpdating=e)),this._workerHandle.on("notify-availability",(({availability:e})=>this._set("availability",e)))])}async setup(e,t){const i=we(e.layer);if(i==null)return;const s={configuration:z(e.configuration),serviceInfo:i,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:e.layer.elevationInfo?.toJSON()};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",s,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const i=z(e);await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const{point:i,filter:s,coordinateHelper:r}=e,a={...e,point:Q(i[0],i[1],i[2],r.spatialReference.toJSON()),filter:s?.toJSON()};return this._workerHandle.invoke(a,t)}async updateTiles(e,t){const i={tiles:e.tiles,tileInfo:e.tileInfo!=null?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async handleEdits({historicMoment:e,addedFeatures:t,deletedFeatures:i,updatedFeatures:s},r){const a={historicMoment:e,addedFeatures:t?.map((({objectId:l})=>l)).filter(C)??[],deletedFeatures:i?.map((({objectId:l,globalId:w})=>({objectId:l,globalId:w})))??[],updatedFeatures:s?.map((({objectId:l})=>l)).filter(C)??[]};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("handleEdits",a,r)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},r))}async setHistoricMoment(e,t){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setHistoricMoment",{moment:e},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}async setSuspended(e){this._suspendController?.abort(),this._suspendController=new AbortController,await this._workerHandle.invokeMethod("setSuspended",e,this._suspendController.signal)}};function z(e){return{filter:e.filter!=null?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}function we(e){return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:e.parsedUrl?.path??"",fieldsIndex:e.fieldsIndex.toJSON(),geometryType:B.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:e.timeInfo?.toJSON()}}n([o({constructOnly:!0})],p.prototype,"schedule",void 0),n([o({constructOnly:!0})],p.prototype,"hasZ",void 0),n([o({constructOnly:!0})],p.prototype,"elevationAlignPointsInFeatures",void 0),n([o({constructOnly:!0})],p.prototype,"queryForSymbologySnapping",void 0),n([o({readOnly:!0})],p.prototype,"updating",null),n([o({readOnly:!0})],p.prototype,"availability",void 0),n([o()],p.prototype,"_workerHandleUpdating",void 0),p=n([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],p);class _e extends X{constructor(t,i){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:i})}}let _=class extends H{get tiles(){return[new k("0/0/0",0,0,0,Y(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new ee({origin:new ie({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new te({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};n([o({readOnly:!0})],_.prototype,"tiles",null),n([o({readOnly:!0})],_.prototype,"tileInfo",null),n([o({readOnly:!0})],_.prototype,"tileSize",null),n([o({constructOnly:!0})],_.prototype,"layer",void 0),n([o()],_.prototype,"pointOfInterest",void 0),_=n([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],_);let d=class extends H{get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get _layerView(){return this.view?.allLayerViews.find((e=>e.layer===this._layer))}get _isSuspended(){return re(this._layer)&&!this.layerSource.sublayerSources.some((e=>e.enabled&&e.layer.visible))?!0:!!this.view&&(this._layerView?.suspended!==!1||!this.layerSource.enabled)}get updating(){return this._workerHandle?.updating||this._updatingHandles.updating}get _outFields(){const{view:e,_layerView:t,layerSource:i}=this,{layer:s}=i,{fieldsIndex:r,timeInfo:a,floorInfo:l,subtypeField:w}=s,v=t&&"filter"in t?t.filter:null,f=v?.where&&v.where!=="1=1"?this._getOrLoadWhereFields(v.where,r):[];if(v?.timeExtent&&a){const{startField:u,endField:I}=a,T=r.get(u)?.name??u,F=r.get(I)?.name??I;T&&f.push(T),F&&f.push(F)}if(e?.map&&ne(e.map)&&e.map.utilityNetworks?.find((u=>u.isUtilityLayer(s)))){const u=s.fieldsIndex.get("assetGroup")?.name,I=s.fieldsIndex.get("assetType")?.name;u&&I&&(f.push(u),f.push(I))}if(s&&l?.floorField&&e?.floors?.length){const u=r.get(l.floorField)?.name??l.floorField;u&&f.push(u)}if(w){const u=r.get(w)?.name??w;u&&f.push(u)}return new Set(f)}get configuration(){const{view:e}=this,{apiKey:t,customParameters:i}=this._layer,s=e!=null?e.type:"2d",r=this._layer.createQuery();return this._layerView&&"effectiveDisplayFilter"in this._layerView&&(r.where=se(r.where,this._layerView.effectiveDisplayFilter?.where)),{filter:r,customParameters:t?{...i,token:t}:i,viewType:s}}get availability(){return this._workerHandle?.availability??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._updatingHandles=new R,this._workerHandle=null,this._debug=null,this._memoizedMakeGetGroundElevation=ue(he)}initialize(){let e;const t=this.view;if(t==null||t.destroyed)this._tilesOfInterest=new _({layer:this._layer}),e=this._workerHandle=new p;else switch(t.type){case"2d":this._tilesOfInterest=new c({view:t,layer:this._layer}),e=this._workerHandle=new p;break;case"3d":{const{resourceController:i}=t,s=this._layer;this._tilesOfInterest=new g({view:t}),e=this._workerHandle=new p({schedule:r=>i.immediate.schedule(r),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(r,a)=>{const l=await t.whenLayerView(s);return $(a),l.elevationAlignPointsInFeatures(r,a)},queryForSymbologySnapping:async(r,a)=>{const l=await t.whenLayerView(s);return $(a),l.queryForSymbologySnapping(r,a)}}),this.addHandles([t.elevationProvider.on("elevation-change",(({context:r})=>{const{elevationInfo:a}=s;ae(r,a)&&h(e.notifyElevationSourceChange())})),y((()=>s.elevationInfo),(()=>h(e.notifyElevationSourceChange())),m),y((()=>this._layerView?.layer?.renderer),(()=>h(e.notifySymbologyChange())),m),y((()=>this._layerView?.symbologySnappingSupported??!1),(r=>h(e.setSymbologySnappingSupported(r))),m),oe((()=>this._layerView?.layer),["edits","apply-edits","graphic-update"],(()=>e.notifySymbologyChange()))]);break}}this.addHandles([M(e)]),h(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this._updatingHandles.add((()=>this._updateTilesParameters),(()=>h(e.updateTiles(this._updateTilesParameters,null))),m),this.addHandles([y((()=>this.configuration),(i=>h(e.configure(i,null))),V),y((()=>this._layer.historicMoment),(i=>h(e.setHistoricMoment(i))),P),y((()=>this._outFields),(i=>h(e.updateOutFields(i))),m),y((()=>this._isSuspended),(i=>h(e.setSuspended(i))),P)]),t!=null&&this.addHandles(y((()=>le.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES),(i=>{i&&!this._debug?(this._debug=new b({view:t,handle:e}),this.addHandles(M(this._debug),"debug")):!i&&this._debug&&this.removeHandles("debug")}),m)),this.addHandles([this.layerSource.layer.on("edits",(i=>h(e.handleEdits(i,null)))),this.layerSource.layer.on("apply-edits",(i=>this._updatingHandles.addPromise(i.result)))])}destroy(){this._updatingHandles.destroy(),this._tilesOfInterest.destroy()}refresh(){this._workerHandle?.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:i,point:s}=e;this._tilesOfInterest.pointOfInterest=i.arrayToPoint(s);const r=this._memoizedMakeGetGroundElevation(this.view,i.spatialReference);return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map((a=>ce(a,r)))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}_getOrLoadWhereFields(e,t){const{_whereModule:i}=this;if(!this._loadWhereModuleTask&&!i){const s=de((async()=>{const r=await N(()=>import("./chunk-C7WHcUmR.js").then(a=>a.W),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]));return this._whereModule=r.default,this._whereModule}));return this._loadWhereModuleTask=s,this._updatingHandles.addPromise(s.promise),[]}if(!i)return[];try{return i.create(e,{fieldsIndex:t}).fieldNames}catch{return[]}}};n([o({constructOnly:!0})],d.prototype,"spatialReference",void 0),n([o({constructOnly:!0})],d.prototype,"layerSource",void 0),n([o({constructOnly:!0})],d.prototype,"view",void 0),n([o()],d.prototype,"_tilesOfInterest",void 0),n([o({readOnly:!0})],d.prototype,"_updateTilesParameters",null),n([o()],d.prototype,"_layerView",null),n([o()],d.prototype,"_isSuspended",null),n([o({readOnly:!0})],d.prototype,"updating",null),n([o()],d.prototype,"_outFields",null),n([o({readOnly:!0})],d.prototype,"configuration",null),n([o({readOnly:!0})],d.prototype,"availability",null),n([o()],d.prototype,"_loadWhereModuleTask",void 0),n([o()],d.prototype,"_whereModule",void 0),d=n([S("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],d);export{d as FeatureServiceSnappingSource};
