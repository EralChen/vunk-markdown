import{aG as s,an as n,af as d,ai as u}from"./chunk-CuaFhuP3.js";import{a0 as l}from"./chunk-Dpk1TJd9.js";import{c as g}from"./chunk-NYclTj6Z.js";import"./chunk-iOPJXyP1.js";import"./chunk-DGmg3LSc.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-PM-0Myzz.js";import"./chunk-CDH1Gwc5.js";import"./chunk-D50ykmL0.js";import"./chunk-C8vt5I6O.js";import"./chunk-r1DUUOIi.js";import"./chunk-BnVb9rzE.js";import"./chunk-QXap_35O.js";import"./chunk-HW0UV52H.js";import"./chunk-CUzevAry.js";import"./chunk-BKRiEzjL.js";import"./chunk-BFLErLYb.js";import"./chunk-aVDAQHoW.js";import"./chunk-CKwt2uXH.js";import"./chunk-CujHzHWW.js";import"./chunk-Caulfaw_.js";import"./chunk-BFB-TkuT.js";import"./chunk-BqZ3Zt75.js";import"./chunk-B4mRqufT.js";import"./chunk-6EcuAM-e.js";import"./chunk-BgFQAcl_.js";import"./chunk-iL5WjyEH.js";let i=class extends g{initialize(){this.addHandles([s((()=>this.view.scale),(()=>this._update()),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some((e=>e.renderer!=null)),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,a=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${a}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),a}};i=d([u("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const _i=i;export{_i as default};
