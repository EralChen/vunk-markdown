import{ah as M,bM as z,ai as o,aj as i,Cy as V,al as O,bN as we,as as Ke,Cz as ge,CA as Ye,qD as A,yy as Q,yA as Oe,CB as Qe,CC as Xe,dU as R,ea as q,CD as Ue,s as k,i0 as he,H as X,A as Ne,CE as Pe,uD as et,g$ as qe,jS as tt,CF as rt,CG as ot,a2 as We,a0 as ve,z as Y,Y as Ze,eF as E,bD as W,L as ze,R as st,CH as it,fG as Ce,id as nt,ta as at,CI as lt,CJ as ut,bC as pt,yw as Le,V as C,CK as ct,CL as yt,yz as dt,CM as mt,yC as ft,dM as ht,dQ as vt,dO as wt,dP as gt,dR as bt,e2 as St,e_ as Bt,$ as Tt,fs as $e,dT as ke,CN as Nt,S as Pt,k as Rt,j as It,E as At,i as Ot,aI as Ct,lE as jt,eH as Dt,f1 as Lt,fV as $t,hO as kt,aL as Mt}from"./chunk-Dx0VeHfy.js";import{e as je,n as _t,o as xt,c as ye,a as de,S as re,h as oe,d as se,f as be,b as ie,g as Ft}from"./chunk-V585NtTl.js";import{t as Jt}from"./chunk-DHiB1uzW.js";import"./chunk-DHAEDrTs.js";let J=class extends M{constructor(r){super(r),this.break=new z({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.first=new z({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.unlocated=new z({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.last=new z({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.middle=new z({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.waypoint=new z({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};o([i({types:V})],J.prototype,"break",void 0),o([i({types:V})],J.prototype,"first",void 0),o([i({types:V})],J.prototype,"unlocated",void 0),o([i({types:V})],J.prototype,"last",void 0),o([i({types:V})],J.prototype,"middle",void 0),o([i({types:V})],J.prototype,"waypoint",void 0),J=o([O("esri.layers.support.RouteStopSymbols")],J);let x=class extends M{constructor(r){super(r),this.directionLines=new we({color:[0,122,194],width:6}),this.directionPoints=new z({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new z({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new Ke({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new we({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new we({width:8,color:[20,89,127]}),this.stops=new J}};o([i({types:ge})],x.prototype,"directionLines",void 0),o([i({types:V})],x.prototype,"directionPoints",void 0),o([i({types:V})],x.prototype,"pointBarriers",void 0),o([i({types:Ye})],x.prototype,"polygonBarriers",void 0),o([i({types:ge})],x.prototype,"polylineBarriers",void 0),o([i({types:ge})],x.prototype,"routeInfo",void 0),o([i({type:J})],x.prototype,"stops",void 0),x=o([O("esri.layers.support.RouteSymbols")],x);let _=class extends M{constructor(r){super(r),this.dataType=null,this.name=null,this.parameterNames=null,this.restrictionUsageParameterName=null,this.timeNeutralAttributeName=null,this.trafficSupport=null,this.units=null,this.usageType=null}};o([i({type:String})],_.prototype,"dataType",void 0),o([A(Q,{ignoreUnknown:!1})],_.prototype,"name",void 0),o([i({type:[String]})],_.prototype,"parameterNames",void 0),o([i({type:String})],_.prototype,"restrictionUsageParameterName",void 0),o([A(Oe,{ignoreUnknown:!1})],_.prototype,"timeNeutralAttributeName",void 0),o([i({type:String})],_.prototype,"trafficSupport",void 0),o([A(Qe)],_.prototype,"units",void 0),o([A(Xe)],_.prototype,"usageType",void 0),_=o([O("esri.rest.support.NetworkAttribute")],_);const Et=_;let Z=class extends M{constructor(r){super(r),this.buildTime=null,this.name=null,this.networkAttributes=null,this.networkSources=null,this.state=null}};o([i({type:Number})],Z.prototype,"buildTime",void 0),o([i({type:String})],Z.prototype,"name",void 0),o([i({type:[Et]})],Z.prototype,"networkAttributes",void 0),o([i()],Z.prototype,"networkSources",void 0),o([i({type:String})],Z.prototype,"state",void 0),Z=o([O("esri.rest.support.NetworkDataset")],Z);const Gt=Z;let I=class extends M{constructor(r){super(r),this.accumulateAttributeNames=null,this.attributeParameterValues=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}readAccumulateAttributes(r){return r==null?null:r.map((t=>Q.fromJSON(t)))}writeAccumulateAttributes(r,t,s){r?.length&&(t[s]=r.map((n=>Q.toJSON(n))))}get capabilities(){return{supportsNow:(this.currentVersion??10)>=10.81}}readDefaultTravelMode(r,t){const s=t.supportedTravelModes?.find((({id:n})=>n===t.defaultTravelMode))??t.supportedTravelModes?.find((({itemId:n})=>n===t.defaultTravelMode));return s?je.fromJSON(s):null}};o([i()],I.prototype,"accumulateAttributeNames",void 0),o([R("accumulateAttributeNames")],I.prototype,"readAccumulateAttributes",null),o([q("accumulateAttributeNames")],I.prototype,"writeAccumulateAttributes",null),o([i()],I.prototype,"attributeParameterValues",void 0),o([i()],I.prototype,"capabilities",null),o([i()],I.prototype,"currentVersion",void 0),o([i()],I.prototype,"defaultTravelMode",void 0),o([R("defaultTravelMode",["defaultTravelMode","supportedTravelModes"])],I.prototype,"readDefaultTravelMode",null),o([i()],I.prototype,"directionsLanguage",void 0),o([A(Ue)],I.prototype,"directionsLengthUnits",void 0),o([i()],I.prototype,"directionsSupportedLanguages",void 0),o([A(Oe,{ignoreUnknown:!1})],I.prototype,"directionsTimeAttribute",void 0),o([i()],I.prototype,"hasZ",void 0),o([A(Q,{ignoreUnknown:!1})],I.prototype,"impedance",void 0),o([i({type:Gt})],I.prototype,"networkDataset",void 0),o([i({type:[je]})],I.prototype,"supportedTravelModes",void 0),I=o([O("esri.rest.support.NetworkServiceDescription")],I);const Ut=()=>Ne.getLogger("esri.rest.networkService");function ne(e,r,t,s){s[t]=[r.length,r.length+e.length],e.forEach((n=>{r.push(n.geometry)}))}function qt(e,r){for(let t=0;t<r.length;t++){const s=e[r[t]];if(s&&s.length)for(const n of s)n.z=void 0}Ut().warnOnce(`The remote Network Analysis service is powered by a network dataset which is not Z-aware.
Z-coordinates of the input geometry are ignored.`)}function Wt(e,r){for(let t=0;t<r.length;t++){const s=e[r[t]];if(s&&s.length){for(const n of s)if(n!=null&&n.hasZ)return!0}}return!1}async function Ve(e,r,t){if(!e)throw new k("network-service:missing-url","Url to Network service is missing");const s=he({f:"json",token:r},t),{data:n}=await X(e,s),p=n.currentVersion>=10.4?zt(e,r,t):Zt(e,t),{defaultTravelMode:a,supportedTravelModes:y}=await p;return n.defaultTravelMode=a,n.supportedTravelModes=y,I.fromJSON(n)}async function Zt(e,r){const t=he({f:"json"},r),{data:s}=await X(e.replace(/\/rest\/.*$/i,"/info"),t);if(!s?.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:n}=s,p=Pe(n)+"/sharing/rest/portals/self",{data:a}=await X(p,t),y=et("helperServices.routingUtilities.url",a);if(!y)return{supportedTravelModes:[],defaultTravelMode:null};const g=qe(n),N=/\/solve$/i.test(g.path)?"Route":/\/solveclosestfacility$/i.test(g.path)?"ClosestFacility":"ServiceAreas",m=he({f:"json",serviceName:N},r),l=Pe(y)+"/GetTravelModes/execute",h=await X(l,m),T=[];let w=null;if(h?.data?.results?.length){const b=h.data.results;for(const d of b)if(d.paramName==="supportedTravelModes"){if(d.value?.features){for(const{attributes:S}of d.value.features)if(S){const f=JSON.parse(S.TravelMode);T.push(f)}}}else d.paramName==="defaultTravelMode"&&(w=d.value)}return{supportedTravelModes:T,defaultTravelMode:w}}async function zt(e,r,t){try{const s=he({f:"json",token:r},t),n=Pe(e)+"/retrieveTravelModes",{data:{supportedTravelModes:p,defaultTravelMode:a}}=await X(n,s);return{supportedTravelModes:p,defaultTravelMode:a}}catch(s){throw new k("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:s})}}const Me=new tt({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let me=class extends rt{constructor(r){super(r),this.type=null}};o([i({type:String,json:{read:Me.read,write:Me.write}})],me.prototype,"type",void 0),me=o([O("esri.rest.support.NAMessage")],me);const Vt=me;let ee=class extends M{constructor(r){super(r)}};o([i({json:{read:{source:"string"}}})],ee.prototype,"text",void 0),o([A(ot,{name:"stringType"})],ee.prototype,"type",void 0),ee=o([O("esri.rest.support.DirectionsString")],ee);const He=ee;let U=class extends M{constructor(r){super(r),this.arriveTime=null,this.arriveTimeOffset=null,this.geometry=null,this.strings=null}readArriveTimeOffset(r,t){return _t(t.ETA,t.arriveTimeUTC)}readGeometry(r,t){return We.fromJSON(t.point)}};o([i({type:Date,json:{read:{source:"arriveTimeUTC"}}})],U.prototype,"arriveTime",void 0),o([i()],U.prototype,"arriveTimeOffset",void 0),o([R("arriveTimeOffset",["arriveTimeUTC","ETA"])],U.prototype,"readArriveTimeOffset",null),o([i({type:We})],U.prototype,"geometry",void 0),o([R("geometry",["point"])],U.prototype,"readGeometry",null),o([i({type:[He]})],U.prototype,"strings",void 0),U=o([O("esri.rest.support.DirectionsEvent")],U);const Ht=U;function Kt(e){if(e==null||e==="")return null;let r=0,t=0,s=0,n=0;const p=[];let a,y,g,N,m,l,h,T,w=0,b=0,d=0;if(m=e.match(/((\+|-)[^+\-|]+|\|)/g),m||(m=[]),parseInt(m[w],32)===0){w=2;const S=parseInt(m[w],32);w++,l=parseInt(m[w],32),w++,1&S&&(b=m.indexOf("|")+1,h=parseInt(m[b],32),b++),2&S&&(d=m.indexOf("|",b)+1,T=parseInt(m[d],32),d++)}else l=parseInt(m[w],32),w++;for(;w<m.length&&m[w]!=="|";){a=parseInt(m[w],32)+r,w++,r=a,y=parseInt(m[w],32)+t,w++,t=y;const S=[a/l,y/l];b&&(N=parseInt(m[b],32)+s,b++,s=N,S.push(N/h)),d&&(g=parseInt(m[d],32)+n,d++,n=g,S.push(g/T)),p.push(S)}return{paths:[p],hasZ:b>0,hasM:d>0}}let K=class extends Y{constructor(e){super(e),this.events=null,this.geometry=null,this.strings=null}readGeometry(e,r){const t=Kt(r.compressedGeometry);return t!=null?ve.fromJSON(t):null}};o([i({type:[Ht]})],K.prototype,"events",void 0),o([i({type:ve})],K.prototype,"geometry",void 0),o([R("geometry",["compressedGeometry"])],K.prototype,"readGeometry",null),o([i({type:[He]})],K.prototype,"strings",void 0),K=o([O("esri.rest.support.DirectionsFeature")],K);const Yt=K;function Qt(e,r){if(e.length===0)return new ve({spatialReference:r});const t=[];for(const a of e)for(const y of a.paths)t.push(...y);const s=[];t.forEach(((a,y)=>{y!==0&&a[0]===t[y-1][0]&&a[1]===t[y-1][1]||s.push(a)}));const{hasM:n,hasZ:p}=e[0];return new ve({hasM:n,hasZ:p,paths:[s],spatialReference:r})}let D=class extends E{constructor(r){super(r),this.extent=null,this.features=[],this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(r,t){if(!r)return[];const s=t.summary.envelope.spatialReference??t.spatialReference,n=s&&W.fromJSON(s);return r.map((p=>{const a=Yt.fromJSON(p);if(a.geometry!=null&&(a.geometry.spatialReference=n),a.events!=null)for(const y of a.events)y.geometry!=null&&(y.geometry.spatialReference=n);return a}))}get mergedGeometry(){return this.features?Qt(this.features.map((({geometry:r})=>r)),this.extent.spatialReference):null}get strings(){return this.features.flatMap((({strings:r})=>r)).filter(ze)}};o([i({type:Ze,json:{read:{source:"summary.envelope"}}})],D.prototype,"extent",void 0),o([i({nonNullable:!0})],D.prototype,"features",void 0),o([R("features")],D.prototype,"readFeatures",null),o([i()],D.prototype,"geometryType",void 0),o([i({readOnly:!0})],D.prototype,"mergedGeometry",null),o([i()],D.prototype,"routeId",void 0),o([i()],D.prototype,"routeName",void 0),o([i({value:null,readOnly:!0})],D.prototype,"strings",null),o([i({json:{read:{source:"summary.totalDriveTime"}}})],D.prototype,"totalDriveTime",void 0),o([i({json:{read:{source:"summary.totalLength"}}})],D.prototype,"totalLength",void 0),o([i({json:{read:{source:"summary.totalTime"}}})],D.prototype,"totalTime",void 0),D=o([O("esri.rest.support.DirectionsFeatureSet")],D);const Xt=D;let L=class extends M{constructor(r){super(r),this.directionLines=null,this.directionPoints=null,this.directions=null,this.route=null,this.routeName=null,this.stops=null,this.traversedEdges=null,this.traversedJunctions=null,this.traversedTurns=null}};o([i({type:E,json:{write:!0}})],L.prototype,"directionLines",void 0),o([i({type:E,json:{write:!0}})],L.prototype,"directionPoints",void 0),o([i({type:Xt,json:{write:!0}})],L.prototype,"directions",void 0),o([i({type:Y,json:{write:!0}})],L.prototype,"route",void 0),o([i({type:String,json:{write:!0}})],L.prototype,"routeName",void 0),o([i({type:[Y],json:{write:!0}})],L.prototype,"stops",void 0),o([i({type:E,json:{write:!0}})],L.prototype,"traversedEdges",void 0),o([i({type:E,json:{write:!0}})],L.prototype,"traversedJunctions",void 0),o([i({type:E,json:{write:!0}})],L.prototype,"traversedTurns",void 0),L=o([O("esri.rest.support.RouteResult")],L);const er=L;function Se(e){return e?E.fromJSON(e).features.filter(ze):[]}let $=class extends M{constructor(r){super(r),this.checksum=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(r,t){return Se(t.barriers)}readPolylineBarriers(r){return Se(r)}readPolygonBarriers(r){return Se(r)}};o([i({type:String})],$.prototype,"checksum",void 0),o([i({type:[Vt]})],$.prototype,"messages",void 0),o([i({type:[Y]})],$.prototype,"pointBarriers",void 0),o([R("pointBarriers",["barriers"])],$.prototype,"readPointBarriers",null),o([i({type:[Y]})],$.prototype,"polylineBarriers",void 0),o([R("polylineBarriers")],$.prototype,"readPolylineBarriers",null),o([i({type:[Y]})],$.prototype,"polygonBarriers",void 0),o([R("polygonBarriers")],$.prototype,"readPolygonBarriers",null),o([i({type:[er]})],$.prototype,"routeResults",void 0),$=o([O("esri.rest.support.RouteSolveResult")],$);function ae(e){return e instanceof E}async function tr(e,r,t){const s=[],n=[],p={},a={},y=qe(e),{path:g}=y;ae(r.stops)&&ne(r.stops.features,n,"stops.features",p),ae(r.pointBarriers)&&ne(r.pointBarriers.features,n,"pointBarriers.features",p),ae(r.polylineBarriers)&&ne(r.polylineBarriers.features,n,"polylineBarriers.features",p),ae(r.polygonBarriers)&&ne(r.polygonBarriers.features,n,"polygonBarriers.features",p);const N=await st(n);for(const T in p){const w=p[T];s.push(T),a[T]=N.slice(w[0],w[1])}if(Wt(a,s)){let T=null;try{T=await Ve(g,r.apiKey,t)}catch{}T&&!T.hasZ&&qt(a,s)}for(const T in a)a[T].forEach(((w,b)=>{it(r,T)[b].geometry=w}));const m={...t,query:{...y.query,...xt(r),f:"json"}},l=g.endsWith("/solve")?g:`${g}/solve`,{data:h}=await X(l,m);return rr(h)}function rr(e){const{barriers:r,checksum:t,directionLines:s,directionPoints:n,directions:p,messages:a,polygonBarriers:y,polylineBarriers:g,routes:N,stops:m,traversedEdges:l,traversedJunctions:h,traversedTurns:T}=e,w=f=>{const P=d.find((j=>j.routeName===f));if(P!=null)return P;const B={routeId:d.length+1,routeName:f};return d.push(B),B},b=f=>{const P=d.find((j=>j.routeId===f));if(P!=null)return P;const B={routeId:f,routeName:null};return d.push(B),B},d=[];N?.features.forEach(((f,P)=>{f.geometry.spatialReference=N.spatialReference??void 0;const B=f.attributes.Name,j=P+1;d.push({routeId:j,routeName:B,route:f})})),p?.forEach((f=>{const{routeName:P}=f;w(P).directions=f}));const S=(m?.features.every((f=>f.attributes.RouteName==null))??!1)&&d.length>0?d[0].routeName:null;return m?.features.forEach((f=>{f.geometry&&(f.geometry.spatialReference??=m.spatialReference??void 0);const P=S??f.attributes.RouteName,B=w(P);B.stops??=[],B.stops.push(f)})),s?.features.forEach((f=>{const P=f.attributes.RouteID,B=b(P),{geometryType:j,spatialReference:G}=s;B.directionLines??={features:[],geometryType:j,spatialReference:G},B.directionLines.features.push(f)})),n?.features.forEach((f=>{const P=f.attributes.RouteID,B=b(P),{geometryType:j,spatialReference:G}=n;B.directionPoints??={features:[],geometryType:j,spatialReference:G},B.directionPoints.features.push(f)})),l?.features.forEach((f=>{const P=f.attributes.RouteID,B=b(P),{geometryType:j,spatialReference:G}=l;B.traversedEdges??={features:[],geometryType:j,spatialReference:G},B.traversedEdges.features.push(f)})),h?.features.forEach((f=>{const P=f.attributes.RouteID,B=b(P),{geometryType:j,spatialReference:G}=h;B.traversedJunctions??={features:[],geometryType:j,spatialReference:G},B.traversedJunctions.features.push(f)})),T?.features.forEach((f=>{const P=f.attributes.RouteID,B=b(P);B.traversedTurns??={features:[]},B.traversedTurns.features.push(f)})),$.fromJSON({barriers:r,checksum:t,messages:a,polygonBarriers:y,polylineBarriers:g,routeResults:d})}let F=class extends Ce.ClonableMixin(M){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.geometry=null,this.geometryType=null,this.name=null,this.spatialRelationship=null,this.type="layer",this.where=null}};o([i({type:Boolean,json:{write:!0}})],F.prototype,"doNotLocateOnRestrictedElements",void 0),o([i({types:at,json:{read:nt,write:!0}})],F.prototype,"geometry",void 0),o([A(lt)],F.prototype,"geometryType",void 0),o([i({type:String,json:{name:"layerName",write:!0}})],F.prototype,"name",void 0),o([A(ut,{name:"spatialRel"})],F.prototype,"spatialRelationship",void 0),o([i({type:String,json:{write:!0}})],F.prototype,"type",void 0),o([i({type:String,json:{write:!0}})],F.prototype,"where",void 0),F=o([O("esri.rest.support.DataLayer")],F);var Re;let fe=class extends E{static{Re=this}constructor(e){super(e),this.doNotLocateOnRestrictedElements=null}clone(){return new Re({doNotLocateOnRestrictedElements:this.doNotLocateOnRestrictedElements,...this.cloneProperties()})}};o([i({type:Boolean,json:{write:!0}})],fe.prototype,"doNotLocateOnRestrictedElements",void 0),fe=Re=o([O("esri.rest.support.NetworkFeatureSet")],fe);let te=class extends Ce.ClonableMixin(M){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.url=null}};o([i({type:Boolean,json:{write:!0}})],te.prototype,"doNotLocateOnRestrictedElements",void 0),o([i({type:String,json:{write:!0}})],te.prototype,"url",void 0),te=o([O("esri.rest.support.NetworkUrl")],te);var Ie;let u=class extends Ce.ClonableMixin(M){static{Ie=this}constructor(e){super(e),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.checksum=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsOutputType=null,this.directionsStyleName=null,this.directionsTimeAttribute=null,this.findBestSequence=null,this.geometryPrecision=null,this.geometryPrecisionM=null,this.geometryPrecisionZ=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines="true-shape",this.outSpatialReference=null,this.overrides=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.preserveObjectID=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnBarriers=!1,this.returnDirections=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.returnRoutes=!0,this.returnStops=!1,this.returnTraversedEdges=null,this.returnTraversedJunctions=null,this.returnTraversedTurns=null,this.returnZ=!0,this.startTime=null,this.startTimeIsUTC=!0,this.stops=null,this.timeWindowsAreUTC=null,this.travelMode=null,this.useHierarchy=null,this.useTimeWindows=null}static from(e){return pt(Ie,e)}readAccumulateAttributes(e){return e==null?null:e.map((r=>Q.fromJSON(r)))}writeAccumulateAttributes(e,r,t){e?.length&&(r[t]=e.map((s=>Q.toJSON(s))))}writePointBarriers(e,r,t){le(e,r,t)}writePolygonBarrier(e,r,t){le(e,r,t)}writePolylineBarrier(e,r,t){le(e,r,t)}readRestrictionAttributes(e){return e==null?null:e.map((r=>Le.fromJSON(r)))}writeRestrictionAttributes(e,r,t){e?.length&&(r[t]=e.map((s=>Le.toJSON(s))))}readStartTime(e,r){const{startTime:t}=r;return t==null?null:t==="now"?"now":new Date(t)}writeStartTime(e,r){e!=null&&(r.startTime=e==="now"?"now":e.getTime())}readStops(e,r){return ar(r.stops)}writeStops(e,r,t){le(e,r,t)}};function or(e){return e&&"type"in e}function sr(e){return e&&"features"in e&&"doNotLocateOnRestrictedElements"in e}function ir(e){return e&&"url"in e}function nr(e){return e&&"features"in e}function ar(e){return or(e)?F.fromJSON(e):ir(e)?te.fromJSON(e):sr(e)?fe.fromJSON(e):nr(e)?E.fromJSON(e):null}function le(e,r,t){e!=null&&(r[t]=C.isCollection(e)?{features:e.toArray().map((s=>s.toJSON()))}:e.toJSON())}o([i({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],u.prototype,"accumulateAttributes",void 0),o([R("accumulateAttributes")],u.prototype,"readAccumulateAttributes",null),o([q("accumulateAttributes")],u.prototype,"writeAccumulateAttributes",null),o([i(Jt)],u.prototype,"apiKey",void 0),o([i({json:{write:!0}})],u.prototype,"attributeParameterValues",void 0),o([i({type:String,json:{write:!0}})],u.prototype,"checksum",void 0),o([i({type:String,json:{write:!0}})],u.prototype,"directionsLanguage",void 0),o([A(Ue)],u.prototype,"directionsLengthUnits",void 0),o([A(ct)],u.prototype,"directionsOutputType",void 0),o([A(yt)],u.prototype,"directionsStyleName",void 0),o([A(Oe,{name:"directionsTimeAttributeName",ignoreUnknown:!1})],u.prototype,"directionsTimeAttribute",void 0),o([i({type:Boolean,json:{write:!0}})],u.prototype,"findBestSequence",void 0),o([i({type:Number,json:{write:!0}})],u.prototype,"geometryPrecision",void 0),o([i({type:Number,json:{write:!0}})],u.prototype,"geometryPrecisionM",void 0),o([i({type:Number,json:{write:!0}})],u.prototype,"geometryPrecisionZ",void 0),o([i({type:Boolean,json:{write:!0}})],u.prototype,"ignoreInvalidLocations",void 0),o([A(Q,{name:"impedanceAttributeName",ignoreUnknown:!1})],u.prototype,"impedanceAttribute",void 0),o([i({type:Number,json:{write:!0}})],u.prototype,"outputGeometryPrecision",void 0),o([A(dt)],u.prototype,"outputGeometryPrecisionUnits",void 0),o([A(mt)],u.prototype,"outputLines",void 0),o([i({type:W,json:{name:"outSR",write:!0}})],u.prototype,"outSpatialReference",void 0),o([i({json:{write:!0}})],u.prototype,"overrides",void 0),o([i({json:{name:"barriers",write:!0}})],u.prototype,"pointBarriers",void 0),o([q("pointBarriers")],u.prototype,"writePointBarriers",null),o([i({json:{write:!0}})],u.prototype,"polygonBarriers",void 0),o([q("polygonBarriers")],u.prototype,"writePolygonBarrier",null),o([i({json:{write:!0}})],u.prototype,"polylineBarriers",void 0),o([q("polylineBarriers")],u.prototype,"writePolylineBarrier",null),o([i({type:Boolean,json:{write:!0}})],u.prototype,"preserveFirstStop",void 0),o([i({type:Boolean,json:{write:!0}})],u.prototype,"preserveLastStop",void 0),o([i({type:Boolean,json:{write:!0}})],u.prototype,"preserveObjectID",void 0),o([i({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],u.prototype,"restrictionAttributes",void 0),o([R("restrictionAttributes")],u.prototype,"readRestrictionAttributes",null),o([q("restrictionAttributes")],u.prototype,"writeRestrictionAttributes",null),o([A(ft)],u.prototype,"restrictUTurns",void 0),o([i({type:Boolean,json:{write:!0}})],u.prototype,"returnBarriers",void 0),o([i({type:Boolean,json:{write:!0}})],u.prototype,"returnDirections",void 0),o([i({type:Boolean,json:{write:!0}})],u.prototype,"returnPolygonBarriers",void 0),o([i({type:Boolean,json:{write:!0}})],u.prototype,"returnPolylineBarriers",void 0),o([i({type:Boolean,json:{write:!0}})],u.prototype,"returnRoutes",void 0),o([i({type:Boolean,json:{write:!0}})],u.prototype,"returnStops",void 0),o([i({type:Boolean,json:{write:!0}})],u.prototype,"returnTraversedEdges",void 0),o([i({type:Boolean,json:{write:!0}})],u.prototype,"returnTraversedJunctions",void 0),o([i({type:Boolean,json:{write:!0}})],u.prototype,"returnTraversedTurns",void 0),o([i({type:Boolean,json:{write:!0}})],u.prototype,"returnZ",void 0),o([i({json:{write:!0}})],u.prototype,"startTime",void 0),o([R("startTime")],u.prototype,"readStartTime",null),o([q("startTime")],u.prototype,"writeStartTime",null),o([i({type:Boolean,json:{write:!0}})],u.prototype,"startTimeIsUTC",void 0),o([i({json:{write:!0}})],u.prototype,"stops",void 0),o([R("stops")],u.prototype,"readStops",null),o([q("stops")],u.prototype,"writeStops",null),o([i({type:Boolean,json:{write:!0}})],u.prototype,"timeWindowsAreUTC",void 0),o([i({type:je,json:{write:!0}})],u.prototype,"travelMode",void 0),o([i({type:Boolean,json:{write:!0}})],u.prototype,"useHierarchy",void 0),o([i({type:Boolean,json:{write:!0}})],u.prototype,"useTimeWindows",void 0),u=Ie=o([O("esri.rest.support.RouteParameters")],u);function ue(e){if(!e.length)return;const r=e.toArray(),t=r.map((({objectId:n})=>n)).filter((n=>n!=null));let s=Math.max(...t,0);for(const n of r)n.objectId==null&&(n.objectId=++s)}function pe(e,r){return!!e.length&&e.length===r.length&&_e(e)&&_e(r)}function _e(e){return e.every((({objectId:r})=>r!=null))}function Be(e){return e.length?e:null}function Ae(e){switch(e){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:Ae("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:Ae("esriGeometryPolyline")}}}function ce(e){return"layers"in e}function lr(e){return e.declaredClass==="esri.rest.support.FeatureSet"}function ur(e){return e.declaredClass==="esri.rest.support.NetworkFeatureSet"}function pr(e,r){for(const t of e){const s=r.find((n=>n.objectId===t.objectId));s&&(s.addedCost=t.addedCost,s.barrierType=t.barrierType,s.costs=t.costs,s.curbApproach=t.curbApproach,s.fullEdge=t.fullEdge,s.geometry=t.geometry,s.name=t.name,s.sideOfEdge=t.sideOfEdge,s.sourceId=t.sourceId,s.sourceOid=t.sourceOid,s.status=t.status,s.symbol=t.symbol)}}function cr(e,r){for(const t of e){const s=r.find((n=>n.objectId===t.objectId));s&&(s.barrierType=t.barrierType,s.costs=t.costs,s.geometry=t.geometry,s.name=t.name,s.scaleFactor=t.scaleFactor,s.symbol=t.symbol)}}function yr(e,r){for(const t of e){const s=r.find((n=>n.objectId===t.objectId));s&&(s.barrierType=t.barrierType,s.costs=t.costs,s.geometry=t.geometry,s.name=t.name,s.scaleFactor=t.scaleFactor,s.symbol=t.symbol)}}function dr(e,r){for(const t of e){const s=r.find((n=>n.objectId===t.objectId));s&&(s.arriveCurbApproach=t.arriveCurbApproach,s.arriveTime=t.arriveTime,s.arriveTimeOffset=t.arriveTimeOffset,s.cumulativeCosts=t.cumulativeCosts,s.cumulativeDistance=t.cumulativeDistance,s.cumulativeDuration=t.cumulativeDuration,s.curbApproach=t.curbApproach,s.departCurbApproach=t.departCurbApproach,s.departTime=t.departTime,s.departTimeOffset=t.departTimeOffset,s.distanceToNetworkInMeters=t.distanceToNetworkInMeters,s.geometry=t.geometry,s.lateDuration=t.lateDuration,s.name=t.name,s.navLatency=t.navLatency,s.posAlong=t.posAlong,s.routeName=t.routeName,s.serviceCosts=t.serviceCosts,s.serviceDistance=t.serviceDistance,s.serviceDuration=t.serviceDuration,s.sequence=t.sequence,s.sideOfEdge=t.sideOfEdge,s.snapX=t.snapX,s.snapY=t.snapY,s.snapZ=t.snapZ,s.sourceId=t.sourceId,s.sourceOid=t.sourceOid,s.status=t.status,s.symbol=t.symbol,s.timeWindowEnd=t.timeWindowEnd,s.timeWindowStart=t.timeWindowStart,s.violations=t.violations,s.waitDuration=t.waitDuration,s.wait=t.wait)}}async function xe(e){const r=W.WGS84;return await $t(e.spatialReference,r),Lt(e,r)}function H(e,r){switch(r){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function Te(e,r){return r==="decimal-degrees"||r==="points"||r==="unknown"?e:kt(e,r,"meters")}function mr(e){const{attributes:r,geometry:t,popupTemplate:s,symbol:n}=e.toGraphic().toJSON();return{attributes:r,geometry:t,popupInfo:s,symbol:n}}const fr=C.ofType(ye),hr=C.ofType(de),Fe=C.ofType(re),Je=C.ofType(oe),Ee=C.ofType(se),Ge=C.ofType(ie);let v=class extends ht(vt(wt(gt(bt(Mt))))){constructor(e){super(e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.checksum=null,this.defaultSymbols=new x,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new Fe,this.polygonBarriers=new Je,this.polylineBarriers=new Ee,this.routeInfo=null,this.spatialReference=W.WGS84,this.stops=new Ge,this.type="route";const r=()=>{this._setStopSymbol(this.stops)};this.addHandles(St((()=>this.stops),"change",r,{sync:!0,onListenerAdd:r}))}writeFeatureCollectionWebmap(e,r,t,s){const n=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter((y=>!!y)),p=n.map(((y,g)=>g)),a=s.origin==="web-map"?"featureCollection.layers":"layers";Bt(a,n,r),r.opacity=this.opacity,r.visibility=this.visible,r.visibleLayers=p}readDirectionLines(e,r){return this._getNetworkFeatures(r,"DirectionLines",(t=>ye.fromGraphic(t)))}readDirectionPoints(e,r){return this._getNetworkFeatures(r,"DirectionPoints",(t=>de.fromGraphic(t)))}get fullExtent(){const e=new Ze({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:W.WGS84});if(this.routeInfo?.geometry!=null)return this.routeInfo.geometry.extent??e;if(this.stops==null)return e;const r=this.stops.filter((n=>n.geometry!=null));if(r.length<2)return e;const{spatialReference:t}=r.at(0).geometry;if(t==null)return e;const s=r.toArray().map((n=>{const p=n.geometry;return[p.x,p.y]}));return new Tt({points:s,spatialReference:t}).extent}readMaxScale(e,r){return(ce(r)?r.layers:r.featureCollection?.layers)?.find((n=>n.layerDefinition.maxScale!=null))?.layerDefinition.maxScale??0}readMinScale(e,r){return(ce(r)?r.layers:r.featureCollection?.layers)?.find((n=>n.layerDefinition.minScale!=null))?.layerDefinition.minScale??0}readPointBarriers(e,r){return this._getNetworkFeatures(r,"Barriers",(t=>re.fromGraphic(t)))}readPolygonBarriers(e,r){return this._getNetworkFeatures(r,"PolygonBarriers",(t=>oe.fromGraphic(t)))}readPolylineBarriers(e,r){return this._getNetworkFeatures(r,"PolylineBarriers",(t=>se.fromGraphic(t)))}readRouteInfo(e,r){return this._getNetworkFeatures(r,"RouteInfo",(t=>be.fromGraphic(t))).at(0)??null}readSpatialReference(e,r){const t=ce(r)?r.layers:r.featureCollection?.layers;if(!t?.length)return W.WGS84;const{layerDefinition:s,featureSet:n}=t[0],p=n.features[0],a=p?.geometry?.spatialReference??n.spatialReference??s.spatialReference??s.extent.spatialReference??$e;return W.fromJSON(a)}readStops(e,r){return this._getNetworkFeatures(r,"Stops",(t=>ie.fromGraphic(t)),(t=>this._setStopSymbol(t)))}get title(){return this.routeInfo?.name??"Route"}set title(e){this._overrideIfSome("title",e)}get url(){return ke.routeServiceUrl}set url(e){e!=null?this._set("url",Nt(e,Ne.getLogger(this))):this._set("url",ke.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){this.directionLines!=null&&(this.directionLines.removeAll(),this._set("directionLines",null)),this.directionPoints!=null&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),this.routeInfo!=null&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:e,portalItem:r}=this;if(!r)throw new k("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!r.id)throw new k("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if(r.type!=="Feature Collection")throw new k("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(!this.routeInfo)throw new k("routelayer:route-unsolved","save() requires a solved route");const{portal:t}=r;await t.signIn(),t.user||await r.reload();const{itemUrl:s,itemControl:n}=r;if(n!=="admin"&&n!=="update")throw new k("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const p={messages:[],origin:"portal-item",portal:t,url:s?Pt(s):void 0,writtenProperties:[]},a=this.write(void 0,p);return r.extent=await xe(e),r.title=this.title,await r.update({data:a}),r}async saveAs(e,r={}){if(await this.load(),this.routeInfo==null)throw new k("routelayer:route-unsolved","saveAs() requires a solved route");const t=Rt.from(e).clone();t.extent??=await xe(this.fullExtent),t.id=null,t.portal??=It.getDefault(),t.title??=this.title,t.type="Feature Collection",t.typeKeywords=["Data","Feature Collection",At.MULTI_LAYER,"Route Layer"];const{portal:s}=t,n={messages:[],origin:"portal-item",portal:s,url:null,writtenProperties:[]};await s.signIn();const p=r?.folder,a=this.write(void 0,n);return await s.user.addItem({item:t,folder:p,data:a}),this.portalItem=t,Ot(n),n.portalItem=t,t}async solve(e,r){ue(this.stops),ue(this.pointBarriers),ue(this.polylineBarriers),ue(this.polygonBarriers);const t=e?.stops??this.stops,s=e?.pointBarriers??Be(this.pointBarriers),n=e?.polylineBarriers??Be(this.polylineBarriers),p=e?.polygonBarriers??Be(this.polygonBarriers);if(t==null)throw new k("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((lr(t)||ur(t))&&t.features.length<2||C.isCollection(t)&&t.length<2)throw new k("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(C.isCollection(t))for(const d of t)d.routeName=null;const a=e?.apiKey,{checksum:y,url:g}=this,N=await this._getServiceDescription(g,a,r),m=e?.travelMode??N.defaultTravelMode,l=e?.accumulateAttributes??[];m&&(l.push(m.distanceAttributeName),m.timeAttributeName&&l.push(m.timeAttributeName));const h={accumulateAttributes:l,checksum:y,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:s,polylineBarriers:n,polygonBarriers:p,preserveObjectID:!0,returnBarriers:!!s,returnDirections:!0,returnPolygonBarriers:!!p,returnPolylineBarriers:!!n,returnRoutes:!0,returnStops:!0,stops:t},T=u.from(e??{});let w;T.set(h);try{w=await tr(g,T,r)}catch(d){throw Ct(d)?d:new k("routelayer:failed-route-request","the routing request failed",{error:d})}const b=this._toRouteLayerSolution(w);return this._isOverridden("title")||(this.title=b.routeInfo.name??"Route"),this._populatePortalFields(b,N,T),b}update(e){const{checksum:r,directionLines:t,directionPoints:s,pointBarriers:n,polygonBarriers:p,polylineBarriers:a,routeInfo:y,stops:g}=e;pe(g,this.stops)?dr(g,this.stops):this.set({stops:g}),pe(n,this.pointBarriers)?pr(n,this.pointBarriers):this.set({pointBarriers:n}),pe(a,this.polylineBarriers)?cr(a,this.polylineBarriers):this.set({polylineBarriers:a}),pe(p,this.polygonBarriers)?yr(p,this.polygonBarriers):this.set({polygonBarriers:p}),this.set({checksum:r}),this._set("directionLines",t),this._set("directionPoints",s),this._set("routeInfo",y),y.geometry!=null&&(this.spatialReference=y.geometry.spatialReference)}_getNetworkFeatures(e,r,t,s){const n=ce(e)?e.layers:e.featureCollection?.layers,p=n?.find((b=>b.layerDefinition.name===r));if(p==null)return new C;const{layerDefinition:a,popupInfo:y,featureSet:g}=p,N=a.drawingInfo.renderer,{features:m}=g,l=g.spatialReference??a.spatialReference??a.extent.spatialReference??$e,h=N&&jt(N),T=W.fromJSON(l),w=m.map((b=>{const d=Y.fromJSON(b);d.geometry!=null&&b.geometry!=null&&b.geometry.spatialReference==null&&(d.geometry.spatialReference=T);const S=t(d);return S.symbol??=h?.getSymbol(d)??this._getNetworkSymbol(r),S.popupTemplate??=y&&Dt.fromJSON(y),S}));return s&&w.some((({symbol:b})=>!b))&&s(w),new C(w)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,r,t){if(this._cachedServiceDescription!=null&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const s=await Ve(e,r,t);return this._cachedServiceDescription={serviceDescription:s,url:e},s}_setStopSymbol(e){if(!e||!e.length||!this.defaultSymbols.stops||e.every((({symbol:l})=>!!l)))return;const{first:r,last:t,middle:s,unlocated:n,waypoint:p,break:a}=this.defaultSymbols.stops,y=e.map((({sequence:l})=>l)).filter((l=>l!=null)),g=e.length===y.length;if(!this.routeInfo&&!g||e.length===1)return void e.forEach(((l,h)=>{switch(h){case 0:l.symbol=r;break;case e.length-1:l.symbol=t;break;default:l.symbol=s}}));const N=Math.min(...y),m=Math.max(...y);for(const l of e)l.sequence!==N?l.sequence!==m?this.routeInfo&&l.status!=="ok"&&l.status!=="not-located-on-closest"?l.symbol=n:l.locationType!=="waypoint"?l.locationType!=="break"?l.symbol=s:l.symbol=a:l.symbol=p:l.symbol=t:l.symbol=r}_toRouteLayerSolution(e){const{checksum:r,routeResults:t}=e,s=t[0].stops?.map((l=>ie.fromJSON(l.toJSON())));this._setStopSymbol(s);const n=new Ge(s),p=new Je(e.polygonBarriers?.map((l=>{const h=oe.fromJSON(l.toJSON());return h.symbol=this.defaultSymbols.polygonBarriers,h}))),a=new Ee(e.polylineBarriers?.map((l=>{const h=se.fromJSON(l.toJSON());return h.symbol=this.defaultSymbols.polylineBarriers,h}))),y=new Fe(e.pointBarriers?.map((l=>{const h=re.fromJSON(l.toJSON());return h.symbol=this.defaultSymbols.pointBarriers,h}))),g=t[0].route?.toJSON(),N=be.fromJSON(g);N.symbol=this.defaultSymbols.routeInfo;const m=new hr(t[0].directionPoints?.features.map((l=>{const h=de.fromJSON(l.toJSON());return h.symbol=this.defaultSymbols.directionPoints,h})));return{checksum:r,directionLines:new fr(t[0].directionLines?.features.map((l=>{const h=ye.fromJSON(l.toJSON());return h.symbol=this.defaultSymbols.directionLines,h}))),directionPoints:m,pointBarriers:y,polygonBarriers:p,polylineBarriers:a,routeInfo:N,stops:n}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",ye.fields,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",de.fields,"DirectionPoints","Direction Points")}_writeNetworkFeatures(e,r,t,s,n,p){if(!e?.length)return null;const a=this.spatialReference.toJSON(),{fullExtent:y,maxScale:g,minScale:N}=this;return{featureSet:{features:e.toArray().map((m=>mr(m))),geometryType:t,spatialReference:a},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:r!=null?r.toJSON():Ae(t)}},extent:y.toJSON(),fields:s,geometryType:t,hasM:!1,hasZ:!1,maxScale:g,minScale:N,name:n,objectIdField:"ObjectID",spatialReference:a,title:p,type:"Feature Layer",typeIdField:""}}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",re.fields,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",oe.fields,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",se.fields,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures(this.routeInfo!=null?new C([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",be.fields,"RouteInfo","Route Details")}_writeStops(){const e=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",ie.fields,"Stops","Stops");if(e==null)return null;const{stops:r}=this.defaultSymbols,t=r?.first?.toJSON(),s=r?.middle?.toJSON(),n=r?.last?.toJSON();return e.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:s,uniqueValueInfos:[{value:"1",symbol:t,label:"First Stop"},{value:`${this.stops.length}`,symbol:n,label:"Last Stop"}]},e}_populatePortalFields(e,r,t){const s=r.networkDataset?.networkAttributes,n=s?.filter((({usageType:c})=>c==="cost"))??[],p=t.travelMode??r.defaultTravelMode;if(p==null)return void Ne.getLogger(this).warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:a,distanceAttributeName:y}=p,g=n.find((({name:c})=>c===a)),N=n.find((({name:c})=>c===y)),m=t.travelMode?.impedanceAttributeName??t.impedanceAttribute??r.impedance,l=g?.units,h=N?.units;if(!l||!h)throw new k("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const T=t.directionsLanguage??r.directionsLanguage,w=t.accumulateAttributes??r.accumulateAttributeNames??[],b=new Set(n.filter((({name:c})=>c===a||c===y||c===m||c!=null&&w.includes(c))).map((({name:c})=>c))),d=c=>{for(const De in c)b.has(De)||delete c[De]};for(const c of e.pointBarriers)c.costs!=null&&(c.addedCost=c.costs[m]??0,d(c.costs));for(const c of e.polygonBarriers)c.costs!=null&&(c.scaleFactor=c.costs[m]??1,d(c.costs));for(const c of e.polylineBarriers)c.costs!=null&&(c.scaleFactor=c.costs[m]??1,d(c.costs));const{routeInfo:S}=e,{findBestSequence:f,preserveFirstStop:P,preserveLastStop:B,startTimeIsUTC:j,timeWindowsAreUTC:G}=t;S.analysisSettings=new Ft({accumulateAttributes:w,directionsLanguage:T,findBestSequence:f,preserveFirstStop:P,preserveLastStop:B,startTimeIsUTC:j,timeWindowsAreUTC:G,travelMode:p}),S.totalDuration=H(S.totalCosts?.[a]??0,l),S.totalDistance=Te(S.totalCosts?.[y]??0,h),S.totalLateDuration=H(S.totalViolations?.[a]??0,l),S.totalWaitDuration=H(S.totalWait?.[a]??0,l),S.totalCosts!=null&&d(S.totalCosts),S.totalViolations!=null&&d(S.totalViolations),S.totalWait!=null&&d(S.totalWait);for(const c of e.stops)c.serviceCosts!=null&&(c.serviceDuration=H(c.serviceCosts[a]??0,l),c.serviceDistance=Te(c.serviceCosts[y]??0,h),d(c.serviceCosts)),c.cumulativeCosts!=null&&(c.cumulativeDuration=H(c.cumulativeCosts[a]??0,l),c.cumulativeDistance=Te(c.cumulativeCosts[y]??0,h),d(c.cumulativeCosts)),c.violations!=null&&(c.lateDuration=H(c.violations[a]??0,l),d(c.violations)),c.wait!=null&&(c.waitDuration=H(c.wait[a]??0,l),d(c.wait))}};o([i({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:this.portalItem==null}}}}}}})],v.prototype,"_featureCollection",void 0),o([q(["web-map","portal-item"],"_featureCollection")],v.prototype,"writeFeatureCollectionWebmap",null),o([i({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:this.portalItem!=null}}}}}}})],v.prototype,"_type",void 0),o([i({type:String})],v.prototype,"checksum",void 0),o([i({nonNullable:!0,type:x})],v.prototype,"defaultSymbols",void 0),o([i({readOnly:!0})],v.prototype,"directionLines",void 0),o([R(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],v.prototype,"readDirectionLines",null),o([i({readOnly:!0})],v.prototype,"directionPoints",void 0),o([R(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],v.prototype,"readDirectionPoints",null),o([i({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],v.prototype,"featureCollectionType",void 0),o([i({readOnly:!0})],v.prototype,"fullExtent",null),o([i({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],v.prototype,"legendEnabled",void 0),o([i({type:["show","hide"]})],v.prototype,"listMode",void 0),o([i({type:Number,nonNullable:!0,json:{write:!1}})],v.prototype,"maxScale",void 0),o([R(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],v.prototype,"readMaxScale",null),o([i({type:Number,nonNullable:!0,json:{write:!1}})],v.prototype,"minScale",void 0),o([R(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],v.prototype,"readMinScale",null),o([i({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],v.prototype,"operationalLayerType",void 0),o([i({nonNullable:!0,type:C.ofType(re)})],v.prototype,"pointBarriers",void 0),o([R(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],v.prototype,"readPointBarriers",null),o([i({nonNullable:!0,type:C.ofType(oe)})],v.prototype,"polygonBarriers",void 0),o([R(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],v.prototype,"readPolygonBarriers",null),o([i({nonNullable:!0,type:C.ofType(se)})],v.prototype,"polylineBarriers",void 0),o([R(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],v.prototype,"readPolylineBarriers",null),o([i({readOnly:!0})],v.prototype,"routeInfo",void 0),o([R(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],v.prototype,"readRouteInfo",null),o([i({type:W})],v.prototype,"spatialReference",void 0),o([R(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],v.prototype,"readSpatialReference",null),o([i({nonNullable:!0,type:C.ofType(ie)})],v.prototype,"stops",void 0),o([R(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],v.prototype,"readStops",null),o([i()],v.prototype,"title",null),o([i({readOnly:!0,json:{read:!1}})],v.prototype,"type",void 0),o([i()],v.prototype,"url",null),v=o([O("esri.layers.RouteLayer")],v);const Dr=v;export{Dr as default};
