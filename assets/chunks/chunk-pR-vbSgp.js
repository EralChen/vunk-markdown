import{fa as A,fj as I,fc as R,s as E,fb as D,id as Q,ie as Z,ig as N,fd as P,ih as G,fe as M,i7 as b,g6 as B,aF as z,v as L,ff as H,B as J,fh as U,i8 as w,fg as V,H as W,f9 as Y,gV as $,ii as K,ij as X,ik as ee}from"./chunk-CuaFhuP3.js";import{u as te}from"./chunk-BM3PqBtH.js";import{f as ie}from"./chunk-BkThvvXm.js";import{L as se}from"./chunk-Cu9wAREs.js";import{S as re,E as ne,d as T,f as j,p as F,h as O}from"./chunk-Dd-G_elE.js";import"./chunk-Dpk1TJd9.js";import"./chunk-iOPJXyP1.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-DGmg3LSc.js";import"./chunk-DeirovzM.js";import"./chunk-BLFAeZA-.js";import"./chunk-CgEmLg0e.js";import"./chunk-CcGqYjy7.js";import"./chunk-Cvjt5nOV.js";import"./chunk-C7WHcUmR.js";import"./chunk-DGkpYqI6.js";const ae={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsQueryAttachmentOrderByFields:!1,supportsQueryBins:!0,supportsQueryWithCacheHint:!0,supportsQueryWithDistance:!0,supportsQueryWithResultType:!0,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0},queryBinsCapabilities:re};class nt{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._createDefaultAttributes=null}async load(e,t={}){this._loadOptions={url:e.url,customParameters:e.customParameters};const s=[],[i]=await Promise.all([e.url?this._fetch(t?.signal):null,this._checkProjection(e.spatialReference)]),r=A(i,{geometryType:e.geometryType}),u=e.fields||r.fields||[],l=e.hasZ!=null?e.hasZ:r.hasZ,p=r.geometryType;let c=e.objectIdField||r.objectIdFieldName||"__OBJECTID";const f=e.spatialReference||I;let o=e.timeInfo;u===r.fields&&r.unknownFields.length>0&&s.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:r.unknownFields}});const y=new R(u);let n=y.get(c);n?(n.type!=="esriFieldTypeString"&&(n.type="esriFieldTypeOID"),n.editable=!1,n.nullable=!1,c=n.name):(n={alias:c,name:c,type:r.objectIdFieldType==="string"?"esriFieldTypeString":"esriFieldTypeOID",editable:!1,nullable:!1},u.unshift(n));const d={};for(const a of u){if(a.name==null&&(a.name=a.alias),a.alias==null&&(a.alias=a.name),!a.name)throw new E("geojson-layer:invalid-field-name","field name is missing",{field:a});if(!D.jsonValues.includes(a.type))throw new E("geojson-layer:invalid-field-type",`invalid type for field "${a.name}"`,{field:a});if(a.name!==n.name){const _=Q(a);_!==void 0&&(d[a.name]=_)}a.length==null&&(a.length=Z(a))}if(o){if(o.startTimeField){const a=y.get(o.startTimeField);a?(o.startTimeField=a.name,a.type="esriFieldTypeDate"):o.startTimeField=null}if(o.endTimeField){const a=y.get(o.endTimeField);a?(o.endTimeField=a.name,a.type="esriFieldTypeDate"):o.endTimeField=null}if(o.trackIdField){const a=y.get(o.trackIdField);a?o.trackIdField=a.name:(o.trackIdField=null,s.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:o}}))}o.startTimeField||o.endTimeField||(s.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:o}}),o=null)}const h=p?M(p):void 0,m=y.dateFields.length?{timeZoneIANA:P}:null,g={warnings:s,featureErrors:[],layerDefinition:{...ae,drawingInfo:h??void 0,templates:N(d),extent:void 0,geometryType:p,objectIdField:c,fields:u,hasZ:!!l,timeInfo:o,dateFieldsTimeReference:m}},k={type:"object-id",fieldName:c};this._queryEngine=new se({fieldsIndex:R.fromLayerJSON({fields:u,timeInfo:o,dateFieldsTimeReference:m}),geometryType:p,hasM:!1,hasZ:l,featureIdInfo:k,spatialReference:f,timeInfo:o,featureStore:new ie({geometryType:p,hasM:!1,hasZ:l})});const q=this._queryEngine.fieldsIndex.requiredFields.indexOf(n);q>-1&&this._queryEngine.fieldsIndex.requiredFields.splice(q,1),this._createDefaultAttributes=G(d,c);const x=await this._createFeatures(i);this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,x);const C=this._normalizeFeatures(x,g.featureErrors);this._queryEngine.featureStore.addMany(C);const{fullExtent:v,timeExtent:S}=await this._queryEngine.fetchRecomputedExtents();if(g.layerDefinition.extent=v,S){const{start:a,end:_}=S;g.layerDefinition.timeInfo.timeExtent=[a,_]}return g}async applyEdits(e){const{spatialReference:t,geometryType:s}=this._queryEngine;return await Promise.all([ne(t,s),b(e.adds,t),b(e.updates,t)]),await this._waitSnapshotComplete(),this._applyEdits(e)}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),te(this._queryEngine,e,t.signal)}async queryAttributeBins(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(e,t.signal)}async refresh(e){this._loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=B(this._snapshotFeatures),this._snapshotTask.promise.then((i=>{this._queryEngine.featureStore.clear(),this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,i);const r=this._normalizeFeatures(i);r&&this._queryEngine.featureStore.addMany(r)}),(i=>{this._queryEngine.featureStore.clear(),z(i)||L.getLogger("esri.layers.GeoJSONLayer").error(new E("geojson-layer:refresh","An error occurred during refresh",{error:i}))})),await this._waitSnapshotComplete();const{fullExtent:t,timeExtent:s}=await this._queryEngine.fetchRecomputedExtents();return{extent:t,timeExtent:s}}async _createFeatures(e){if(e==null)return[];const{geometryType:t,hasZ:s,objectIdField:i}=this._queryEngine,r=H(e,{geometryType:t,hasZ:s,objectIdField:i});if(!J(this._queryEngine.spatialReference,I))for(const u of r)u.geometry!=null&&(u.geometry=U(w(V(u.geometry,this._queryEngine.geometryType,this._queryEngine.hasZ,!1),I,this._queryEngine.spatialReference)));return r}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(e){const{url:t,customParameters:s}=this._loadOptions,i=(await W(t??"",{responseType:"json",query:{...s},signal:e})).data;return Y(i),i}_normalizeFeatures(e,t){const{objectIdField:s,fieldsIndex:i}=this._queryEngine,r=[];for(const u of e){const l=this._createDefaultAttributes(),p=T(i,l,u.attributes,!0);p?t?.push(p):(this._assignObjectId(l,u.attributes,!0),u.attributes=l,u.objectId=l[s],r.push(u))}return r}async _applyEdits(e){const{adds:t,updates:s,deletes:i}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t?.length&&this._applyAddEdits(r,t),s?.length&&this._applyUpdateEdits(r,s),i?.length){for(const p of i)r.deleteResults.push(j(p));this._queryEngine.featureStore.removeManyById(i)}const{fullExtent:u,timeExtent:l}=await this._queryEngine.fetchRecomputedExtents();return{extent:u,timeExtent:l,featureEditResults:r}}_applyAddEdits(e,t){const{addResults:s}=e,{geometryType:i,hasM:r,hasZ:u,objectIdField:l,spatialReference:p,featureStore:c,fieldsIndex:f}=this._queryEngine,o=[],y={type:"object-id",fieldName:l};for(const n of t){if(n.geometry&&i!==$(n.geometry)){s.push(F("Incorrect geometry type."));continue}const d=this._createDefaultAttributes(),h=T(f,d,n.attributes);if(h)s.push(h);else{if(this._assignObjectId(d,n.attributes),n.attributes=d,n.uid!=null){const m=n.attributes[l];e.uidToObjectId[n.uid]=m}if(n.geometry!=null){const m=n.geometry.spatialReference??p;n.geometry=w(O(n.geometry,m),m,p)}o.push(n),s.push(j(n.attributes[l]))}}c.addMany(K([],o,i,u,r,y))}_applyUpdateEdits({updateResults:e},t){const{geometryType:s,hasM:i,hasZ:r,objectIdField:u,spatialReference:l,featureStore:p,fieldsIndex:c}=this._queryEngine,f={type:"object-id",fieldName:u};for(const o of t){const{attributes:y,geometry:n}=o,d=y?.[u];if(d==null){e.push(F(`Identifier field ${u} missing`));continue}if(!p.has(d)){e.push(F(`Feature with object id ${d} missing`));continue}const h=X(p.getFeature(d),s,r,i);if(n!=null){if(s!==$(n)){e.push(F("Incorrect geometry type."));continue}const m=n.spatialReference??l;h.geometry=w(O(n,m),m,l)}if(y){const m=T(c,h.attributes,y);if(m){e.push(m);continue}}p.add(ee(h,s,r,i,f)),e.push(j(d))}}_createObjectIdGenerator(e,t){const s=e.fieldsIndex.get(e.objectIdField);if(s.type==="esriFieldTypeString")return()=>s.name+"-"+Date.now().toString(16);let i=Number.NEGATIVE_INFINITY;for(const r of t)r.objectId&&(i=Math.max(i,r.objectId));return i=Math.max(0,i)+1,()=>i++}_assignObjectId(e,t,s=!1){const i=this._queryEngine.objectIdField;e[i]=s&&i in t?t[i]:this._objectIdGenerator()}async _checkProjection(e){try{await b(I,e)}catch{throw new E("geojson-layer","Projection not supported")}}}export{nt as default};
