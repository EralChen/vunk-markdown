import{dI as s,dK as n,fw as a,s as l,aI as y,af as i,ag as p,ai as u}from"./chunk-CuaFhuP3.js";import"./chunk-Dpk1TJd9.js";import"./chunk-iOPJXyP1.js";import"./chunk-DGmg3LSc.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */let r=class extends s(n(y)){constructor(o){super(o),this.resourceInfo=null,this.type="unknown"}initialize(){this.addResolvingPromise(new Promise(((o,t)=>{a((()=>{const e=this.resourceInfo&&(this.resourceInfo.layerType||this.resourceInfo.type);let m="Unknown layer type";e&&(m+=" "+e),t(new l("layer:unknown-layer-type",m,{layerType:e}))}))})))}read(o,t){super.read({resourceInfo:o},t)}write(o,t){return null}};i([p({readOnly:!0})],r.prototype,"resourceInfo",void 0),i([p({type:["show","hide"]})],r.prototype,"listMode",void 0),i([p({json:{read:!1},readOnly:!0,value:"unknown"})],r.prototype,"type",void 0),r=i([u("esri.layers.UnknownLayer")],r);const _=r;export{_ as default};
