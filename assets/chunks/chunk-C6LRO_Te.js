import{lU as l,gd as f,lV as g,fK as x,s as T,di as I,aK as w,ar as z,d7 as R,gL as S,fU as G,lW as P,dg as v,aj as p,ak as y,am as O}from"./chunk-XGpVqsM_.js";import{b as $}from"./chunk-EbsByUpQ.js";import{l as L}from"./chunk-CTxi0THw.js";import{p as C}from"./chunk-D8yGbEEY.js";import{m as U,f as j,p as E,_ as F,g as V,s as A,l as _}from"./chunk-C77ZAmPX.js";import{f as W}from"./chunk-2MJ1REne.js";import"./chunk-DyqHK6XP.js";import"./chunk-Dix477Sg.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CrMA_peF.js";import"./chunk-D0Rb7foR.js";import"./chunk-BS6MVtAd.js";import"./chunk-B_0s3AtF.js";import"./chunk-aL52J51R.js";const b={bandCount:3,minOutput:0,maxOutput:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class k{constructor(e,t,r=null,o=null){this.lij=e,this.type="raster-tile",this._memoryUsed=null,this._source=null,this._symbolizerParameters=null,this._bandIds=null,this._interpolation=null,this._dirty=!1,this._transformGrid=null,this.isRendereredSource=!1,this.symbolizerRenderer=null,this.rawPixelData=null,this.opacity=1,this.source=t,this.width=r||t.width,this.height=o||t.height}get source(){return this._source}set source(e){this._source=e,this._rasterTexture=l(this._rasterTexture),this._memoryUsed=null}get symbolizerParameters(){return this.isRendereredSource?{...b,maxCutOff:[1,1,1],factor:[1,1,1]}:this._symbolizerParameters||b}set symbolizerParameters(e){this._symbolizerParameters=e}get bandIds(){return this._bandIds}set bandIds(e){e!=null&&e.length>0?this._bandIds&&e.every(((t,r)=>!!this._bandIds?.[r]&&t===this._bandIds[r]))||(this._bandIds=e,this._dirty=!0):this._bandIds=null}get interpolation(){return this._interpolation||"nearest"}set interpolation(e){if(this._interpolation=e,this._rasterTexture!=null){const t=this._getRasterTextureInterpolation(e);this._rasterTexture.setSamplingMode(t==="bilinear"?f.LINEAR:f.NEAREST)}}get transformGrid(){return this._transformGrid}set transformGrid(e){this._transformGrid=e,this._transformGridTexture=l(this._transformGridTexture),this._memoryUsed=null}bind(e){return!!(this.source&&this.source.pixels&&this.source.pixels.length>0)&&((this._rasterTexture==null||this._dirty)&&this._updateRasterTexture(e,this.bandIds),this._rasterTexture!=null&&(this._updateColormapTexture(e),this.transformGrid&&this._transformGridTexture==null&&(this._transformGridTexture=U(e,this.transformGrid))),!0)}getUniforms(e){const{symbolizerParameters:t,transformGrid:r,width:o,height:s,opacity:u}=this,d=j(r,[o,s],[this.source.width,this.source.height],u),c=E(t.colormap,t.colormapOffset),n=this.symbolizerParameters.type==="stretch"?F(this.symbolizerParameters):null,m=this.symbolizerParameters.type==="hillshade"?V(this.symbolizerParameters):null,a=e.emptyTexture;return new g(d,c,n||m,this._rasterTexture??a,this._transformGridTexture??a,this._colormapTexture??a)}get isBilinearWithStretchColorRamp(){const{symbolizerParameters:e}=this;return this.interpolation==="bilinear"&&e.colormap!=null&&e.type==="stretch"}get memoryUsage(){if(this._memoryUsed==null){const e=[this._rasterTexture,this._transformGridTexture,this._colormapTexture];this._memoryUsed=e.map((t=>t!=null?t.descriptor.width*t.descriptor.height*4:0)).reduce(((t,r)=>t+r),0)}return this._memoryUsed}release(){return this._rasterTexture=l(this._rasterTexture),this._transformGridTexture=l(this._transformGridTexture),this._colormapTexture=l(this._colormapTexture),this.source=null,this.transformGrid=null,this.rawPixelData=null,!0}_updateRasterTexture(e,t){const r=this.source?this.source.extractBands(t):null;if(!(r?.pixels&&r.pixels.length>0))return void(this._rasterTexture=l(this._rasterTexture));const o=t==null&&this.bandIds==null||t!=null&&this.bandIds!=null&&t.join("")===this.bandIds.join("");if(this._rasterTexture!=null&&o)return;this._rasterTexture=l(this._rasterTexture);const s=this._getRasterTextureInterpolation(this.interpolation);this._rasterTexture=A(e,r,s,this.isRendereredSource||this.hasStretchTypeNone())}hasStretchTypeNone(){return"stretchType"in this.symbolizerParameters&&this.symbolizerParameters.stretchType==="none"&&!this.symbolizerParameters.useGamma&&this.source.pixelType==="u8"}_getRasterTextureInterpolation(e){return this.symbolizerParameters.type==="lut"||e==="nearest"||e==="majority"||this.isBilinearWithStretchColorRamp?"nearest":"bilinear"}_updateColormapTexture(e){const t=this._colormap,r=this.symbolizerParameters.colormap;return r?t?r.length!==t.length||r.some(((o,s)=>o!==t[s]))?(this._colormapTexture=l(this._colormapTexture),this._colormapTexture=_(e,r),void(this._colormap=r)):void 0:(this._colormapTexture=_(e,r),void(this._colormap=r)):(this._colormapTexture=l(this._colormapTexture),void(this._colormap=null))}}let h=class extends W(x(C(L(v)))){constructor(){super(...arguments),this.type="imagery-tile-3d",this._isAlignedMapTile=!0,this._flowSubView=null}initialize(){this.layer.increaseRasterJobHandlerUsage(),this.fullExtent==null&&this.addResolvingPromise(Promise.reject(new T("layerview:spatial-reference-incompatible","The layer extent cannot be projected to the view's spatial reference",{layer:this.layer})));const i=I((()=>this.view?.basemapTerrain?.tilingSchemeLocked)).then((()=>{const e=this.view.basemapTerrain.tilingScheme,t=this.layer.tileInfo;this._isAlignedMapTile=["png","png24","png32","jpg","mixed"].includes(t.format)&&e.compatibleWith(t),this.tileInfo=this._isAlignedMapTile?t:e.toTileInfo(),this._updatingHandles.add((()=>[this.layer.renderer,this.layer.interpolation,this.layer.bandIds,this.layer.multidimensionalDefinition,this.layer.multidimensionalSubset,this.layer.rasterFunction,this.timeExtent]),(()=>this.refresh()))}));this.addResolvingPromise(i),this.addHandles(w((()=>this.layer.renderer),(e=>this._setSubView(e)),z))}destroy(){this.layer.decreaseRasterJobHandlerUsage(),this._flowSubView?.destroy()}_setSubView(i){if(this.layer.type==="wcs"||!R("enable-feature:3d-flow"))return;const e=i?.type==="flow",t=this._flowSubView;e&&t!=null||(t?.destroy(),this._flowSubView=e?new $({layerView:this}):null)}get _blankTile(){const i=document.createElement("canvas"),e=i.getContext("2d"),[t,r]=this.tileInfo.size;return i.width=t,i.height=r,e.clearRect(0,0,t,r),e.getImageData(0,0,t,r)}get imageFormatIsOpaque(){return this.layer.tileInfo.format==="jpg"}get hasMixedImageFormats(){return this.layer.tileInfo.format==="mixed"}get dataLevelRange(){const i=this.layer.tileInfo,e=this.tileInfo.lodAt(0)?.scale,t=this.layer.tileInfo.lodAt(i.lods.length-1)?.scale;return this.levelRangeFromScaleRange(e,t)}_getFullExtent(){return S(this.layer.serviceRasterInfo,this.view.basemapTerrain?.spatialReference??this.view.spatialReference)}async fetchTile(i,e){const t=this.tileInfo,r=this._canSymbolizeInWebGL(),o={tileInfo:t,requestRawData:r,signal:e.signal,timeExtent:this.timeExtent,requestAsImageElement:this._isAlignedMapTile,noClip:!1},{layer:s}=this,[u,d,c]=i,n=await s.fetchTile(u,d,c,o);if(n instanceof HTMLImageElement)return n;let m=n?.pixelBlock;if(m==null)return this._blankTile;if(!r&&(m=await s.applyRenderer(n),m==null))return this._blankTile;const a=new k([u,d,c],m,t.size[0],t.size[1]);return r?(a.symbolizerRenderer=s.symbolizer.rendererJSON,a.symbolizerParameters=s.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(u)),a.transformGrid=n.transformGrid,a.bandIds=s.bandIds):(a.isRendereredSource=!0,a.bandIds=null),a.interpolation=s.interpolation,a}_getSymbolizerOptions(i){const e=this.tileInfo.lodAt(i).resolution;return{pixelBlock:null,isGCS:this.view.basemapTerrain?.spatialReference!=null?this.view.basemapTerrain.spatialReference.isGeographic:this.view.spatialReference.isGeographic,resolution:{x:e,y:e},bandIds:this.layer.bandIds}}ensureSymbolizerParameters(i){this._canSymbolizeInWebGL()&&JSON.stringify(i.symbolizerRenderer)!==JSON.stringify(this.layer.symbolizer.rendererJSON)&&(i.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(i.lij[0])))}createFetchPopupFeaturesQueryGeometry(i,e){return G(i,e,this.view)}refresh(){this.emit("data-changed")}async doRefresh(){this.suspended||(await this._flowSubView?.doRefresh(),this.emit("data-changed"))}isUpdating(){return this._flowSubView?.updating??!1}_canSymbolizeInWebGL(){const i=P(),{symbolizer:e}=this.layer,t=e.lookup.colormapLut?.indexedColormap,r=!!this.layer.rasterFunction?.hasClipFunction,o=t&&t.length>4*(i.maxTextureSize||4096);return e.canRenderInWebGL&&!o&&!r}get test(){}};p([y({readOnly:!0})],h.prototype,"_blankTile",null),p([y({readOnly:!0})],h.prototype,"imageFormatIsOpaque",null),p([y({readOnly:!0})],h.prototype,"hasMixedImageFormats",null),p([y({readOnly:!0})],h.prototype,"dataLevelRange",null),h=p([O("esri.views.3d.layers.ImageryTileLayerView3D")],h);const Fe=h;export{Fe as default};
