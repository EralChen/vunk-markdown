import{lU as i,lV as n,lW as l,lX as _,lY as p,lZ as c,l_ as u,l$ as f}from"./chunk-CuaFhuP3.js";import{glslifyDefineMap as d}from"./chunk-Cb59EICm.js";const x=s=>{let t="";t+=s[0].toUpperCase();for(let e=1;e<s.length;e++){const r=s[e];r===r.toUpperCase()?(t+="_",t+=r):t+=r.toUpperCase()}return t},b=s=>{const t={};for(const e in s)t[x(e)]=s[e];return d(t)},v=(s,t,e,r)=>{const o=s+s.slice(Math.max(0,s.lastIndexOf("/"))),h=t+t.slice(Math.max(0,t.lastIndexOf("/"))),a=b(r);return{attributes:e,shaders:{vertexShader:a+i(`${o}.vert`),fragmentShader:a+i(`${h}.frag`)}}};let w=class{constructor(t,e){this._rctx=t,this._attributes=[{name:"position",offset:0,type:n.SHORT,count:2}],this.layout={hash:l(this._attributes),attributes:this._attributes,stride:4},this._vertexBuffer=_.createVertex(t,p.STATIC_DRAW,new Uint16Array(e)),this._vao=new c(t,new Map([["a_position",0]]),new Map([["geometry",[new u("a_position",2,n.SHORT,0,4)]]]),new Map([["geometry",this._vertexBuffer]])),this._count=e.length/2}bind(){this._rctx.bindVAO(this._vao)}unbind(){this._rctx.bindVAO(null)}dispose(){this._vao.dispose()}draw(){this._rctx.bindVAO(this._vao),this._rctx.drawArrays(f.TRIANGLE_STRIP,0,this._count)}};export{w as n,v as o};
