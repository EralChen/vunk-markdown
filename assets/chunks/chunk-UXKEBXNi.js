import{cj as Ue,b3 as g,b4 as se,cE as B,ck as z,gs as We,xB as Ye,my as et,Jg as tt,wm as je,Jh as it,kd as pe,uA as st,eh as nt,ur as Y,bp as ue,kw as at,c3 as J,Ji as ne,jM as rt,Jj as ce,cW as ot,cr as lt,bo as ge,c$ as I,b5 as ee,Jk as ht,bl as dt,vU as pt,Fq as me,Av as _e,Jl as ye,Jm as ut,uz as fe,d0 as ct,Jn as gt,kc as U,HD as mt,ao as de,aG as b,aH as ae,af as o,ag as h,ai as E,aY as _t,eI as ve,Fw as yt,aM as H,HC as ft,v as vt,$ as N,Jo as qe,zq as wt,HO as Vt,HQ as St,HS as Mt,HR as Pt,HU as Lt,b8 as Q,HN as we,I_ as $t,HV as Ve,HT as bt,HY as Ct,HZ as Dt,H_ as Se,H$ as xt,I1 as At,I2 as Ot,I3 as It,Ip as Rt,I5 as Gt,I7 as Tt,rF as zt,I8 as Ht,u2 as Et,I9 as G,qD as te,IK as ie,rL as Me,Iu as kt,Ib as Ft,wU as Be,aZ as Z,Ic as Ut,a_ as A,Bz as Wt,a$ as Pe,b0 as Le,rB as jt,bg as qt,bi as $e,yQ as Bt,z1 as K,yO as re,DD as Jt,nI as be,j4 as Nt,zA as Qt,an as Zt,az as V,Jp as Kt,hF as Ce,nE as Xt,zB as Yt,kz as De,cL as ei,mj as ti,Jq as ii,aq as xe,am as si,bV as W,wx as ni,bW as Ae,d5 as ai,nQ as Oe,rf as ri,Jr as oi,Js as li,bR as hi,zt as di}from"./chunk-CuaFhuP3.js";import"./chunk-Dpk1TJd9.js";import{o as pi,s as ui,m as ci,f as gi,d as mi}from"./chunk-BrlCBmiQ.js";import{g as _i,j as yi,p as fi,m as vi,h as wi,e as oe,w as Ie}from"./chunk-DlcgHEWm.js";import{t as Vi,c as Si,d as T,f as Re,a as Ge,e as Te}from"./chunk-bnxLL64Y.js";import{E as le,p as Je,P as Ne,b as Mi}from"./chunk-BlkaH78C.js";import{g as Qe}from"./chunk-e6uPcz82.js";import{f as ze,_ as Pi,m as Li}from"./chunk-1qiloNWK.js";import{c as $i}from"./chunk-6vejsciN.js";import{r as bi}from"./chunk-B6pR6iCC.js";import{_ as Ci}from"./chunk-iOPJXyP1.js";import{h as Di}from"./chunk-CCavR4OV.js";import{t as xi}from"./chunk-DmxaQ-k8.js";import{R as Ai}from"./chunk-DM4YYOBI.js";import{z as Oi,B as Ii}from"./chunk-B4acbyk_.js";import{c as Ri}from"./chunk-DpLds6Zo.js";import{i as Ze,p as Gi}from"./chunk-DBIOSom4.js";import{o as Ti}from"./chunk-FQCx7Mu7.js";import{e as zi}from"./chunk-lR2hMWGP.js";import{f as Hi}from"./chunk-DjONl_oV.js";import{a as Ei}from"./chunk-mcm2HLgd.js";import{p as ki}from"./chunk-FFnG0-C6.js";import"./chunk-DGmg3LSc.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CpdoPF2G.js";import"./chunk-DwTaIoG6.js";import"./chunk-Cwyf4XaO.js";import"./chunk-Byd3PYVW.js";import"./chunk-B3xdXfS3.js";import"./chunk-DZlnYJxS.js";import"./chunk-CPxyAGgv.js";import"./chunk-CL25suxw.js";import"./chunk-BQFtbDTt.js";import"./chunk-BFsTrzlt.js";function He(t,e,i,s,n){Ue(j,t),se(q,t,e),B(j,i,j,n),B(q,i,q,n),z(s,q,j),We(s,s)}const j=g(),q=g();class Fi{get numVertices(){return this._length}get hasStagedVertex(){return this._lastCursorPoint!=null}constructor(e,i,s){this._sceneView=e,this._geodesicAreaMeasurementUtils=i,this._geodesicLengthMeasurementUtils=s,this.validMeasurement=!1,this.positionsWorld=[],this.positionsRender=[],this.positionsFittedWorld=[],this.positionsFittedRender=[],this.positionsGeodesic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=g(),this.areaCentroidRenderCoords=g(),this.geodesicAreaCentroidRenderCoords=g(),this.fittingMode=null,this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=g(),this._planeWorldCoords=Ye(),this._worldUp=g(),this._worldTangent=g(),this._frame=[g(),g(),g()],this._lastPathVersion=-1,this._lastCursorPoint=null,this._mode=null,this._tempU=g(),this._tempV=g(),this._tempVec3=g(),this._tempSphere=et();const n=tt(e.spatialReference);this._measurementSR=n,this._lengthMeasurementUnit=je(n)??"meters",this._areaMeasurementUnit=it(n)??"square-meters"}update(e,i,s,n,a,r){const l=this._lastPathVersion===e.version,d=i?i.equals(this._lastCursorPoint):this._lastCursorPoint==null,p=this._mode===a;return!(l&&!r&&p&&d)&&(this._lastPathVersion=e.version,this._lastCursorPoint=i,this._updateCursorSegmentLength(e,i),this._update(e,i,s,n,a),!0)}_update(e,i,s,n,a){const r=this._sceneView.renderSpatialReference,l=this._measurementSR,d=s.spatialReference;let p=e.numVertices;const u=!(i==null||i.equals(e.lastPoint)||p>2&&i.equals(e.firstPoint)||e.polygonIsClosed);u&&(p+=1);const c=!e.polygonIsClosed&&p>2,f=e.polygonIsClosed||c;this._resize(p);const _=pe(d),m=d!=null&&st(d)?d:null,v=m!=null&&nt(d,_),{positionsGeodesic:M,positionsWorld:k,positionsRender:F,positionsSpherical:L}=this,x=(P,C)=>{Ui(s.elevationProvider,P),U(P,k[C],l),U(P,F[C],r),v&&(U(P,M[C],m),U(P,L[C],_),We(L[C],L[C]))};e.forEachVertexPosition(((P,C)=>x(P,C))),u&&x(i,p-1);const O=this._updatePathLengths(f);if(this.pathLength=this._length>1?Y(O,this._lengthMeasurementUnit):null,v){const P=this._updateGeodesicPathLengths(f,m);this.geodesicPathLength=P!=null&&this._length>1?P:null}else this.geodesicPathLength=null;if(this._updateMode(a),!f)return this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),void(this.validMeasurement=!1);this._updateAreaAndPerimeterLength(s,r,l,n),v&&this._updateGeodesicArea(s,m),this.validMeasurement=!0}getData(){return{validMeasurement:this.validMeasurement,numVertices:this.numVertices,hasStagedVertex:this.hasStagedVertex,positionsRender:this.positionsRender,positionsFittedWorld:this.positionsFittedWorld,positionsFittedRender:this.positionsFittedRender,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorld.length=e,this.positionsRender.length=e,this.positionsFittedWorld.length=e,this.positionsFittedRender.length=e,this.positionsGeodesic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorld.push(g()),this.positionsRender.push(g()),this.positionsFittedWorld.push(ue()),this.positionsFittedRender.push(g()),this.positionsGeodesic.push(g()),this.positionsSpherical.push(g()),this.positionsStereographic.push(ue()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const i=this.positionsWorld,s=this.pathSegmentLengths;let n=0;const a=this._length;for(let r=0;r<a;++r){const l=s[r]=at(i[r],i[(r+1)%a]);(r<a-1||e)&&(n+=l)}return n}_updateGeodesicPathLengths(e,i){const s=this.positionsGeodesic,n=this.geodesicPathSegmentLengths;let a=0;const r=this._length;for(let l=0;l<r;++l){const d=this._geodesicLengthMeasurementUtils.geodesicDistance(s[l],s[(l+1)%r],i);if(d==null)return null;const p=J(d,"meters").value,u=n[l]=p;(l<r-1||e)&&(a+=u)}return Y(a,"meters")}_updateAreaAndPerimeterLength(e,i,s,n){const a=e.renderCoordsHelper,r=this.positionsWorld,l=this.positionsRender,d=this.positionsFittedWorld,p=this.positionsFittedRender,u=this._planeWorldCoords,c=this._centroidRenderCoords;ne(l,c),a.worldUpAtPosition(c,this._worldUp),a.worldBasisAtPosition(c,rt.X,this._worldTangent),He(c,this._worldUp,i,this._worldUp,s),He(c,this._worldTangent,i,this._worldTangent,s),r.length>2&&_i(r,u),this.fittingMode=this._selectFittingMode(u,r,this._worldUp,n);let f=0;if(this.fittingMode==="horizontal"){let L=-1/0;l.forEach(((x,O)=>{const P=a.getAltitude(l[O]);P>L&&(L=P,f=O)}))}const _=r[f];let m=u,v=this._worldTangent;this.fittingMode==="horizontal"?m=this._worldUp:this.fittingMode==="vertical"&&(m=this._tempVec3,v=this._worldUp,ce(u,this._worldUp,m)),Ue(this._frame[2],m),ce(v,m,this._frame[0]),ot(this._frame[1],this._frame[0],this._frame[2]),lt(this._frame[1],this._frame[1]);const M=this._tempVec3,k=this._tempU,F=this._tempV;for(let L=0;L<this._length;++L){const x=d[L],O=p[L];z(M,r[L],_),ge(x,I(this._frame[0],M),I(this._frame[1],M)),ee(k,this._frame[0],x[0]),ee(F,this._frame[1],x[1]),se(M,k,F),se(M,M,_),B(M,s,O,i)}this.perimeterLength=this._length>0?this._updatePerimeterLengths():null,ne(p,this.areaCentroidRenderCoords),B(this.areaCentroidRenderCoords,i,this.areaCentroidWorldCoords,s),this._updateIntersectingSegments(),this.area=this.intersectingSegments.size===0?this._computeArea():null}_updateGeodesicArea(e,i){const{renderCoordsHelper:s,spatialReference:n}=e,{positionsSpherical:a,positionsStereographic:r}=this,l=this._tempVec3,d=yi(a,l);if(!d)return void(this.geodesicArea=null);const p=this._tempU,u=this._tempV;ht(l,p,u);for(let c=0;c<this._length;++c){const f=I(a[c],p),_=I(a[c],u),m=I(a[c],l);ge(r[c],f/m,_/m)}ee(l,l,dt(n).radius),s.toRenderCoords(l,pe(n),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=d&&this.geodesicIntersectingSegments.size===0?this._computeGeodesicArea(i):null}_updatePerimeterLengths(){const e=this.positionsFittedWorld,i=this.perimeterSegmentLengths;let s=0;for(let n=0;n<this._length;++n)s+=i[n]=pt(e[n],e[(n+1)%this._length]);return Y(s,this._lengthMeasurementUnit)}_updateIntersectingSegments(){const e=this.positionsFittedWorld,i=this.intersectingSegments;i.clear();for(let s=0;s<this._length;++s)for(let n=s+2;n<this._length;++n){if((n+1)%this._length===s)continue;const a=e[s],r=e[(s+1)%this._length],l=e[n],d=e[(n+1)%this._length];me(a,r,l,d)&&(i.add(s),i.add(n))}}_computeArea(){const e=this.positionsFittedWorld,i=this.triangleIndices=_e(ye(e));let s=0;for(let n=0;n<i.length;n+=3)s+=ut(e[i[n]],e[i[n+1]],e[i[n+2]]);return fe(s,this._areaMeasurementUnit)}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,i=this.geodesicIntersectingSegments;i.clear();for(let s=0;s<this._length;++s)for(let n=s+2;n<this._length;++n){if((n+1)%this._length===s)continue;const a=e[s],r=e[(s+1)%this._length],l=e[n],d=e[(n+1)%this._length];me(a,r,l,d)&&(i.add(s),i.add(n))}}_computeGeodesicArea(e){const i=this.positionsGeodesic,s=this.positionsStereographic,n=this.geodesicTriangleIndices=_e(ye(s));let a=0;for(let r=0;r<n.length;r+=3){const l=fi(i[n[r]],i[n[r+1]],i[n[r+2]],e,this._geodesicAreaMeasurementUtils);if(l==null)return null;a+=J(l,"square-meters").value}return fe(a,"square-meters")}_selectFittingMode(e,i,s,n){const a=i.map((u=>Math.abs(vi(e,u)))).reduce(((u,c)=>Math.max(u,c)),0);wi(i,this._tempSphere);const r=a/(2*this._tempSphere[3]),l=r<n.maxRelativeErrorCoplanar,d=r<n.maxRelativeErrorAlmostCoplanar;let p="horizontal";return l?p="oblique":d&&(p=Math.abs(I(s,e))>Math.cos(ct(n.verticalAngleThreshold))?"horizontal":"vertical"),p}_updateCursorSegmentLength(e,i){const s=e.lastPoint;e.isValidPolygon||s==null||i==null?(this.geodesicStagedSegmentLength=null,this.stagedSegmentLength=null):(this.geodesicStagedSegmentLength=this._geodesicLengthMeasurementUtils.geodesicDistanceBetweenPoints(s,i),this.stagedSegmentLength=gt(s,i)?.direct)}_updateMode(e){if(e===oe.Auto){this.actualMeasurementMode="euclidean";let i=0;this.geodesicPathLength!=null&&(i+=this.geodesicPathLength.value),i>Wi&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=e===oe.Euclidean?"euclidean":"geodesic";this.geodesicPathLength==null&&(this.actualMeasurementMode="euclidean"),this._mode=e}}function Ui(t,e){e.hasZ||(e.z=mt(t,e,"ground")??0)}const Wi=1e5;let D=class extends de{constructor(t){super(t)}initialize(){this._measurementDataManager=new Fi(this.view,this.geodesicAreaMeasurementUtils,this.geodesicLengthMeasurementUtils),this.addHandles([this.analysisViewData.path.on("change",(()=>this._update())),b((()=>this.analysisViewData.stagedPoint),(()=>this._update()),ae),b((()=>this.analysisViewData.mode),(()=>this._update()),ae)]),this._update()}_update(t=!1){const{analysisViewData:e,view:i}=this,s={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};this._measurementDataManager.update(e.path,e.stagedPoint,i,s,e.mode,t)&&(e.measurementData=this._measurementDataManager.getData())}};o([h({constructOnly:!0})],D.prototype,"view",void 0),o([h({constructOnly:!0})],D.prototype,"analysis",void 0),o([h({constructOnly:!0})],D.prototype,"analysisViewData",void 0),o([h({constructOnly:!0})],D.prototype,"geodesicAreaMeasurementUtils",void 0),o([h({constructOnly:!0})],D.prototype,"geodesicLengthMeasurementUtils",void 0),D=o([E("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],D);let $=class extends _t.EventedAccessor{constructor(e={}){super(e),this._version=0,this._internalGeometryChange=!1,this._extent=ve()}set areaMeasurement(e){this._set("areaMeasurement",e),e!=null&&this.view!=null&&this._initialize(e,this.view)}set view(e){this._set("view",e),e!=null&&this.areaMeasurement!=null&&this._initialize(this.areaMeasurement,e)}get constructed(){return this.areaMeasurement!=null&&this.view!=null}get version(){return this._version}get isEmptyPolygon(){return!this.constructed||this._editGeometry.components.length===0}get isValidPolygon(){return this.constructed&&this.polygonIsClosed}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const e=ve(this._extent);return this.forEachVertex((i=>{yt(e,i.pos)})),e}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(e,i){this.removeAllHandles(),this.addHandles(b((()=>e.geometry),(()=>{this._updateEditGeometryFromModelGeometry(e,i)}),H)),this._makeDirty(!0)}_makeDirty(e=!1){this.notifyChange("polygonIsClosed"),this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),e&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(e,i){if(this._version++,this._internalGeometryChange)return;this.removeHandles("EditGeometry");let s=e.geometry;if(s!=null){const n=ft(s,i.spatialReference);n==null&&Vi(e,s.spatialReference,vt.getLogger(this)),s=n}this._editGeometryOperations=s!=null?le.fromGeometry(s,i.state.viewingMode):new le(new Je("polygon",Ne(!0,!1,i.spatialReference)),i.state.viewingMode),this._makeDirty(!0),this.emit("change"),this.addHandles(this._editGeometry.on("change",(n=>{this._makeDirty(n.addedVertices!=null||n.removedVertices!=null),this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1})),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const e=[];return this.forEachVertex((i=>{e.push(i)})),e}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get polygonIsClosed(){return this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get firstPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getFirstVertex();if(e!=null)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getLastVertex();if(e!=null)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}getVertex(e){if(!this.constructed||this._editGeometry.components.length===0||this._editGeometry.components[0].vertices.length===0)return null;const i=this._editGeometry.components[0].vertices[0];let s=i;do{if(s.index===e)return s;s=s.rightEdge.rightVertex}while(s!==i&&s!=null);return null}getVertexPositionAsPoint(e){return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(e).pos)}forEachVertex(e){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(e)}forEachVertexPosition(e){const i=this._editGeometry.coordinateHelper;this.forEachVertex(((s,n)=>{i.vectorToPoint(s.pos,Ee),e(Ee,n)}))}clear(){this.areaMeasurement!=null&&(this.areaMeasurement.geometry=null)}add(e){if(!this.constructed)return null;if(this._editGeometry.components.length===0){const s=this.view;this._editGeometry.components.push(new Mi(s.spatialReference,s.state.viewingMode))}const i=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),i}close(){if(!this.constructed||this._editGeometry.components.length===0)return null;const e=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),e}ensureContains(e,i=""){let s=!1;if(this._editGeometry.components.forEach((n=>{n.iterateVertices((a=>{a===e&&(s=!0)}))})),!s)throw new Error(`vertex doesnt exist ${i}`);return s}setVertexPosition(e,i){if(!this.constructed)return null;const s=this._editGeometryOperations.setVertexPosition(e,this._editGeometry.coordinateHelper.pointToVector(i));return this.emit("change"),s}equals(e){if(this.numVertices!==e.numVertices)return!1;let i=!0;return this.forEachVertexPosition(((s,n)=>{const a=e.getVertexPositionAsPointFromIndex(n);s.equals(a)||(i=!1)})),!!i}};o([h({value:null})],$.prototype,"areaMeasurement",null),o([h({value:null})],$.prototype,"view",null),o([h()],$.prototype,"isEmptyPolygon",null),o([h()],$.prototype,"isValidPolygon",null),o([h()],$.prototype,"extent",null),o([h()],$.prototype,"spatialReference",null),o([h()],$.prototype,"numVertices",null),o([h()],$.prototype,"polygonIsClosed",null),$=o([E("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementPathHelper")],$);const Ee=new N;function he(t,e){return J(t,qe(t.value,t.unit,e))}function ke(t,e){return J(t,Ke(t,e))}function Ke(t,e){const i=ji(e);return wt(t.value,t.unit,i)}function ji(t){switch(t){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-nautical-miles":return"nautical-miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}function Xe(t){const e=new Vt,{vertex:i,fragment:s,varyings:n}=e;return e.fragment.include(St,t),e.include(Mt,t),e.include(Pt,t),Lt(i,t),e.attributes.add(Q.POSITION,"vec3"),e.attributes.add(Q.UV0,"vec2"),n.add("vUV","vec2"),n.add("vpos","vec3"),i.main.add(we`vUV = uv0;
vpos = position;
forwardViewPosDepth((view * vec4(position, 1.0)).xyz);
gl_Position = proj * view * vec4(position, 1.0);`),s.uniforms.add(new $t("size",(a=>a.size))),s.uniforms.add(new Ve("color1",(a=>a.color1))),s.uniforms.add(new Ve("color2",(a=>a.color2))),s.include(bt),s.main.add(we`discardByTerrainDepth();
vec2 uvScaled = vUV / (2.0 * size);
vec2 uv = fract(uvScaled - 0.25);
vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
float t = mix(abs(ab.x + ab.y), 0.5, fade);
fragColor = mix(color2, color1, t);
outputColorHighlightOID(fragColor, vpos, fragColor.rgb);`),e}const qi=Object.freeze(Object.defineProperty({__proto__:null,build:Xe},Symbol.toStringTag,{value:"Module"}));class Bi extends Ct{constructor(e,i){super(e,i,new Dt(qi,(()=>Ci(()=>Promise.resolve().then(()=>ds),void 0))))}initializePipeline(e){const{oitPass:i,transparent:s,polygonOffset:n,output:a}=e,r=i===Se.NONE,l=i===Se.FrontFace;return xt({blending:s?Gt(i):null,depthTest:{func:Rt(i)},depthWrite:It(e),drawBuffers:Ot(i,a),colorWrite:At,polygonOffset:r||l?n?Ji:null:{factor:-1,units:-25}})}}const Ji={factor:0,units:-25};class R extends Tt{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.textureCoordinateType=zt.None,this.emissionSource=Ht.None,this.output=Et.Color,this.occlusionPass=!1,this.objectAndLayerIdColorInstanced=!1,this.overlayEnabled=!1,this.draped=!1,this.snowCover=!1}get discardInvisibleFragments(){return this.transparent&&this.writeDepth}}o([G()],R.prototype,"transparent",void 0),o([G()],R.prototype,"writeDepth",void 0),o([G()],R.prototype,"polygonOffset",void 0),o([G()],R.prototype,"terrainDepthTest",void 0),o([G()],R.prototype,"cullAboveTerrain",void 0);class Ni extends bi{constructor(e){super(e,Zi),this._configuration=new R,this.produces=new Map([[te.OPAQUE_MATERIAL,i=>ie(i)&&!this.transparent],[te.TRANSPARENT_MATERIAL,i=>ie(i)&&this.transparent&&this.parameters.writeDepth],[te.TRANSPARENT_MATERIAL_WITHOUT_DEPTH,i=>ie(i)&&this.transparent&&!this.parameters.writeDepth]])}getConfiguration(e,i){return super.getConfiguration(e,i,this._configuration),this._configuration.transparent=this.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.oitPass=i.oitPass,this._configuration.terrainDepthTest=i.terrainDepthTest,this._configuration.cullAboveTerrain=i.cullAboveTerrain,this._configuration}get visible(){return this.parameters.color1[3]>=Me||this.parameters.color2[3]>=Me}get transparent(){return this.parameters.color1[3]<1||this.parameters.color2[3]<1}createGLMaterial(e){return new Qi(e)}createBufferWriter(){return new kt($i)}}class Qi extends Ut{beginSlot(e){return this.getTechnique(Bi,e)}}class Zi extends Ft{constructor(){super(...arguments),this.size=Be(1,1),this.color1=Z(.75,.75,.75,1),this.color2=Z(.5,.5,.5,1),this.writeDepth=!0,this.polygonOffset=!1}}class Ki extends Si{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=A.OccludeAndTransparent,this._geometry=null,this._size=Be(1,1),this._color1=Z(1,.5,0,.5),this._color2=Z(1,1,1,.5),this.applyProperties(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get size(){return this._size}set size(e){Wt(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){Pe(e,this._color1)||(Le(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){Pe(e,this._color2)||(Le(this._color2,e),this._updateMaterial())}_updateMaterial(){this._checkerBoardMaterial?.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new Ni({size:this._size,color1:this._color1,color2:this._color2,writeDepth:!1,polygonOffset:!0,renderOccluded:A.OccludeAndTransparent,isDecoration:this.isDecoration})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachMaterial(e){e(this._checkerBoardMaterial)}createGeometries(e){if(this._geometry==null||this._checkerBoardMaterial==null)return;const i=Xi;jt(i,this.transform);const s=this._geometry,n=[],a=g();s.position.forEach((d=>{z(a,d,i),n.push(a[0],a[1],a[2])}));const r=[];s.uv.forEach((d=>{r.push(d[0],d[1])}));const l=new qt(this._checkerBoardMaterial,[[Q.POSITION,new $e(n,s.triangleIndices,3,!0)],[Q.UV0,new $e(r,s.triangleIndices,2,!0)]]);e.addGeometry(l)}}const Xi=g();let S=class extends de{get _parameters(){const{accentColor:t,textColor:e}=this.view.effectiveTheme,i=Bt(t),s=K(t,.5),n=K(re(t),.5),a=re(e,Jt.Low);return{accentColor:i,transparentAccentColor:s,transparentContrastColor:n,intersectingLineColor:[1,.2,0,1],textColor:e,textBackgroundColor:be(a,.6),textCalloutColor:be(a,.5),pathLineWidth:3,perimeterLineWidth:2,projectionLineWidth:2,projectionLineStippleSize:5,labelDistance:25}}get visible(){return this.analysisViewData.visible}get _renderUnits(){const t=this.view.renderCoordsHelper.spatialReference;return je(t)??"meters"}get testData(){}constructor(t){super(t),this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._origin=g(),this._originTransform=Nt(),this.messages=null,this.viewData=ts,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:t,_parameters:e,view:i}=this;this._path=new T({view:i,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:A.OccludeAndTransparent,isDecoration:!0}),this._intersectedPath=new T({view:i,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:A.OccludeAndTransparent,isDecoration:!0}),this._perimeter=new T({view:i,attached:!0,width:e.perimeterLineWidth,polygonOffset:!0,renderOccluded:A.OccludeAndTransparent,isDecoration:!0}),this._intersectedPerimeter=new T({view:i,attached:!0,width:e.perimeterLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:A.OccludeAndTransparent,isDecoration:!0}),this._projectionLines=new T({view:i,attached:!0,width:e.projectionLineWidth,stipplePattern:Di(e.projectionLineStippleSize),polygonOffset:!0,renderOccluded:A.OccludeAndTransparent,isDecoration:!0}),this._measurementArea=new Ki({view:i,attached:!0,isDecoration:!0});const s={attached:!0,view:i,isDecoration:!0};this._areaLabel=new ze({...s,fontSize:X.Large}),this._perimeterLengthLabel=new ze({...s,fontSize:X.Small}),this.addHandles([b((()=>[t.mode,this.visible,t.unit,t.measurementData,t.stagedPoint]),(()=>this._update()),H),b((()=>i.state?.camera),(()=>this._updateLabels()),H),Qt((()=>this._updateMessageBundle())),b((()=>this._parameters),(({accentColor:n,transparentAccentColor:a,transparentContrastColor:r,textColor:l,textBackgroundColor:d,textCalloutColor:p})=>{const{_path:u,_intersectedPath:c,_perimeter:f,_projectionLines:_,_measurementArea:m,_areaLabel:v,_perimeterLengthLabel:M}=this;u.color=n,c.color=n,f.color=n,_.color=n,m.color1=a,m.color2=r,v.textColor=l,v.backgroundColor=d,v.calloutColor=p,M.textColor=l,M.backgroundColor=d,M.calloutColor=p}),Zt)]),this._updateMessageBundle()}destroy(){this._measurementArea=V(this._measurementArea),this._path=V(this._path),this._intersectedPath=V(this._intersectedPath),this._perimeter=V(this._perimeter),this._intersectedPerimeter=V(this._intersectedPerimeter),this._areaLabel=V(this._areaLabel),this._perimeterLengthLabel=V(this._perimeterLengthLabel),this._projectionLines=V(this._projectionLines),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:t},analysisViewData:e}=this;t!=null&&(this._updateViewData(t,e.path),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(t,e){const i=t.validMeasurement,s=t.actualMeasurementMode==="geodesic",n=s?t.geodesicArea:t.area;let a=1;if(n){const l=he(n,this.analysisViewData.unit);a=Kt(Math.sqrt(l.value)/Math.sqrt(300)),a*=Math.sqrt(Ce(1,l.unit,"square-meters")),a=Ce(a,"meters",this._renderUnits)}const r={validMeasurement:i,numVertices:t.numVertices,hasStagedVertex:t.hasStagedVertex,path:e,mode:t.actualMeasurementMode,positionsRender:t.positionsRender,positionsFittedWorld:t.positionsFittedWorld,positionsFittedRender:t.positionsFittedRender,intersectingSegments:s?t.geodesicIntersectingSegments:t.intersectingSegments,triangleIndices:s?t.geodesicTriangleIndices:t.triangleIndices,areaCentroid:s?t.geodesicAreaCentroidRenderCoords:t.areaCentroidRenderCoords,perimeterLengthLabelSegmentIndex:0,area:s?t.geodesicArea:t.area,pathLength:s?t.geodesicPathLength:t.pathLength,perimeterLength:t.perimeterLength,checkerSize:a};this._set("viewData",r)}_updateOrigin(){const t=this.viewData;ne(t.positionsRender,this._origin),Xt(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(t){const e=this.viewData,i=this.view.renderCoordsHelper.spatialReference,s=e.mode,n=[],a=[],r=[],l=e.numVertices,d=e.validMeasurement?l:l-1;for(let u=0;u<d;++u){const c=e[t][u],f=e[t][(u+1)%l];let _=null;switch(s){case"euclidean":_=new Li(c,f);break;case"geodesic":_=new Pi(c,f,i)}e.intersectingSegments.has(u)?r.push(_):a.push(_),n.push(_)}let p=null;return e.validMeasurement&&e.hasStagedVertex&&d>=2?p=n[n.length-2]:e.hasStagedVertex&&d>=1&&(p=n[n.length-1]),{all:n,nonIntersecting:a,intersecting:r,stagedSegment:p}}_updatePathSegments(){const{visible:t}=this,e=this._createSegments("positionsRender");this._path.setGeometryFromSegments(e.nonIntersecting,this._origin),this._path.visible=t,this._intersectedPath.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPath.visible=t,this._pathSegments=e.all}_updatePerimeterSegments(){const t=this.visible&&this.viewData.mode==="euclidean"&&this.viewData.path.numVertices>2,e=this._createSegments("positionsFittedRender");this._perimeter.setGeometryFromSegments(e.nonIntersecting,this._origin),this._perimeter.visible=t,this._intersectedPerimeter.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPerimeter.visible=t,this._perimeterSegments=e.all}_updateArea(){const t=this.viewData;switch(t.mode){case"euclidean":this._updateAreaEuclidean(t);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(t){const e=this.visible;t.validMeasurement&&t.intersectingSegments.size===0&&t.triangleIndices?(this._measurementArea.geometry={uv:t.positionsFittedWorld,position:t.positionsFittedRender,triangleIndices:t.triangleIndices},this._measurementArea.size=[t.checkerSize,t.checkerSize],this._measurementArea.visible=e):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const t=this.viewData,e=this.visible,i=t.mode,s=t.numVertices;if(s>0&&t.validMeasurement&&i==="euclidean"){const n=[];for(let a=0;a<s;++a){const r=g();z(r,t.positionsRender[a],this._origin);const l=g();z(l,t.positionsFittedRender[a],this._origin),n.push([r,l])}this._projectionLines.geometry=n,this._projectionLines.visible=e}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:t}=this,{area:e,path:i}=t;if(!i)return;const s=this.visible,n=this._areaLabel,a=this._perimeterLengthLabel,r=t.validMeasurement;n.visible=!0,a.visible=!0;let l=!1;const d=Yi(this.messages,e,this.analysisViewData.unit);if(d!=null&&s&&(n.geometry={type:"point",point:t.areaCentroid},n.text=d,l=t.validMeasurement&&t.intersectingSegments.size===0),this._set("areaLabel",d),s&&r&&t.intersectingSegments.size===0){const p=t.mode==="geodesic",u=p?t.pathLength:t.perimeterLength,c=es(this.messages,u,this.analysisViewData.unit);this._set("perimeterLengthLabel",c),a.distance=this._parameters.labelDistance,a.anchor="top",a.text=c;let f=!0;for(let _=0;_<t.numVertices;++_){const m=(t.perimeterLengthLabelSegmentIndex+_)%t.numVertices,v=p?this._pathSegments[m]:this._perimeterSegments[m];if(f=!0,a.geometry={type:"segment",segment:v,sampleLocation:"center"},!a.overlaps(this._areaLabel))break;f=!1}a.visible=f}else a.visible=!1;n.visible=l}_updateMessageBundle(){this.loadingMessages=!0,Yt("esri/core/t9n/Units").then((t=>{this.messages=t,this.view&&this._update()})).finally((()=>{this.loadingMessages=!1}))}};function Yi(t,e,i){return t&&e&&Qe(t,e,qe(e.value,e.unit,i))}function es(t,e,i){return t&&e&&Qe(t,e,Ke(e,i))}var X;o([h()],S.prototype,"_parameters",null),o([h()],S.prototype,"view",void 0),o([h()],S.prototype,"messages",void 0),o([h()],S.prototype,"analysis",void 0),o([h()],S.prototype,"viewData",void 0),o([h()],S.prototype,"analysisViewData",void 0),o([h({readOnly:!0})],S.prototype,"areaLabel",void 0),o([h({readOnly:!0})],S.prototype,"perimeterLengthLabel",void 0),o([h()],S.prototype,"loadingMessages",void 0),o([h()],S.prototype,"visible",null),o([h()],S.prototype,"_renderUnits",null),S=o([E("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],S),(function(t){t[t.Small=12]="Small",t[t.Large=16]="Large"})(X||(X={}));const ts={validMeasurement:!1,numVertices:0,hasStagedVertex:!1,path:null,mode:null,positionsRender:null,positionsFittedWorld:null,positionsFittedRender:null,intersectingSegments:null,triangleIndices:null,areaCentroid:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null,area:null,pathLength:null,perimeterLength:null};class is{constructor(e,i=null){this.screenPoint=e,this.result=i}}class ss{constructor(e,i){this.scenePoint=e,this.mapPoint=i}}class ns{constructor(e){this.vertexManipulators=[],this._destroyed=!1,this._isManipulatorsOwner=!0,this._visible=!0,this._listenerHandles=null,this._tempHandlePosition=g();const{analysisViewData:i,manipulators:s,toolState:n,view:a,visible:r}=e;this._analysisViewData=i,this._toolState=n,s!=null?(this._manipulators=s,this._isManipulatorsOwner=!1):this._manipulators=new Ze,this._view=a,this._intersector=Ti(a.state.viewingMode);const l=Re(this._handleColor),d=[new Ge(De(l,1,32,32))],p=new Te({view:a,renderObjects:d});p.available=!1,p.radius=Fe,p.interactive=!1,this._manipulators.add(p),this._cursorManipulator=p,this._cursorManipulatorMaterial=l,this._laserLine=new Ri({view:a,attached:!0,style:{glowWidth:rs,glowFalloff:os,innerWidth:ls},isDecoration:!0}),this._updateVisibility(r??!0)}destroy(){this._listenerHandles=V(this._listenerHandles),this._isManipulatorsOwner?this._manipulators=V(this._manipulators):this._manipulators=null,this._laserLine=V(this._laserLine),this._destroyed=!0}get destroyed(){return this._destroyed}get visible(){return this._visible}set visible(e){e?this.show():this.hide()}get testData(){}show(){this._setVisibility(!0)}hide(){this._setVisibility(!1)}_setVisibility(e){this._destroyed||this._visible===e||this._updateVisibility(e)}_updateVisibility(e){this._visible=e,this._laserLine.visible=e,e?(this._initializeListeners(),this._updateAll()):(this._destroyListeners(),this.vertexManipulators.forEach((({manipulator:i})=>this._removeVertexManipulator(i))),this.vertexManipulators=[],this._view.cursor=null)}vertexHandleAt(e,i){return this._manipulators.intersect(e,i)?.metadata}pick(e){const i=this._view.spatialReference,s=ei(e.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(s,this._intersector);const n=this._intersector.results.min,a=g();if(!n.getIntersectionPoint(a))return null;const r=this._view.renderCoordsHelper.fromRenderCoords(a,new N({spatialReference:i}));return r==null?null:new ss(a,r)}_updateAll(){this._visible&&(this._updateVertexManipulators(),this._updateLaserLine())}_createVertexManipulator(){const e=Re(this._handleColor),i=[new Ge(De(e,1,32,32))],s=new Te({view:this._view,renderObjects:i});return s.radius=Fe,this._manipulators.add(s),{manipulator:s,material:e}}_removeVertexManipulator(e){this._manipulators.remove(e)}_updateVertexManipulators(){const{viewData:e}=this._analysisViewData,i=this._analysisViewData.path?this._analysisViewData.path.vertices:[],s=this.vertexManipulators;as(s,i.length,(()=>this._createVertexManipulator()),(({manipulator:n})=>this._removeVertexManipulator(n))),s.forEach((({manipulator:n},a)=>{n.metadata=i[a],n.renderLocation=e.positionsRender[a],n.cursor=a===0&&this._toolState.polygonState==="drawing"?"crosshair":null})),this._toolState.polygonState==="drawing"&&this._analysisViewData.stagedPoint!=null?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this._analysisViewData.stagedPoint):this._cursorManipulator.available=!1}get _handleColor(){return K(this._view.effectiveTheme.accentColor,.5)}_getFocusPoint(){const{lastDraggedVertex:e}=this._analysisViewData;switch(this._toolState.polygonState){case"drawing":return this._analysisViewData.stagedPoint!=null?this._analysisViewData.stagedPoint:e!=null?this._analysisViewData.path.getVertexPositionAsPoint(e):this._analysisViewData.path.lastPoint;case"editing":return e!=null?this._analysisViewData.path.getVertexPositionAsPoint(e):null;default:return this._analysisViewData.stagedPoint}}_updateLaserLine(){const e=this._toolState.polygonState!=="measured"&&this._toolState.active,i=this._getFocusPoint();if(e&&i!=null){const s=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(i,s),this._laserLine.heightManifoldTarget=s}else this._laserLine.heightManifoldTarget=null}_initializeListeners(){this._listenerHandles=new ti,this._listenerHandles.add([b((()=>this._toolState.polygonState),(()=>this._updateLaserLine())),b((()=>this._analysisViewData.viewData),(()=>this._updateAll()),ae),b((()=>({lastDraggedVertex:this._analysisViewData.lastDraggedVertex,cursorPoint:this._analysisViewData.stagedPoint})),(()=>this._updateLaserLine())),b((()=>this._toolState.active),(()=>this._updateAll())),b((()=>this._view.effectiveTheme.accentColor),(e=>{const i=K(e,.5);for(const{material:d}of this.vertexManipulators)d.setParameters({color:i});this._cursorManipulatorMaterial.setParameters({color:i});const s=xe.toUnitRGB(e),n=xe.toUnitRGB(re(e)),a=.75*e.a,r=this._laserLine,l=r.style;r.style={...l,glowColor:s,innerColor:n,globalAlpha:a}}),{initial:!0,equals:ii})])}_destroyListeners(){this._listenerHandles=V(this._listenerHandles)}}function as(t,e,i,s){for(;t.length<e;)t.push(i());if(s)for(;t.length>e;)s(t.pop());else t.length=e}const rs=8,os=8,ls=1,Fe=5;let w=class extends pi{constructor(t){super(t),this._updatingHandles=new si,this.polygonState="initial",this.removeIncompleteOnCancel=!1,this.manipulators=new Ze,this._getSnappingContext=xi((e=>new zi({elevationInfo:{mode:"absolute-height",offset:0},pointer:e,editGeometryOperations:new le(new Je("point",Ne(!0,!1,this.view.spatialReference)),this.view.state.viewingMode),visualizer:new Ai})))}initialize(){const{view:t,analysisViewData:e,manipulators:i,visible:s}=this;this.measurementView=new ns({view:t,analysisViewData:e,toolState:this,manipulators:i,visible:s});const n=Ei(t);this._snappingManagerResult=n,this.addHandles(n),this._snappingOperation=new ki({view:t}),this._updatingHandles.add((()=>this.stagedPoint),(a=>{this.analysisViewData.stagedPoint=a!=null?W(a,new N):null}),H),ni(this,(()=>{const a=this.view.inputManager.latestPointerType??"mouse",r=this._getSnappingContext(a);this._updatingHandles.addPromise(Ae(this._snappingOperation.snapAgainNearPreviousMapPoint(this._snappingManager,r)))})),this._setupManipulators(),this.addHandles([ai((()=>this.state==="measured"),(()=>this.finishToolCreation()),H),this.analysisViewData.path.on("change",(()=>{const a=this.analysisViewData.path;this.polygonState!=="initial"||a.isEmptyPolygon||(a.isValidPolygon?this.polygonState="measured":this.polygonState="drawing")}))])}destroy(){this.measurementView.destroy(),this._set("measurementView",null),this._updatingHandles=V(this._updatingHandles)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){return this.analysisViewData.path.numVertices===0?"ready":this.analysisViewData.path.isValidPolygon&&this.polygonState!=="editing"?"measured":"measuring"}get cursor(){return this.active?"crosshair":null}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}get stagedPoint(){return this._snappingOperation.stagedPoint}set stagedPoint(t){this._snappingOperation.stagedPoint=t}get snappingOptions(){return this._snappingManager.options}finishMeasurement(){const{path:t}=this.analysisViewData;t.numVertices<=2||(t.close(),this.polygonState="measured",this._resetSnappingState(),this.active&&(this.view.activeTool=null))}resetCreated(){super.resetCreated(),this._resetSnappingState(),this.polygonState="initial",this.state==="measured"&&(this.polygonState="measured",this.finishToolCreation())}onShow(){this.measurementView.show()}onHide(){this.measurementView.hide()}onDeactivate(){this._resetSnappingState()}onInputEvent(t){switch(t.type){case"immediate-double-click":this._handleImmediateDoubleClick(t);break;case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t);break;case"drag":this._handleDrag(t);break;case"key-down":this._handleKeyDown(t)}}_setupManipulators(){const t=i=>i.events.on("grab-changed",(()=>{if(this.analysisViewData.path.isValidPolygon){const s=this.manipulators.some((n=>n.manipulator.grabbing));this.polygonState=s?"editing":"measured"}})),e=i=>{this.addHandles([Gi(i,((s,n,a,r)=>{const l=Oi(s),d=s.metadata,p=this._snappingManager,u=this._getSnappingContext(r),c=this._updatingHandles,{snappingStep:f,cancelSnapping:_}=Hi({snappingManager:p,snappingContext:u,updatingHandles:c});a=a.next(l).next((v=>(this.analysisViewData.lastDraggedVertex=null,this.analysisViewData.path.setVertexPosition(d,m),s.location=m,v))).next(_),n.next(l).next(Ii(this.view)).next(...f).next((v=>{s.location=v.mapEnd,this.analysisViewData.lastDraggedVertex=v.action==="end"?null:d,this.analysisViewData.path.setVertexPosition(d,W(v.mapEnd))}));const m=W(this.analysisViewData.path.getVertexPositionAsPoint(d))})),t(i)],i)};this.manipulators.forEach((({manipulator:i})=>{e(i)})),this.addHandles([this.manipulators.on("after-add",(({item:{manipulator:i}})=>{e(i)})),this.manipulators.on("after-remove",(({item:{manipulator:i}})=>this.removeHandles(i)))])}_handleImmediateDoubleClick(t){Ie(t)&&(this.polygonState==="drawing"&&this.finishMeasurement(),t.stopPropagation())}_handleDrag(t){this.polygonState==="editing"&&t.stopPropagation()}_handleImmediateClick(t){if(!Ie(t))return;const e=Oe(t),{pointerType:i}=t;if(this.active)switch(this.polygonState){case"initial":case"measured":if(this._addVertexAt(e,i))return this.stagedPoint=null,this.polygonState="drawing",void t.stopPropagation();break;case"drawing":{const s=this.measurementView.vertexHandleAt(e,i);if(s==null){if(this._addVertexAt(e,i))return this.stagedPoint=null,void t.stopPropagation()}else s.index===0&&(this.finishMeasurement(),t.stopPropagation());break}}t.pointerType==="mouse"&&this._hoverAt(e)}_handlePointerMove(t){if(t.pointerType==="mouse"){const e=Oe(t);this._hoverAt(e)}}_handleKeyDown(t){const{path:e}=this.analysisViewData;t.key===ri.complete&&this.polygonState==="drawing"&&e.numVertices>=3&&(this.stagedPoint=null,this.finishMeasurement(),t.stopPropagation())}_hoverAt(t){const{polygonState:e}=this;if(this.active&&hs.has(e)){const i=this._pick(t);if(i?.mapPoint!=null){const s=this._getSnappingContext("mouse");this._updatingHandles.addPromise(Ae(this._snappingOperation.snap({point:i.mapPoint},this._snappingManager,s)))}}else this.stagedPoint=null}_addVertexAt(t,e){const i=this._pick(t),s=i?.mapPoint;if(s==null)return!1;this.analysis.valid&&this.polygonState==="measured"&&(this.analysis.clear(),this._set("created",!1),this.polygonState="initial");const n=this._getSnappingContext(e),a=this._snappingOperation.update({point:s},this._snappingManager,n),r=W(a,new N);return this.analysisViewData.path.add(r),!0}_pick(t){const e=new is(t);return this.measurementView.pick(e)}_resetSnappingState(){this._snappingManager.doneSnapping(),this._snappingOperation.abort(),this._snappingOperation.stagedPoint=null}get test(){}};o([h({readOnly:!0})],w.prototype,"state",null),o([h()],w.prototype,"polygonState",void 0),o([h({readOnly:!0})],w.prototype,"cursor",null),o([h()],w.prototype,"measurementView",void 0),o([h()],w.prototype,"removeIncompleteOnCancel",void 0),o([h({constructOnly:!0})],w.prototype,"view",void 0),o([h({constructOnly:!0})],w.prototype,"analysis",void 0),o([h({constructOnly:!0})],w.prototype,"analysisViewData",void 0),o([h({readOnly:!0})],w.prototype,"manipulators",void 0),o([h()],w.prototype,"updating",null),o([h()],w.prototype,"stagedPoint",null),o([h()],w.prototype,"snappingOptions",null),w=o([E("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],w);const hs=new Set(["initial","drawing","measured"]);let y=class extends ui(de){constructor(t){super(t),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.stagedPoint=null,this.mode=oe.Auto,this.tool=null,this.userOperation=null}initialize(){const{analysis:t,view:e}=this;this.path=new $({view:e,areaMeasurement:t}),this._analysisVisualization=new S({view:e,analysis:t,analysisViewData:this}),this.addResolvingPromise(Promise.all([oi(),li()]).then((([i,s])=>{this.destroyed||(this._analysisController=new D({view:e,analysis:t,analysisViewData:this,geodesicAreaMeasurementUtils:i,geodesicLengthMeasurementUtils:s}))}))),this.addHandles(ci(this,w))}destroy(){gi(this),this.userOperation=hi(this.userOperation),this._analysisController=V(this._analysisController),this._analysisVisualization=V(this._analysisVisualization),this.path.destroy()}get updating(){return!!this._analysisVisualization?.loadingMessages}get result(){const{measurementData:t}=this;if(t==null)return{area:null,mode:null,perimeter:null};const{unit:e}=this;if(t.actualMeasurementMode==="euclidean"){const{area:n,perimeterLength:a}=t;return{area:n!=null?he(n,e):null,perimeter:a!=null?ke(a,e):null,mode:"euclidean"}}const{geodesicArea:i,pathLength:s}=t;return{area:i!=null?he(i,e):null,perimeter:s!=null?ke(s,e):null,mode:"geodesic"}}get viewData(){return this._analysisVisualization.viewData}get areaLabel(){return this._analysisVisualization.areaLabel}get perimeterLengthLabel(){return this._analysisVisualization.perimeterLengthLabel}get validMeasurement(){return this.path.isValidPolygon}get unit(){return this.analysis.unit??di(this.view)}get testData(){}place(t){return mi(this,{placementOptions:t})}};o([h()],y.prototype,"_analysisVisualization",void 0),o([h()],y.prototype,"_analysisController",void 0),o([h({readOnly:!0})],y.prototype,"type",void 0),o([h({constructOnly:!0,nonNullable:!0})],y.prototype,"analysis",void 0),o([h()],y.prototype,"updating",null),o([h()],y.prototype,"result",null),o([h()],y.prototype,"measurementData",void 0),o([h()],y.prototype,"viewData",null),o([h()],y.prototype,"areaLabel",null),o([h()],y.prototype,"perimeterLengthLabel",null),o([h()],y.prototype,"validMeasurement",null),o([h()],y.prototype,"path",void 0),o([h()],y.prototype,"lastDraggedVertex",void 0),o([h()],y.prototype,"stagedPoint",void 0),o([h()],y.prototype,"mode",void 0),o([h()],y.prototype,"unit",null),o([h()],y.prototype,"tool",void 0),o([h()],y.prototype,"userOperation",void 0),y=o([E("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],y);const Cn=y,ds=Object.freeze(Object.defineProperty({__proto__:null,build:Xe},Symbol.toStringTag,{value:"Module"}));export{Cn as default};
