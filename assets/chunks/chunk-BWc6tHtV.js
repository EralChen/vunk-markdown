import{af as x,g,j as $,ae as p,aj as m,x as w,ah as z,T as k,ai as y}from"./chunk-BLrLWCUc.js";import{g as C,w as O}from"./chunk-DlUmt5IX.js";import{b as D}from"./chunk-B0nwe0ge.js";import{m as U}from"./chunk-DRK4NW0F.js";import"./chunk-CWUYlh1e.js";import"./chunk-BDqMgIU1.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.1.0 */const I={flipRtl:"flip-rtl"},d={},h={},u={s:16,m:24,l:32};function b({icon:t,scale:i}){const e=u[i],s=L(t),o=s.charAt(s.length-1)==="F";return`${o?s.substring(0,s.length-1):s}${e}${o?"F":""}`}async function R(t){const i=b(t),e=f(i);if(e)return e;h[i]||(h[i]=fetch(k(`./assets/icon/${i}.json`)).then(o=>o.json()).catch(()=>(U.error(`${t.icon} (${t.scale}) icon failed to load`),"")));const s=await h[i];return d[i]=s,s}function j(t){return f(b(t))}function f(t){return d[t]}function L(t){const i=!isNaN(Number(t.charAt(0))),e=t.split("-");if(e.length>0){const s=/[a-z]/i;t=e.map((o,n)=>o.replace(s,function(a,l){return n===0&&l===0?a:a.toUpperCase()})).join("")}return i?`i${t}`:t}const P=z`:host{display:inline-flex;color:var(--calcite-icon-color, var(--calcite-ui-icon-color, currentColor))}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}`;class A extends x{constructor(){super(...arguments),this.visible=!1,this.flipRtl=!1,this.icon=null,this.preload=!1,this.scale="m"}static{this.properties={pathData:16,visible:16,flipRtl:7,icon:3,preload:7,scale:3,textLabel:1}}static{this.styles=P}connectedCallback(){if(super.connectedCallback(),this.preload){this.visible=!0,this.loadIconPathData();return}this.visible||this.waitUntilVisible(()=>{this.visible=!0,this.loadIconPathData()})}willUpdate(i){(i.has("icon")&&(this.hasUpdated||this.icon!==null)||i.has("scale")&&(this.hasUpdated||this.scale!=="m"))&&this.loadIconPathData()}disconnectedCallback(){super.disconnectedCallback(),this.intersectionObserver?.disconnect(),this.intersectionObserver=null}async loadIconPathData(){const{icon:i,scale:e,visible:s}=this;if(!g()||!i||!s)return;const o={icon:i,scale:e},n=j(o)||await R(o);i===this.icon&&(this.pathData=n)}waitUntilVisible(i){if(this.intersectionObserver=D("intersection",e=>{e.forEach(s=>{s.isIntersecting&&(this.intersectionObserver.disconnect(),this.intersectionObserver=null,i())})},{rootMargin:"50px"}),!this.intersectionObserver){i();return}this.intersectionObserver.observe(this.el)}render(){const{el:i,flipRtl:e,pathData:s,scale:o,textLabel:n}=this,a=C(i),l=u[o],c=!!n,v=[].concat(s||"");return this.el.ariaHidden=O(!c),this.el.ariaLabel=c?n:null,this.el.role=c?"img":null,w`<svg aria-hidden=true class=${$({[I.flipRtl]:a==="rtl"&&e,svg:!0})} fill=currentColor height=100% viewBox=${`0 0 ${l} ${l}`} width=100% xmlns=http://www.w3.org/2000/svg>${v.map(r=>typeof r=="string"?m`<path d=${r??p} />`:m`<path d=${r.d??p} opacity=${("opacity"in r?r.opacity:1)??p} />`)}</svg>`}}y("calcite-icon",A);export{A as Icon};
