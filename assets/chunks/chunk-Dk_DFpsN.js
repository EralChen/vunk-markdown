import{fA as s,eh as a,s as l,fB as m,aK as n,d8 as h,af as r,ag as o,ai as f}from"./chunk-CuaFhuP3.js";import"./chunk-Dpk1TJd9.js";import{l as u}from"./chunk-CK-Bcvbn.js";import{p as d}from"./chunk-D1Gs7Etu.js";import{i as c}from"./chunk-BVv_emGb.js";import{d as y}from"./chunk-DmnDoZjP.js";import{_ as g}from"./chunk-D4fqOWql.js";import"./chunk-iOPJXyP1.js";import"./chunk-DGmg3LSc.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CGewVvoF.js";import"./chunk-DB5UqKLc.js";let i=class extends s(d(u(h))){constructor(){super(...arguments),this.type="tile-3d"}get imageFormatIsOpaque(){return this.layer.tileInfo.format==="jpg"}get hasMixedImageFormats(){return this.layer.tileInfo.format==="mixed"}get tileInfo(){return this.layer.tileInfo}initialize(){if(this.layer.type==="web-tile"){const t=this.layer.fullExtent?.spatialReference,e=this.layer.tileInfo?.spatialReference;if(t==null||e==null||!a(t,e)){const p=this.layer.originOf("fullExtent")==="defaults"||this.layer.fullExtent==null?"SceneView requires fullExtent to be specified by the user on WebTileLayer":"SceneView requires fullExtent to be specified in the same spatial reference as tileInfo on WebTileLayer";this.addResolvingPromise(Promise.reject(new l("layerview:incompatible-fullextent",p)))}}if(g(this,this.layer)){const t=new y({view:this.view,layerView:this,updatingHandles:this._updatingHandles});this._popupHighlightHelper=t,this.addHandles(m(t))}this._addTilingSchemeMatchPromise()}async fetchTile(t,e){return c(this,t,e)}async fetchPopupFeaturesAtLocation(t,e){return this._popupHighlightHelper?.fetchPopupFeaturesAtLocation(t,e)??[]}highlight(t,e){return this._popupHighlightHelper?.highlight(t,e)??n()}async doRefresh(){this.suspended||this.emit("data-changed")}};r([o()],i.prototype,"imageFormatIsOpaque",null),r([o()],i.prototype,"hasMixedImageFormats",null),r([o()],i.prototype,"layer",void 0),r([o()],i.prototype,"tileInfo",null),i=r([f("esri.views.3d.layers.TileLayerView3D")],i);const ht=i;export{ht as default};
