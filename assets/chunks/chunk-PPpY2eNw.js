import{ar as _,jq as v,n as h,ap as S,aq as u,aJ as w,e2 as b,jr as k,jt as E,ju as $,js as C,gf as A,fV as F,jv as P,a1 as G,jw as y,ep as I,f1 as H,fq as O,aX as R,jx as j,b_ as x,fl as Z,ai as r,aj as p,al as z}from"./chunk-CET6Djna.js";import{t as L}from"./chunk-DmxaQ-k8.js";import{a as M}from"./chunk-B_IOha9r.js";import{u as q}from"./chunk-5VjStRVH.js";import{f as W}from"./chunk-B8jzmtnn.js";import{L as N}from"./chunk-DLlSE_vX.js";import{i as J,o as T}from"./chunk-aaynBhca.js";import{i as g,r as V,n as m}from"./chunk-CCiw-fhx.js";import"./chunk-BoJEKryr.js";import"./chunk-aGeVxf8w.js";import"./chunk-D2kJmp7G.js";import"./chunk-BaeP0Xx2.js";import"./chunk-7RLATxET.js";import"./chunk-DIsNNcOB.js";import"./chunk-DwDDTbjg.js";import"./chunk-DGkpYqI6.js";import"./chunk-DZ8-zMu3.js";import"./chunk-BegjNO3d.js";const f="graphics-collections";let o=class extends _{get updating(){return this._updatingHandles.updating}get _hasZ(){const e=this.view;return e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,s=e!=null&&e.type==="3d";if(!s||t.type==="map-notes")return g();const i=async(a,n)=>(await v(e.whenLayerView(t),n)).elevationAlignPointsInFeatures(a,n);return g(s,{elevationInfo:t.elevationInfo,alignPointsInFeatures:i})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes";return V(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource,s=e!=null&&e.type==="3d",i=this._extrudedPolygonSymbolsCount>0;return s&&t.type!=="map-notes"&&i?m(i,(async(a,n)=>{const l=await e.whenLayerView(t);return h(n),l.queryForSymbologySnapping({candidates:a,spatialReference:e.spatialReference},n)})):m()}constructor(e){super(e),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0,this._updatingHandles=new S,this._memoizedMakeGetGroundElevation=L(J)}destroy(){for(const e of this._pendingAdds)e.task.abort();this._pendingAdds.length=0,this._mapSources((e=>this._destroySource(e))),this._updatingHandles.destroy()}initialize(){this._updatingHandles.add((()=>this.getGraphicsLayers()),(s=>{this._updatingHandles.removeHandles(f);for(const i of s)this._addMany(i.graphics.toArray()),this.addHandles([i.on("graphic-update",(a=>this._onGraphicUpdate(a))),this._updatingHandles.addOnCollectionChange((()=>i.graphics),(a=>this._onGraphicsChanged(a)))],f)}),u);const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="map-notes"&&e.elevationProvider&&this.addHandles([e.elevationProvider.on("elevation-change",(({context:s})=>{k(s,t.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()})),w((()=>t.elevationInfo),(()=>this._snappingElevationAligner.notifyElevationSourceChange()),u),b((()=>t),["edits","apply-edits","graphic-update"],(()=>this._symbologySnappingFetcher.notifySymbologyChange()))])}async fetchCandidates(e,t){const{point:s,coordinateHelper:{spatialReference:i}}=e,a=await E(this._mapSources((d=>this._fetchCandidatesForSource(d,e,t))));h(t);const n=this._memoizedMakeGetGroundElevation(this.view,i),l=a.flat().map((d=>T(d,n)));return $(s,l),l}async _fetchCandidatesForSource(e,t,s){const i=C({parameters:t,mode:this.view?.type??"2d"}),a=await q(e.queryEngine,i,s);h(s);const n=await this._snappingElevationAligner.alignCandidates(a.candidates,t.coordinateHelper.spatialReference,s);h(s);const l=await this._symbologySnappingFetcher.fetch(n,s);h(s);const d=l.length===0?n:[...n,...l];return this._snappingElevationFilter.filter(i,d)}refresh(){}_onGraphicUpdate(e){if(this.getGraphicsLayers().some((t=>t.graphics.includes(e.graphic))))switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],s=new Map;for(const i of e)i.geometry!=null&&(this._needsInitializeProjection(i.geometry.spatialReference)?(t.push(i.geometry.spatialReference),s.set(i.uid,i)):this._add(i));this._createPendingAdd(t,s)}_createPendingAdd(e,t){if(!e.length)return;const s=A((async n=>{await F(e.map((l=>({source:l,dest:this.spatialReference}))),{signal:n}),this._markLoadedSpatialReferences(e);for(const l of t.values())this._add(l)}));this._updatingHandles.addPromise(s.promise);const i={task:s,graphics:t},a=()=>P(this._pendingAdds,i);s.promise.then(a,a),this._pendingAdds.push(i)}_markLoadedSpatialReferences(e){for(const t of e){t.wkid!=null&&this._loadedWkids.add(t.wkid);const s=t.wkt2||t.wkt;s&&this._loadedWkts.add(s)}}_add(e){if(e.geometry==null||!e.visible)return;let t=e.geometry;if(t.type==="mesh")return;t.type==="extent"&&(t=G.fromExtent(t));const s=this._ensureSource(t.type);if(s==null)return;const i=this._createOptimizedFeature(e.uid,t);i!=null&&(s.featureStore.add(i),y(e.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(e){if(e.wkid!=null&&this._loadedWkids.has(e.wkid))return!1;const t=e.wkt2||e.wkt;return(!t||!this._loadedWkts.has(t))&&!I(e,this.spatialReference)}_createOptimizedFeature(e,t){const s=H(M(t),this.spatialReference);if(!s)return null;const i=this._ensureGeometryHasZ(s),a=O(i,this._hasZ,!1);return new R(a,{[c]:e},null,e)}_ensureGeometryHasZ(e){if(!this._hasZ)return e;const t=i=>{for(;i.length<3;)i.push(0)},s=e.clone();switch(s.hasZ=!0,s.type){case"point":s.z=s.z??0;break;case"multipoint":s.points.forEach(t);break;case"polyline":s.paths.forEach((i=>i.forEach(t)));break;case"polygon":s.rings.forEach((i=>i.forEach(t)))}return s}_ensureSource(e){const t=this._sources[e];if(t!=null)return t;const s=this._createSource(e);return this._sources[e]=s,s}_createSource(e){const t=j.toJSON(e),s=this._hasZ,i=new W({geometryType:t,hasZ:s,hasM:!1});return{featureStore:i,queryEngine:new N({featureStore:i,fieldsIndex:Z.fromLayerJSON({fields:[{name:c,type:"esriFieldTypeOID",alias:c}]}),geometryType:t,hasM:!1,hasZ:s,featureIdInfo:{type:"object-id",fieldName:c},spatialReference:this.spatialReference,priority:x.SNAPPING,scheduler:this.view!=null&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources((t=>this._removeFromSource(t,e)));for(const t of this._pendingAdds)t.graphics.delete(e.uid),t.graphics.size===0&&t.task.abort()}_removeFromSource(e,t){const s=t.uid;e.featureStore.has(s)&&(e.featureStore.removeById(t.uid),y(t.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(e){e.queryEngine.destroy(),this._sources[e.type]=null}_mapSources(e){const{point:t,polygon:s,polyline:i,multipoint:a}=this._sources,n=[];return t!=null&&n.push(e(t)),s!=null&&n.push(e(s)),i!=null&&n.push(e(i)),a!=null&&n.push(e(a)),n}};r([p()],o.prototype,"getGraphicsLayers",void 0),r([p({constructOnly:!0})],o.prototype,"layerSource",void 0),r([p({constructOnly:!0})],o.prototype,"spatialReference",void 0),r([p({constructOnly:!0})],o.prototype,"view",void 0),r([p({readOnly:!0})],o.prototype,"updating",null),r([p({readOnly:!0})],o.prototype,"availability",void 0),r([p()],o.prototype,"_hasZ",null),r([p()],o.prototype,"_snappingElevationAligner",null),r([p()],o.prototype,"_snappingElevationFilter",null),r([p()],o.prototype,"_symbologySnappingFetcher",null),r([p()],o.prototype,"_extrudedPolygonSymbolsCount",void 0),o=r([z("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],o);const c="OBJECTID";export{o as GraphicsSnappingSource};
