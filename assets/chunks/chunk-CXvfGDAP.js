import{fA as p,hV as m,d8 as s,aF as h,v as n,h$ as d,af as e,ag as a,ai as g}from"./chunk-CuaFhuP3.js";import"./chunk-Dpk1TJd9.js";import{M as u}from"./chunk-U3fYImM3.js";import"./chunk-iOPJXyP1.js";import"./chunk-DGmg3LSc.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */let t=class extends p(m(s)){update(r){this._strategy.update(r).catch((i=>{h(i)||n.getLogger(this).error(i)})),this.notifyChange("updating")}attach(){this._bitmapContainer=new d,this.container.addChild(this._bitmapContainer),this._strategy=new u({container:this._bitmapContainer,fetchSource:this.fetchBitmapData.bind(this),requestUpdate:this.requestUpdate.bind(this)})}detach(){this._strategy.destroy(),this._strategy=null,this.container.removeChild(this._bitmapContainer),this._bitmapContainer.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}fetchBitmapData(r,i,o){return this.layer.fetchImageBitmap(r,i,o)}async doRefresh(){this.requestUpdate()}isUpdating(){return this._strategy.updating||this.updateRequested}};e([a()],t.prototype,"_strategy",void 0),e([a()],t.prototype,"updating",void 0),t=e([g("esri.views.2d.layers.BaseDynamicLayerView2D")],t);const it=t;export{it as default};
