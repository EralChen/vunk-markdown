import{e8 as A,eg as _,ea as R,s as I,e9 as D,gU as Q,gV as P,gW as v,eb as Z,gX as G,ec as M,gO as F,f7 as N,aO as B,Y as z,ed as L,a4 as U,ef as W,gP as b,ee as Y,P as J,e7 as V,fY as O,gY as H,gZ as X,g_ as K}from"./chunk-DM6Pdl6C.js";import{u as ee}from"./chunk-CQIoVYR5.js";import{f as te}from"./chunk-wrvcZm8a.js";import{L as ie}from"./chunk-CZ7ctoP0.js";import{S as se,E as re,g as w,f as T,p as E,h as $}from"./chunk-B1ivOEGo.js";import"./chunk-xyJqyGK2.js";import"./chunk-CnRapvGM.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-SqlbPPT2.js";import"./chunk-Tjl4yUW5.js";import"./chunk-D1pW84tT.js";import"./chunk-BRW_4nMz.js";import"./chunk-M5O5w7aj.js";import"./chunk-CakXmuea.js";import"./chunk-B8Emtwce.js";import"./chunk-DVggFHPr.js";const ne={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsQueryAttachmentOrderByFields:!1,supportsQueryBins:!0,supportsQueryWithCacheHint:!0,supportsQueryWithDistance:!0,supportsQueryWithResultType:!0,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0},queryBinsCapabilities:se};class rt{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._createDefaultAttributes=null}async load(e,t={}){this._loadOptions={url:e.url,customParameters:e.customParameters};const s=[],[i]=await Promise.all([e.url?this._fetch(t?.signal):null,this._checkProjection(e.spatialReference)]),r=A(i,{geometryType:e.geometryType}),u=e.fields||r.fields||[],p=e.hasZ!=null?e.hasZ:r.hasZ,d=r.geometryType;let c=e.objectIdField||r.objectIdFieldName||"__OBJECTID";const h=e.spatialReference||_;let a=e.timeInfo;u===r.fields&&r.unknownFields.length>0&&s.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:r.unknownFields}});const o=new R(u);let l=o.get(c);l?(l.type!=="esriFieldTypeString"&&(l.type="esriFieldTypeOID"),l.editable=!1,l.nullable=!1,c=l.name):(l={alias:c,name:c,type:r.objectIdFieldType==="string"?"esriFieldTypeString":"esriFieldTypeOID",editable:!1,nullable:!1},u.unshift(l));const y={};for(const n of u){if(n.name==null&&(n.name=n.alias),n.alias==null&&(n.alias=n.name),!n.name)throw new I("geojson-layer:invalid-field-name","field name is missing",{field:n});if(!D.jsonValues.includes(n.type))throw new I("geojson-layer:invalid-field-type",`invalid type for field "${n.name}"`,{field:n});if(n.name!==l.name){const g=Q(n);g!==void 0&&(y[n.name]=g)}n.length==null&&(n.length=P(n))}if(a){if(a.startTimeField){const n=o.get(a.startTimeField);n?(a.startTimeField=n.name,n.type="esriFieldTypeDate"):a.startTimeField=null}if(a.endTimeField){const n=o.get(a.endTimeField);n?(a.endTimeField=n.name,n.type="esriFieldTypeDate"):a.endTimeField=null}if(a.trackIdField){const n=o.get(a.trackIdField);n?a.trackIdField=n.name:(a.trackIdField=null,s.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:a}}))}a.startTimeField||a.endTimeField||(s.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:a}}),a=null)}const m=d?M(d):void 0,q=o.dateFields.length?{timeZoneIANA:Z}:null,f={warnings:s,featureErrors:[],layerDefinition:{...ne,drawingInfo:m??void 0,templates:v(y),extent:void 0,geometryType:d,objectIdField:c,fields:u,hasZ:!!p,timeInfo:a,dateFieldsTimeReference:q}};this._queryEngine=new ie({fieldsIndex:R.fromLayerJSON({fields:u,timeInfo:a,dateFieldsTimeReference:q}),geometryType:d,hasM:!1,hasZ:p,objectIdField:c,spatialReference:h,timeInfo:a,featureStore:new te({geometryType:d,hasM:!1,hasZ:p})});const j=this._queryEngine.fieldsIndex.requiredFields.indexOf(l);j>-1&&this._queryEngine.fieldsIndex.requiredFields.splice(j,1),this._createDefaultAttributes=G(y,c);const x=await this._createFeatures(i);this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,x);const C=this._normalizeFeatures(x,f.featureErrors);this._queryEngine.featureStore.addMany(C);const{fullExtent:k,timeExtent:S}=await this._queryEngine.fetchRecomputedExtents();if(f.layerDefinition.extent=k,S){const{start:n,end:g}=S;f.layerDefinition.timeInfo.timeExtent=[n,g]}return f}async applyEdits(e){const{spatialReference:t,geometryType:s}=this._queryEngine;return await Promise.all([re(t,s),F(e.adds,t),F(e.updates,t)]),await this._waitSnapshotComplete(),this._applyEdits(e)}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),ee(this._queryEngine,e,t.signal)}async queryAttributeBins(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(e,t.signal)}async refresh(e){this._loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=N(this._snapshotFeatures),this._snapshotTask.promise.then(i=>{this._queryEngine.featureStore.clear(),this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,i);const r=this._normalizeFeatures(i);r&&this._queryEngine.featureStore.addMany(r)},i=>{this._queryEngine.featureStore.clear(),B(i)||z.getLogger("esri.layers.GeoJSONLayer").error(new I("geojson-layer:refresh","An error occurred during refresh",{error:i}))}),await this._waitSnapshotComplete();const{fullExtent:t,timeExtent:s}=await this._queryEngine.fetchRecomputedExtents();return{extent:t,timeExtent:s}}async _createFeatures(e){if(e==null)return[];const{geometryType:t,hasZ:s,objectIdField:i}=this._queryEngine,r=L(e,{geometryType:t,hasZ:s,objectIdField:i});if(!U(this._queryEngine.spatialReference,_))for(const u of r)u.geometry!=null&&(u.geometry=W(b(Y(u.geometry,this._queryEngine.geometryType,this._queryEngine.hasZ,!1),_,this._queryEngine.spatialReference)));return r}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(e){const{url:t,customParameters:s}=this._loadOptions,i=(await J(t??"",{responseType:"json",query:{...s},signal:e})).data;return V(i),i}_normalizeFeatures(e,t){const{objectIdField:s,fieldsIndex:i}=this._queryEngine,r=[];for(const u of e){const p=this._createDefaultAttributes(),d=w(i,p,u.attributes,!0);d?t?.push(d):(this._assignObjectId(p,u.attributes,!0),u.attributes=p,u.objectId=p[s],r.push(u))}return r}async _applyEdits(e){const{adds:t,updates:s,deletes:i}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t?.length&&this._applyAddEdits(r,t),s?.length&&this._applyUpdateEdits(r,s),i?.length){for(const d of i)r.deleteResults.push(T(d));this._queryEngine.featureStore.removeManyById(i)}const{fullExtent:u,timeExtent:p}=await this._queryEngine.fetchRecomputedExtents();return{extent:u,timeExtent:p,featureEditResults:r}}_applyAddEdits(e,t){const{addResults:s}=e,{geometryType:i,hasM:r,hasZ:u,objectIdField:p,spatialReference:d,featureStore:c,fieldsIndex:h}=this._queryEngine,a=[];for(const o of t){if(o.geometry&&i!==O(o.geometry)){s.push(E("Incorrect geometry type."));continue}const l=this._createDefaultAttributes(),y=w(h,l,o.attributes);if(y)s.push(y);else{if(this._assignObjectId(l,o.attributes),o.attributes=l,o.uid!=null){const m=o.attributes[p];e.uidToObjectId[o.uid]=m}if(o.geometry!=null){const m=o.geometry.spatialReference??d;o.geometry=b($(o.geometry,m),m,d)}a.push(o),s.push(T(o.attributes[p]))}}c.addMany(H([],a,i,u,r,p))}_applyUpdateEdits({updateResults:e},t){const{geometryType:s,hasM:i,hasZ:r,objectIdField:u,spatialReference:p,featureStore:d,fieldsIndex:c}=this._queryEngine;for(const h of t){const{attributes:a,geometry:o}=h,l=a?.[u];if(l==null){e.push(E(`Identifier field ${u} missing`));continue}if(!d.has(l)){e.push(E(`Feature with object id ${l} missing`));continue}const y=X(d.getFeature(l),s,r,i);if(o!=null){if(s!==O(o)){e.push(E("Incorrect geometry type."));continue}const m=o.spatialReference??p;y.geometry=b($(o,m),m,p)}if(a){const m=w(c,y.attributes,a);if(m){e.push(m);continue}}d.add(K(y,s,r,i,u)),e.push(T(l))}}_createObjectIdGenerator(e,t){const s=e.fieldsIndex.get(e.objectIdField);if(s.type==="esriFieldTypeString")return()=>s.name+"-"+Date.now().toString(16);let i=Number.NEGATIVE_INFINITY;for(const r of t)r.objectId&&(i=Math.max(i,r.objectId));return i=Math.max(0,i)+1,()=>i++}_assignObjectId(e,t,s=!1){const i=this._queryEngine.objectIdField;e[i]=s&&i in t?t[i]:this._objectIdGenerator()}async _checkProjection(e){try{await F(_,e)}catch{throw new I("geojson-layer","Projection not supported")}}}export{rt as default};
