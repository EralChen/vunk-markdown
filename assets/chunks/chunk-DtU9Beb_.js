import{an as O,ao as L,ap as R}from"./chunk-XGpVqsM_.js";function E(o,n,s){const e=Array.isArray(o),r=e?o.length/n:o.byteLength/(4*n),h=e?o:new Uint32Array(o,0,r*n),A=s?.minReduction??0,u=s?.originalIndices||null,q=u?u.length:0,i=s?.componentOffsets||null;let b=0;if(i)for(let t=0;t<i.length-1;t++){const a=i[t+1]-i[t];a>b&&(b=a)}else b=r;const w=Math.floor(1.1*b)+1;(c==null||c.length<2*w)&&(c=new Uint32Array(R(2*w)));for(let t=0;t<2*w;t++)c[t]=0;let f=0;const U=!!i&&!!u,m=U?q:r;let y=O(r);const p=new Uint32Array(q),k=1.96;let I=A!==0?Math.ceil(4*k*k/(A*A)*A*(1-A)):m,d=1,$=i?i[1]:m;for(let t=0;t<m;t++){if(t===I){const l=1-f/t;if(l+k*Math.sqrt(l*(1-l)/t)<A)return null;I*=2}if(t===$){for(let l=0;l<2*w;l++)c[l]=0;if(u)for(let l=i[d-1];l<i[d];l++)p[l]=y[u[l]];$=i[++d]}const a=U?u[t]:t,j=a*n,x=B(h,j,n);let g=x%w,C=f;for(;c[2*g+1]!==0;){if(c[2*g]===x){const l=c[2*g+1]-1;if(v(h,j,l*n,n)){C=y[l];break}}g++,g>=w&&(g-=w)}C===f&&(c[2*g]=x,c[2*g+1]=a+1,f++),y[a]=C}if(A!==0&&1-f/r<A)return null;if(U){for(let t=i[d-1];t<p.length;t++)p[t]=y[u[t]];y=L(p)}const M=e?new Array(f):new Uint32Array(f*n);f=0;for(let t=0;t<m;t++)y[t]===f&&(z(h,(U?u[t]:t)*n,M,f*n,n),f++);if(u&&!U){const t=new Uint32Array(q);for(let a=0;a<t.length;a++)t[a]=y[u[a]];y=L(t)}return{buffer:Array.isArray(M)?M:M.buffer,indices:y,uniqueCount:f}}function v(o,n,s,e){for(let r=0;r<e;r++)if(o[n+r]!==o[s+r])return!1;return!0}function z(o,n,s,e,r){for(let h=0;h<r;h++)s[e+h]=o[n+h]}function B(o,n,s){let e=0;for(let r=0;r<s;r++)e=o[n+r]+e|0,e=e+(e<<11)+(e>>>2)|0;return e>>>0}let c=null;export{E as e};
