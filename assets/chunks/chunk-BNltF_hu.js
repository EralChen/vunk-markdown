import{gX as m,H as i,gY as p,gZ as l,g_ as y}from"./chunk-Dx0VeHfy.js";import"./chunk-DHAEDrTs.js";function f(o){const t=o.toJSON();return t.attachmentTypes&&(t.attachmentTypes=t.attachmentTypes.join(",")),t.keywords&&(t.keywords=t.keywords.join(",")),t.globalIds&&(t.globalIds=t.globalIds.join(",")),t.objectIds&&(t.objectIds=t.objectIds.join(",")),t.size&&(t.size=t.size.join(",")),t.orderByFields&&(t.orderByFields=t.orderByFields.join(",")),t}function b(o,t){const e={};for(const s of t){const{parentObjectId:a,parentGlobalId:n,attachmentInfos:c}=s;for(const r of c){const{id:u}=r,h=p(l(`${o.path}/${a}/attachments/${u}`)),d=y.fromJSON(r);d.set({url:h,parentObjectId:a,parentGlobalId:n}),e[a]?e[a].push(d):e[a]=[d]}}return e}function g(o,t,e){let s={query:m({...o.query,f:"json",...f(t)})};return e&&(s={...e,...s,query:{...e.query,...s.query}}),i(o.path+"/queryAttachments",s).then((a=>a.data.attachmentGroups))}async function q(o,t,e){const{objectIds:s}=t,a=[];for(const n of s)a.push(i(o.path+"/"+n+"/attachments",e));return Promise.all(a).then((n=>s.map(((c,r)=>({parentObjectId:c,attachmentInfos:n[r].data.attachmentInfos})))))}export{g as executeAttachmentQuery,q as fetchAttachments,b as processAttachmentQueryResult};
