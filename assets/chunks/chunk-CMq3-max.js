import{J4 as ee,Il as te,Kz as Ee,Je as z,KE as Re,Ik as P,Iv as se,Iw as re,Iy as oe,IA as ie,KG as ae,KH as _,Kr as ne,aj as c,ak as p,am as O,nX as Pe,bf as Ce,Jv as Oe,Ju as Se,rU as xe,jh as F,qs as I,K_ as B,K$ as Te,Kv as Me,st as M,qY as W,qr as d,L0 as De,me as J,xU as Fe,xV as Ie,L1 as Ne,ma as ke,mb as Ve,as as le,aK as R,ar as D,aD as C,b5 as je,au as Q,bj as qe,V as Ge,aQ as Le,lP as Ke,a3 as He,h as Ue,br as ze,bs as Be,g3 as We,jD as Je,ba as Qe,f2 as Ye,jC as Xe,nA as Ze,ki as et,k3 as tt,bg as st,an as Y,kv as rt,A as ot,s as it}from"./chunk-XGpVqsM_.js";import{t as at}from"./chunk-DYuwMEhu.js";import{e as nt}from"./chunk-DpmArOPE.js";import{fromSpatialReference as lt,fromPolygon as ut,toPolygon as ct}from"./chunk-DSo0DT4y.js";import{p as mt,n as pt}from"./chunk-BTtzROLn.js";import{_ as ue}from"./chunk-Dix477Sg.js";import{j as ht}from"./chunk-LcC1NJb4.js";import"./chunk-DyqHK6XP.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CrMA_peF.js";import"./chunk-B92kdZ15.js";import"./chunk-DSTRjkE3.js";import"./chunk-Da9IW-EP.js";import"./chunk-BUVSeX7E.js";import"./chunk-RvJNgVq9.js";import"./chunk-DP7_WWTp.js";import"./chunk-DjrwEoDI.js";import"./chunk-DGkpYqI6.js";import"./chunk-CsjFZm7e.js";import"./chunk-cMC_YIeN.js";import"./chunk-DtU9Beb_.js";import"./chunk-o5MA_ypu.js";import"./chunk-FFoKj2y0.js";import"./chunk-BmWCw_dr.js";import"./chunk-B_0s3AtF.js";import"./chunk-Clz6sbo3.js";var w;(function(e){e[e.BRIGHT=0]="BRIGHT",e[e.DARK=1]="DARK"})(w||(w={}));let N=class extends ee{constructor(){super(...arguments),this.effect=w.BRIGHT}};function ce(){const e=new te;return e.include(Ee),e.outputs.add("fragColor","vec4",0),e.fragment.uniforms.add(new z("colorTexture",(t=>t.color)),new z("focusArea",(t=>t.focusArea)),new Re("focusAreaEffectMode",(t=>t.effect))).main.add(P`
      float mask = texture( focusArea, uv, 0.0 ).r;
      vec4 color = texture( colorTexture, uv, 0.0 );
      vec4 colorDeSaturate = vec4(color.r * 0.25 + color.g * 0.5 + color.b * 0.25);
      if (focusAreaEffectMode == ${P.int(w.BRIGHT)}) {
        fragColor = mask > 0.0 ? color : 0.55 * colorDeSaturate + 0.45;
      } else {
        fragColor = mask > 0.0 ? color : 0.33 * mix(color, colorDeSaturate, 0.);
      }
  `),e}const dt=Object.freeze(Object.defineProperty({__proto__:null,FocusAreaColorPassParameters:N,build:ce},Symbol.toStringTag,{value:"Module"}));class X extends se{constructor(t,s){super(t,s,new re(dt,(()=>ue(()=>Promise.resolve().then(()=>At),void 0))))}initializePipeline(){return oe({colorWrite:ie})}}let f=class extends ae{constructor(e){super({...e,view:e.focusAreasView.view}),this.consumes={required:[_.FOCUSAREA_COLOR,_.FOCUSAREA]},this.produces=_.FOCUSAREA_COLOR,this._passParameters=new N}precompile(){this.techniques.precompile(X)}render(e){const t=this.techniques.get(X),s=e.find((({name:m})=>m===this.produces));if(!t.compiled)return this.requestRender(),s;const a=this.focusAreasView.style,i=this.bindParameters,n=i.camera,r=n.fullViewport[2],o=n.fullViewport[3],l=e.find((({name:m})=>m===_.FOCUSAREA)),h=this.fboCache.acquire(r,o,this.produces),u=this.renderingContext;return u.bindFramebuffer(h.fbo),this._passParameters.color=s.getTexture(),this._passParameters.focusArea=l.getTexture(),this._passParameters.effect=ft[a],u.bindTechnique(t,i,this._passParameters),u.screen.draw(),h.attachDepth(s.getAttachment(ne)),h}};c([p()],f.prototype,"consumes",void 0),c([p()],f.prototype,"produces",void 0),c([p({constructOnly:!0})],f.prototype,"focusAreasView",void 0),f=c([O("esri.views.3d.webgl-engine.effects.focusArea.FocusAreaColorNode")],f);const ft={bright:w.BRIGHT,dark:w.DARK};class k extends ee{constructor(){super(...arguments),this.origin=Pe}}function me(){const e=new te;return e.attributes.add(Ce.POSITION,"vec3"),e.outputs.add("fragColor","vec4",0),e.vertex.uniforms.add(new Oe("proj",(t=>t.camera.projectionMatrix)),new Se("view",((t,s)=>xe(gt,s.camera.viewMatrix,t.origin)))).main.add(P`gl_Position = proj * view * vec4(position, 1.0);
gl_Position.z = min(gl_Position.z, gl_Position.w);`),e.fragment.main.add(P`fragColor = vec4(1., 0., 0., 0.);`),e}const gt=F(),_t=Object.freeze(Object.defineProperty({__proto__:null,FocusAreaMaskDrawParameters:k,build:me},Symbol.toStringTag,{value:"Module"}));class Z extends se{constructor(t,s){super(t,s,new re(_t,(()=>ue(()=>Promise.resolve().then(()=>yt),void 0))))}initializePipeline(){return oe({colorWrite:ie,depthTest:{func:I.LEQUAL}})}}let g=class extends ae{constructor(e){super({...e,view:e.focusAreasView.view}),this.consumes={required:[B.TRANSPARENT]},this.produces=_.FOCUSAREA,this._vaos=new Array,this._counts=new Array,this._origins=new Array,this._maskParameters=new k}initialize(){this.updateGeometries()}destroy(){this._vaos.forEach((e=>e.dispose())),this._vaos.length=this._counts.length=this._origins.length=0}precompile(){this.techniques.precompile(Z)}render(e){const t=this.techniques.get(Z),s=this.bindParameters,a=s.camera,i=a.fullViewport[2],n=a.fullViewport[3];if(!t.compiled||!this._vaos)return void this.requestRender();const r=e.find((({name:u})=>u===B.TRANSPARENT)),o=this.renderingContext,l=this.fboCache.acquire(i,n,_.FOCUSAREA,Te.RG8UNORM);this.view.stage.renderer.occludedRequiresStencil?(l.acquireDepth(Me.DEPTH24_STENCIL8),o.blitFramebuffer(r.fbo,l.fbo,M.DEPTH)):l.attachDepth(r.getAttachment(ne)),o.bindFramebuffer(l.fbo),o.setClearColor(0,0,0,1),o.clear(M.COLOR|M.STENCIL),o.setViewport(0,0,i,n);const h=o.bindTechnique(t,s);o.setFaceCullingEnabled(!1),o.setStencilTestEnabled(!0),o.setStencilOpSeparate(W.FRONT,d.KEEP,d.INCR_WRAP,d.KEEP),o.setStencilOpSeparate(W.BACK,d.KEEP,d.DECR_WRAP,d.KEEP),o.setDepthWriteEnabled(!1);for(let u=0;u<this._vaos.length;u++){const m=this._vaos[u],v=this._counts[u];this._maskParameters.origin=this._origins[u],h.bindDraw(s,De,this._maskParameters),o.bindVAO(m),o.setDepthTestEnabled(!0),o.setStencilWriteMask(255),o.setStencilFunction(I.ALWAYS,0,255),o.setColorMask(!1,!1,!1,!1),o.drawArrays(J.TRIANGLES,0,v),o.setDepthTestEnabled(!1),o.setStencilWriteMask(0),o.setStencilFunction(I.NOTEQUAL,0,255),o.setColorMask(!0,!0,!0,!0),o.drawArrays(J.TRIANGLES,0,v)}return l}updateGeometries(){this.view.stage&&(this._vaos.forEach((e=>e.dispose())),this._vaos.length=this._counts.length=this._origins.length=0,this.focusAreasView.volumes.forEach((e=>e.forEach((t=>{const s=new Array,a=t.indicesBottom;for(let r=0;r<a.length;r++)s.push(t.positions[3*(a[r]-1)]),s.push(t.positions[3*(a[r]-1)+1]),s.push(t.positions[3*(a[r]-1)+2]);const i=t.indicesExtruded;for(let r=0;r<i.length;r++)s.push(t.positions[3*i[r]]),s.push(t.positions[3*i[r]+1]),s.push(t.positions[3*i[r]+2]);const n=new Fe(this.renderingContext,Ie,new Map([["geometry",Ne]]),new Map([["geometry",ke.createVertex(this.renderingContext,Ve.STATIC_DRAW,new Float32Array(s))]]));this._vaos.push(n),this._counts.push(a.length+i.length),this._origins.push(t.origin)})))),this.requestRender())}};c([p()],g.prototype,"consumes",void 0),c([p()],g.prototype,"produces",void 0),c([p({constructOnly:!0})],g.prototype,"focusAreasView",void 0),g=c([O("esri.views.3d.webgl-engine.effects.focusArea.FocusAreaMaskNode")],g);class wt{constructor(t,s,a,i,n){this.positions=t,this.indicesBottom=s,this.indicesExtruded=a,this.height=i,this.origin=n}}let y=class extends le{constructor(e){super(e)}initialize(){this.addHandles([R((()=>this.area.enabled),(()=>this._ensureElement()),D),R((()=>this.area.outline?.color),(e=>this._updateColor(e)),D),R((()=>this.area.geometries),(e=>this._updateGeometries(e)),D)])}destroy(){this.removeAllHandles(),this._outlineElement=C(this._outlineElement)}_ensureElement(){this.area.enabled&&this.area.outline?.color?this._outlineElement??=new ht({view:this.view,geometry:this._mergePolygons(this.area.geometries),isDraped:!0,attached:!0,isDecoration:!1,color:Q.toUnitRGBA(this.area.outline?.color),renderOccluded:je.OccludeAndTransparent,width:3}):this._outlineElement=C(this._outlineElement)}_updateGeometries(e){this._ensureElement(),this._outlineElement&&(this._outlineElement.geometry=this._mergePolygons(e))}_updateColor(e){this._ensureElement(),this._outlineElement&&e&&(this._outlineElement.color=Q.toUnitRGBA(e))}_mergePolygons(e){if(!e||e.length===0)return null;const t=e.at(0).clone();return e.forEach((s=>{t.rings.push(...s.rings)})),t}};c([p({constructOnly:!0})],y.prototype,"view",void 0),c([p({constructOnly:!0})],y.prototype,"area",void 0),y=c([O("esri.views.3d.webgl-engine.effects.focusArea.FocusAreaOutlineItem")],y);const vt=2e4;let E=class extends le{constructor(e){super(e),this._volumes=new Map,this._elevationContext=new qe,this._outlineMap=new Ge}initialize(){this.addHandles([R((()=>this.polygons),(e=>this._updateVolumes(e)),Le)]),this._outlineMap=Ke((()=>this.areas?.areas),(e=>new y({area:e,view:this.view})),{recycleItems:!0})}destroy(){this.removeAllHandles(),this._outlineMap.destroy()}get areas(){return this.view.map?.focusAreas}get enabledAreas(){return this.areas?.areas.toArray().filter((({enabled:e})=>e))??[]}get style(){return this.areas?.style??"bright"}get polygons(){return this.enabledAreas.reduce(((e,t)=>e.concat(t.geometries.toArray())),new Array)}containsGeometry(e){if(this.polygons.length===0)return!0;const t=new He(e);return this.polygons.some((s=>s.contains(t)))}_updateVolumes(e){this._extrude(e),this._ensureRenderNodes()}_extrude(e){if(!this.view.renderCoordsHelper||Ue(Array.from(this._volumes.keys()),e))return;const t=this.view.renderCoordsHelper,s=Qe(),a=t.viewingMode===ze.Global,i=F(),n=F(),r=this.view.spatialReference,o=lt(r),l=Be(r).radius/We.radius,h=Je(5e5*l,"meters",r,!0);a||t.worldUpAtPosition([0,0,0],s);const u=new Map;for(const m of e){const v=this._volumes.get(m);if(v)u.set(m,v);else try{const A=r.equals(m.spatialReference)?m:Ye(m,r),pe=Math.max(A.extent.width,A.extent.height),he=Xe(pe,r,"meters",!0),S=Math.max(5*he,vt*l),de=a?l/10:l,V=this._reduceGeometryHeight(A,S,de),x=Ze(V);if(x==null)continue;const j=ut(V),fe=nt(j,o,!1)??j,ge=at(fe,h,0,0),q=ct(ge,r);if(q==null)continue;et(r,[x.x,x.y,0],i,t.spatialReference),n[12]=-i[12],n[13]=-i[13],n[14]=-i[14];const _e=mt(q,this.view.elevationProvider,t,this._elevationContext),{polygons:we,mapPositions:ve,position:Ae}=_e,G=new Array;for(const $ of we){const ye=$.count,T=tt($.mapPositions,$.holeIndices,3);if(T.length===0)continue;const L=T.length,K=6*ye,$e=K+L,b=st(3*K),H=Y($e),U=Y(L);pt(Ae,ve,T,$,b,null,null,null,H,U,S,s,a),rt(b,b,n);const be=new wt(b,U,H,S,[i[12],i[13],i[14]]);G.push(be)}u.set(m,G)}catch(A){ot.getLogger(this).error(new it("focusareasview:projection-failed","Failed to project focus area geometry to view spatial reference",{geometry:m,error:A}))}}this._volumes=u,this._maskRenderNode?.updateGeometries()}_ensureRenderNodes(){this.view.stage&&(this.volumes.size===0?(this._maskRenderNode=C(this._maskRenderNode),this._colorRenderNode=C(this._colorRenderNode)):(this._maskRenderNode??=new g({focusAreasView:this}),this._colorRenderNode??=new f({focusAreasView:this}),this.view.stage.renderView.requestRender()))}_reduceGeometryHeight(e,t,s){const a=-12e5*s,i=Math.max(-t/2,a),n=e.rings.map((o=>o.map((l=>[l[0],l[1],i])))),r=e.clone();return r.rings=n,r.hasZ=!0,r}get volumes(){return this._volumes}};c([p()],E.prototype,"_volumes",void 0),c([p({constructOnly:!0})],E.prototype,"view",void 0),E=c([O("esri.views.3d.FocusAreasView")],E);const At=Object.freeze(Object.defineProperty({__proto__:null,FocusAreaColorPassParameters:N,build:ce},Symbol.toStringTag,{value:"Module"})),yt=Object.freeze(Object.defineProperty({__proto__:null,FocusAreaMaskDrawParameters:k,build:me},Symbol.toStringTag,{value:"Module"}));export{E as FocusAreasView};
