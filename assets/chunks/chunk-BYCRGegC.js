import{ck as E,s as S,hA as T,Y as I,O as G,C as J,U as M,cn as g,dp as Y,dL as z}from"./chunk-Br7Cq08f.js";import{t as N}from"./chunk-BPVd6ESQ.js";import{r as F,i as O}from"./chunk-DYChvYn6.js";import"./chunk-CPn_Zo84.js";import"./chunk-DyzdzEp-.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-SqlbPPT2.js";let m=null;function V(e,o,r,n={}){const a=o.elementType,i="value",s=a.type==="array"?[{name:i,type:a.type,elementType:a.elementType}]:a.type==="dictionary"?[{name:i,type:a.type,properties:a.properties}]:[{name:i,type:a.type}];return new N(e.map(p=>{const t={};return w(t,s,{[i]:p},r,n),t[i]}))}function q(e,o,r={}){const n=e instanceof Y?new z({source:e.features,geometryType:e.geometryType,fields:e.fields,spatialReference:e.spatialReference}):e;return o.constructFeatureSet(n,r.spatialReference,null,!0,r.lruCache,r.interceptor)}function B(e,o,r={}){const{spatialReference:n,interceptor:a,lruCache:i}=r;return typeof e=="string"?o.createFeatureSetCollectionFromService(e,n,i,a):o.createFeatureSetCollectionFromMap(e,n,i,a)}function H(e,o,r,n={}){const a={};return w(a,o.properties,e,r,n),new m.Dictionary(a)}function w(e,o,r,n,a={}){const i={};for(const s of Object.keys(r))i[s.toLowerCase()]=r[s];for(const s of o){const p=s.name.toLowerCase();if(a.variablesPreProcessed)e[p]=i[p];else switch(s.type){case"array":{const t=i[p];e[p]=t==null?null:V(t,s,n,a);break}case"feature":{const t=i[p];e[p]=t==null?null:m.Feature.createFromGraphic(t,a?.timeZone);break}case"featureSet":{const t=i[p];e[p]=t==null?null:n?q(t,n,a):null;break}case"featureSetCollection":{const t=i[p];e[p]=t==null?null:n?B(t,n,a):null;break}case"dictionary":{const t=i[p];e[p]=t==null?null:H(t,s,n,a);break}case"date":{const t=i[p];e[p]=t?t instanceof g?t:a?.timeZone?g.dateJSAndZoneToArcadeDate(t,a?.timeZone):g.dateJSToArcadeDate(t):null;break}case"dateOnly":{const t=i[p];e[p]=t?t instanceof O?t:O.fromReader(t):null;break}case"time":{const t=i[p];e[p]=t?t instanceof F?t:F.fromReader(t):null;break}case"knowledgeGraph":case"geometry":case"boolean":case"text":case"number":e[p]=i[p];break;case"voxel":{const t=i[p];e[p]=t==null?null:new m.Voxel(t,a?.timeZone);break}}}}function D(e,o){for(const r of e)o.push(r),r.type==="dictionary"&&D(r.properties,o);return o}function R(e,o,r,n,a){const{spatialReference:i,interceptor:s,lruCache:p,console:t,abortSignal:y,timeZone:u,services:$={portal:J.getDefault()}}=r,f={vars:{},spatialReference:i,interceptor:s,timeZone:u,lrucache:p,useAsync:a,services:$,console:t,abortSignal:y};return o&&w(f.vars,e.variables,o,n,r),f}function v(e,o){switch(o.getArcadeType(e)){case"number":case"text":case"boolean":case"point":case"polygon":case"polyline":case"multipoint":case"extent":return e;case"date":return e.toJSDate();case"time":case"dateOnly":return e.toString();case"feature":{const r=(e.type,e),n="geometry"in r?r.geometry():null,a="readAttributes"in r?r.readAttributes():r.attributes;return new M({geometry:n,attributes:a})}case"dictionary":{const r=e,n=r.attributes,a={};for(const i of Object.keys(n))a[i]=v(r.field(i),o);return a}case"array":return("toArray"in e?e.toArray():e).map(r=>v(r,o))}return e}const P={variables:[{name:"$feature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$userInput",type:"geometry"},{name:"$graph",type:"knowledgeGraph"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},L={variables:[{name:"$feature",type:"feature"},{name:"$aggregatedFeatures",type:"featureSet"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},U={variables:[{name:"$voxel",type:"voxel"}]},Z=new Map([["aggregate-field",{variables:[{name:"$feature",type:"feature"}]}],["form-constraint",{variables:[{name:"$feature",type:"feature"}]}],["feature-z",{variables:[{name:"$feature",type:"feature"}]}],["field-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$datastore",type:"featureSetCollection"}]}],["form-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$originalFeature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$featureSet",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$editContext",type:"dictionary",properties:[{name:"editType",type:"text"}]}]}],["labeling",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup",P],["popup-element",P],["popup-feature-reduction",L],["popup-element-feature-reduction",L],["visualization",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup-voxel",U],["popup-element-voxel",U]]);function je(e){e==="feature-reduction-popup"?(T(I.getLogger("esri.arcade"),'profile name: "feature-reduction-popup"',{replacement:'"popup-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-feature-reduction"):e==="feature-reduction-popup-element"&&(T(I.getLogger("esri.arcade"),'profile name: "feature-reduction-popup-element"',{replacement:'"popup-element-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-element-feature-reduction");const o=Z.get(e);if(!o){const r=Array.from(Z.keys()).map(n=>`'${n}'`).join(", ");throw new S("createArcadeProfile:invalid-profile-name",`Invalid profile name '${e}'. You must specify one of the following values: ${r}`)}return G(o)}async function Ee(e,o,r={}){m||(m=await E());const{arcade:n,arcadeUtils:a}=m,{loadScriptDependencies:i,referencesMember:s,scriptIsAsync:p}=n,t=D(o.variables,[]),y=t.filter(c=>c.type==="featureSet"||c.type==="featureSetCollection").map(c=>c.name.toLowerCase()),u=n.parseScript(e,y);if(!u)throw new S("arcade:invalid-script","Unable to create SyntaxTree");const $=a.extractFieldNames(u),f=n.scriptTouchesGeometry(u),C=t.map(c=>c.name.toLowerCase()).filter(c=>s(u,c)),l=p(u,y);await i(u,l,y);const h={vars:{},spatialReference:null,useAsync:l};for(const c of C)h.vars[c]="any";const{lruCache:x}=r,A=n.compileScript(u,h),k=n.featureSetUtils(),{services:j}=r;return{execute:(c,d={})=>{if(l)throw new S("arcade:invalid-execution-mode","Cannot execute the script in synchronous mode");const b=A(R(o,c,{lruCache:x,...d},k,l));return d.rawOutput?b:v(b,a)},executeAsync:async(c,d={})=>{const b=await A(R(o,c,{lruCache:x,services:j,...d},k,l));return d.rawOutput?b:v(b,a)},isAsync:l,variablesUsed:C,fieldsUsed:$,geometryUsed:f,syntaxTree:u}}export{Ee as createArcadeExecutor,je as createArcadeProfile};
