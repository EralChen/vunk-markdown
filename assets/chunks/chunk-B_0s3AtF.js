import{bg as T,bm as E,bn as w,bo as I,bf as c,bp as b,bq as g,br as R,bs as A,bt as F,bu as m,bv as h,bw as D,bx as O}from"./chunk-XGpVqsM_.js";function $(t,n,a=null){const e=[],s=n.mapPositions;d(n,e);const o=e[0][1].data,u=e[0][1].indices.length,r=E(u);return v(n,e,r),U(n,e,r),y(n,e,r),S(n,e,r),C(n,e,r),z(n,e,r),L(n,e,o),new w(t,e,s,I.Line,a)}function d(t,n){const{attributeData:{position:a},removeDuplicateStartEnd:e}=t,s=B(a)&&e,o=a.length/3-(s?1:0),u=new Array(2*(o-1)),r=s?a.slice(0,-3):a;let i=0;for(let f=0;f<o-1;f++)u[i++]=f,u[i++]=f+1;n.push([c.POSITION,new b(r,u,3,s)])}function v(t,n,a){if(t.attributeData.colorFeature!=null)return;const e=t.attributeData.color;n.push([c.COLOR,new b(e??g,a,4)])}function y(t,n,a){t.attributeData.normal&&n.push([c.NORMAL,new b(t.attributeData.normal,a,3)])}function S(t,n,a){t.attributeData.colorFeature!=null&&n.push([c.COLORFEATUREATTRIBUTE,new b([t.attributeData.colorFeature],a,1,!0)])}function U(t,n,a){t.attributeData.sizeFeature==null&&n.push([c.SIZE,new b([t.attributeData.size??1],a,1,!0)])}function C(t,n,a){t.attributeData.sizeFeature!=null&&n.push([c.SIZEFEATUREATTRIBUTE,new b([t.attributeData.sizeFeature],a,1,!0)])}function z(t,n,a){t.attributeData.opacityFeature!=null&&n.push([c.OPACITYFEATUREATTRIBUTE,new b([t.attributeData.opacityFeature],a,1,!0)])}function L(t,n,a){if(t.overlayInfo==null||t.overlayInfo.renderCoordsHelper.viewingMode!==R.Global||!t.overlayInfo.spatialReference.isGeographic)return;const e=T(a.length),s=A(t.overlayInfo.spatialReference);for(let l=0;l<e.length;l+=3)F(a,l,e,l,s);const o=a.length/3,u=m(o+1);let r=G,i=N,f=0,p=0;h(r,e[p++],e[p++]),p++,u[0]=0;for(let l=1;l<o+1;++l)l===o&&(p=0),h(i,e[p++],e[p++]),p++,f+=O(r,i),u[l]=f,[r,i]=[i,r];n.push([c.DISTANCETOSTART,new b(u,n[0][1].indices,1,!0)])}function B(t){const n=t.length;return t[0]===t[n-3]&&t[1]===t[n-2]&&t[2]===t[n-1]}const G=D(),N=D();function x(t,n){if(t==null||t.length===0)return[];const a=[];return t.forEach((e=>{const s=e.length,o=T(3*s);e.forEach(((r,i)=>{o[3*i]=r[0],o[3*i+1]=r[1],o[3*i+2]=r[2]}));const u={attributeData:{position:o,normal:n},removeDuplicateStartEnd:!1};a.push(u)})),a}export{x as R,$ as b};
