import{s as n,cR as h,ar as d,au as c}from"./chunk-CxUoqtmM.js";import{N as l}from"./chunk-BdrNthrf.js";import{m as u}from"./chunk-qR5u7KJH.js";import"./chunk-BU9ye7sd.js";import"./chunk-RlmIMeXG.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-BjGKzYTP.js";import"./chunk-D128fmzd.js";import"./chunk-wx-GVXN_.js";import"./chunk-C3piu2O_.js";import"./chunk-yTxvSJtv.js";import"./chunk-CSCXhQIc.js";import"./chunk-CEobgZpQ.js";let e=class extends u(l){constructor(){super(...arguments),this.type="wms-3d"}initialize(){this.layer.serviceSupportsSpatialReference(this.view.spatialReference)||this.addResolvingPromise(Promise.reject(new n("layerview:spatial-reference-incompatible","The spatial references supported by this WMS layer are incompatible with the spatial reference of the view"))),this._updatingHandles.add(()=>this.exportImageParameters?.version,()=>{this._updatingHandles.addPromise(this.refreshDebounced())})}createFetchPopupFeaturesQuery(r){const o=this.findExtentInfoAt(r),t=o.extent,i=new h(t[0],t[1],t[2],t[3],this._spatialReference),p=o.imageSize,m=p.width,a=p.height,s=i.width/m;return{extent:i,width:m,height:a,x:Math.round((r.x-i.xmin)/s),y:Math.round((i.ymax-r.y)/s)}}getFetchOptions(){return{timeExtent:this.timeExtent}}};e=d([c("esri.views.3d.layers.WMSLayerView3D")],e);const nt=e;export{nt as default};
