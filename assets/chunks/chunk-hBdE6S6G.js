import{fM as m,dp as d,cR as g,ha as f,ar as o,as as a,au as c,s as p,aJ as v,gJ as x,aM as F,c2 as k,aV as O}from"./chunk-B93eA3hr.js";import{t as _}from"./chunk-CFJn9DiA.js";import{_ as S}from"./chunk-VkCGSQrc.js";import{s as H}from"./chunk-e4Y5b9eW.js";import"./chunk-DB56luzt.js";import"./chunk-CjSkIgyx.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-SqlbPPT2.js";import"./chunk-D9yiihRR.js";import"./chunk-foaXgIdR.js";import"./chunk-BRWOunmQ.js";import"./chunk-CZnWL1fi.js";import"./chunk-BsxISLil.js";import"./chunk-BmSxS8n-.js";import"./chunk-BQSpU6Vd.js";import"./chunk-CcEbRgUF.js";import"./chunk-D_ldIdAe.js";import"./chunk-BpxnJG6g.js";import"./chunk-tlKg2Kq5.js";import"./chunk-C3xWNWGY.js";import"./chunk-D43_eE1C.js";import"./chunk-Dc8--CBJ.js";import"./chunk-Co3jbc3v.js";import"./chunk-CDz-0BJV.js";import"./chunk-5L-Jknhu.js";import"./chunk-Cu3483kq.js";import"./chunk-BW_dPuvz.js";import"./chunk-CBAty7_Z.js";import"./chunk-MxgnB-S-.js";import"./chunk-D4Dxr6ZW.js";import"./chunk-CJudH1Q_.js";import"./chunk-BIQIW3r7.js";import"./chunk-Dv35ZvPT.js";import"./chunk-B4mRqufT.js";import"./chunk-D3GFUX6z.js";let n=class extends m{constructor(e){super(e),this.schedule=null,this._workerUpdating=!0}get updating(){return this._workerUpdating}initialize(){this._workerHandle=new Q(this.schedule,this);const{layer:e,viewSpatialReference:t,renderSpatialReference:r}=this;this.addResolvingPromise((async()=>{await e.load();const{fullExtent:i}=e;await this._workerHandle.invokeMethod("setup",{url:e.parsedUrl?.path??"",baseQuery:e.createQuery().toJSON(),viewSpatialReference:t.toJSON(),renderSpatialReference:r.toJSON(),viewingMode:this.viewingMode,objectIdField:e.objectIdField,capabilities:e.capabilities,timeInfo:e.timeInfo?.toJSON(),fieldsIndex:e.fieldsIndex.toJSON(),fullExtent:i?.toJSON()})})()),this.addHandles(this._workerHandle.on("notify-updating",({updating:i})=>{this._workerUpdating=i}))}onTileTreeChange({added:e,removed:t}){if(e.length===0&&t.length===0)return;const r=e.map(l),i=t.map(l);this._workerHandle.invokeMethod("onTileTreeChange",{added:r,removed:i})}async executeQuery(e,t){const r=await this._workerHandle.invokeMethod("executeQuery",e?.toJSON(),t),i=d.fromJSON(r);return this._ensureLayerOnFeatures(i),i}async executeQueryForIds(e,t){return await this._workerHandle.invokeMethod("executeQueryForIds",e?.toJSON(),t)}async executeQueryForCount(e,t){return await this._workerHandle.invokeMethod("executeQueryForCount",e?.toJSON(),t)}async executeQueryForExtent(e,t){const{count:r,extent:i}=await this._workerHandle.invokeMethod("executeQueryForExtent",e?.toJSON(),t);return{count:r,extent:g.fromJSON(i)}}async executeQueryForLatestObservations(e,t){const r=await this._workerHandle.invokeMethod("executeQueryForLatestObservations",e?.toJSON(),t),i=d.fromJSON(r);return this._ensureLayerOnFeatures(i),i}_ensureLayerOnFeatures(e){const{layer:t}=this;for(const r of e.features)r.layer=t,r.sourceLayer=t}};o([a()],n.prototype,"updating",null),o([a({constructOnly:!0})],n.prototype,"schedule",void 0),o([a({constructOnly:!0})],n.prototype,"layer",void 0),o([a({constructOnly:!0})],n.prototype,"viewSpatialReference",void 0),o([a({constructOnly:!0})],n.prototype,"renderSpatialReference",void 0),o([a({constructOnly:!0})],n.prototype,"viewingMode",void 0),o([a({constructOnly:!0})],n.prototype,"dispatchRenderCommands",void 0),o([a()],n.prototype,"_workerUpdating",void 0),n=o([c("esri.views.3d.layers.graphics.pipeline.Feature3DPipelineWorkerHandle")],n);class Q extends f{constructor(t,r){super("Feature3DPipelineWorker","setup",{},t,{strategy:"dedicated",client:r})}}function l({id:e,lij:t,extent:r}){return{id:e,lij:t,extent:r}}let u=class extends m{constructor(e){super(e),this._renderer=null,this.graphicsQuery={queryForSymbologySnapping:(t,r)=>{throw new p("unsupported-symbology-snapping")},executeQuery:async(t,r)=>await this._workerHandle.executeQuery(t,r),executeQueryForIds:async(t,r)=>await this._workerHandle.executeQueryForIds(t,r),executeQueryForCount:async(t,r)=>await this._workerHandle.executeQueryForCount(t,r),executeQueryForExtent:async(t,r)=>await this._workerHandle.executeQueryForExtent(t,r),executeQueryForLatestObservations:async(t,r)=>await this._workerHandle.executeQueryForLatestObservations(t,r)},this.maximumNumberOfFeatures=1e3}initialize(){if(this.layerView.layer.geometryType!=="point")throw new p("unsupported-geometry-type",`${this.layerView.layer.geometryType} is not supported`);this.addResolvingPromise(this.setup())}destroy(){this.removeAllHandles(),this._workerHandle.destroy(),v(this._renderer)}async setup(){const{layer:e,view:t}=this.layerView,{spatialReference:r,renderSpatialReference:i,resourceController:y}=t,h=t.state.viewingMode;if(this._renderer=new S({view:t,layerUid:e.uid}),e.type!=="feature")throw new Error("Only FeatureLayer is supported");const w=new n({schedule:s=>y.immediate.schedule(s),layer:e,viewSpatialReference:r,renderSpatialReference:i,viewingMode:h,dispatchRenderCommands:s=>this._renderer.executeRenderCommands(s)});this._workerHandle=await w.when(),this.addHandles([this.layerView.view.featureTiles.addClient(),x(()=>this.layerView.view.featureTiles.tiles,"change",s=>{this._workerHandle.onTileTreeChange(s)},{onListenerAdd:s=>this._workerHandle.onTileTreeChange({added:s.toArray(),removed:[]}),onListenerRemove:s=>this._workerHandle.onTileTreeChange({added:[],removed:s.toArray()})})])}get legendEnabled(){return!1}get hasAllFeatures(){return!1}get hasAllFeaturesInView(){return!1}get hasFullGeometries(){return!1}get symbologySnappingSupported(){return!1}get scaleVisibilitySuspended(){return!1}get suspendInfo(){return{}}get updating(){return this._workerHandle.updating}get dataUpdating(){return!1}get updatePolicy(){return F.ASYNC}get maximumNumberOfFeaturesExceeded(){return!1}get updatingProgressValue(){return 1}get usedMemory(){return this._renderer?.usedMemory??0}get unloadedMemory(){return 0}get ignoresMemoryFactor(){return!0}get totalFeatures(){return this._renderer?.totalFeatures??0}get performanceInfo(){const e=this.totalFeatures;return new _(new k(this.usedMemory,e,e,this.maximumNumberOfFeatures,0,null),e,e,this.maximumNumberOfFeaturesExceeded,"tiles","n/a")}get suspendResumeExtentMode(){return"computed"}forEachGraphic(e){}findGraphic(e){return null}highlight(e){return H}maskOccludee(e){return O()}async whenGraphicBounds(e,t){return null}computeAttachmentOrigin(e,t){return null}elevationAlignPointsInFeatures(e,t){throw new p("unsupported-elevation-alignment")}async doRefresh(e){}setVisibility(e,t){}getMissingAttributesForFeature(e){return null}getHydratedGeometry(e){return null}};o([a()],u.prototype,"layerView",void 0),o([a()],u.prototype,"updating",null),o([a()],u.prototype,"totalFeatures",null),u=o([c("esri.views.3d.layers.graphics.pipeline.Feature3DPipeline")],u);export{u as Feature3DPipeline};
