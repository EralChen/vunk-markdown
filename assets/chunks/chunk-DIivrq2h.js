import{c as I,a as d}from"./chunk-8WtPGj6h.js";import{C as N,I as y,s as u,e as R,p as g,R as U,a as D,m as v,b as F,S as $,c as S,i as w,d as j,y as x,h as A}from"./chunk-CxUoqtmM.js";import"./chunk-BU9ye7sd.js";import"./chunk-RlmIMeXG.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */function Ot(o,t,r){const e=o.name;return e==null?Promise.reject(new u("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference")):o.styleName==="Esri2DPointSymbolsStyle"?k(e,t,r):j(o,t,r).then(l=>W(l,e,t,x,r))}function M(o,t){return t.items.find(r=>r.name===o)}async function W(o,t,r,e,l){const a=r?.portal!=null?r.portal:N.getDefault(),i={portal:a,url:y(o.baseUrl)},n=M(t,o.data);if(!n)throw new u("symbolstyleutils:symbol-name-not-found",`The symbol name '${t}' could not be found`,{symbolName:t});const c=l?.acceptedFormats??R,b=e(n,c);if(!b)throw new u("symbolstyleutils:symbol-reference-no-accepted-format",`The symbol name '${t}' does not have an accepted format (one of ${c})`,{symbolName:t});const{url:O,format:P}=b;let s=g(O,i),p=n.thumbnail?.href??null;const f=n.thumbnail?.imageData;I()&&(s=d(s)??"",p=d(p));const T={portal:a,url:y(U(s)),origin:"portal-item"};return D(s,l).then(h=>{const C=P==="cim"?v(h.data):h.data,m=F(C,T);if(m&&$(m)){if(p){const E=g(p,i);m.thumbnail=new S({url:E})}else f&&(m.thumbnail=new S({url:`data:image/png;base64,${f}`}));o.styleUrl?m.styleOrigin=new w({portal:r.portal,styleUrl:o.styleUrl,name:t}):o.styleName&&(m.styleOrigin=new w({portal:r.portal,styleName:o.styleName,name:t}))}return m})}function k(o,t,r){const e=A.replaceAll(/\{SymbolName\}/gi,o),l=t.portal!=null?t.portal:N.getDefault();return D(e,r).then(a=>{const i=v(a.data);return F(i,{portal:l,url:y(U(e)),origin:"portal-item"})})}export{W as fetchSymbolFromStyle,M as getStyleItemFromStyle,Ot as resolveWebStyleSymbol};
