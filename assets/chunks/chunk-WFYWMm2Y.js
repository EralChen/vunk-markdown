import{ai as e,aj as t,al as l,ah as y,qD as h,y5 as R,y6 as x,y as r,y7 as $,jS as z,lG as q,at as C,y8 as j,y9 as D}from"./chunk-DadqOv6U.js";var m;let d=m=class extends y{constructor(){super(...arguments),this.field=null,this.minValue=0,this.maxValue=255}clone(){return new m({field:this.field,minValue:this.minValue,maxValue:this.maxValue})}};e([t({type:String,json:{write:{isRequired:!0}}})],d.prototype,"field",void 0),e([t({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}})],d.prototype,"minValue",void 0),e([t({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}})],d.prototype,"maxValue",void 0),d=m=e([l("esri.renderers.support.pointCloud.ColorModulation")],d);const I=d;var b;let c=b=class extends R{constructor(){super(...arguments),this.type="fixed-size",this.size=0,this.useRealWorldSymbolSizes=null}clone(){return new b({size:this.size,useRealWorldSymbolSizes:this.useRealWorldSymbolSizes})}};e([h({pointCloudFixedSizeAlgorithm:"fixed-size"})],c.prototype,"type",void 0),e([t({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}})],c.prototype,"size",void 0),e([t({type:Boolean,json:{write:!0}})],c.prototype,"useRealWorldSymbolSizes",void 0),c=b=e([l("esri.renderers.support.pointCloud.PointSizeFixedSizeAlgorithm")],c);const K=c,O={key:"type",base:R,typeMap:{"fixed-size":K,splat:x}},f=$()({pointCloudClassBreaksRenderer:"point-cloud-class-breaks",pointCloudRGBRenderer:"point-cloud-rgb",pointCloudStretchRenderer:"point-cloud-stretch",pointCloudUniqueValueRenderer:"point-cloud-unique-value"});let o=class extends y{constructor(S){super(S),this.type=void 0,this.pointSizeAlgorithm=null,this.colorModulation=null,this.pointsPerInch=10}clone(){return console.warn(".clone() is not implemented for "+this.declaredClass),null}cloneProperties(){return{pointSizeAlgorithm:r(this.pointSizeAlgorithm),colorModulation:r(this.colorModulation),pointsPerInch:r(this.pointsPerInch)}}};e([t({type:f.apiValues,readOnly:!0,nonNullable:!0,json:{type:f.jsonValues,read:!1,write:{writer:f.write,isRequired:!0}}})],o.prototype,"type",void 0),e([t({types:O,json:{write:!0}})],o.prototype,"pointSizeAlgorithm",void 0),e([t({type:I,json:{write:!0}})],o.prototype,"colorModulation",void 0),e([t({json:{write:!0},nonNullable:!0,type:Number})],o.prototype,"pointsPerInch",void 0),o=e([l("esri.renderers.PointCloudRenderer")],o),(function(i){i.fieldTransformTypeKebabDict=new z({none:"none",lowFourBit:"low-four-bit",highFourBit:"high-four-bit",absoluteValue:"absolute-value",moduloTen:"modulo-ten"})})(o||(o={}));var T;let s=T=class extends y{constructor(){super(...arguments),this.description=null,this.label=null,this.minValue=0,this.maxValue=0,this.color=null}clone(){return new T({description:this.description,label:this.label,minValue:this.minValue,maxValue:this.maxValue,color:r(this.color)})}};e([t({type:String,json:{write:!0}})],s.prototype,"description",void 0),e([t({type:String,json:{write:!0}})],s.prototype,"label",void 0),e([t({type:Number,json:{read:{source:"classMinValue"},write:{target:"classMinValue",isRequired:!0}}})],s.prototype,"minValue",void 0),e([t({type:Number,json:{read:{source:"classMaxValue"},write:{target:"classMaxValue",isRequired:!0}}})],s.prototype,"maxValue",void 0),e([t({type:C,json:{type:[q],write:{isRequired:!0}}})],s.prototype,"color",void 0),s=T=e([l("esri.renderers.support.pointCloud.ColorClassBreakInfo")],s);const P=s;var v;let n=v=class extends o{constructor(i){super(i),this.type="point-cloud-class-breaks",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.colorClassBreakInfos=null}clone(){return new v({...this.cloneProperties(),field:this.field,fieldTransformType:this.fieldTransformType,colorClassBreakInfos:r(this.colorClassBreakInfos),legendOptions:r(this.legendOptions)})}};e([h({pointCloudClassBreaksRenderer:"point-cloud-class-breaks"})],n.prototype,"type",void 0),e([t({json:{write:{isRequired:!0}},type:String})],n.prototype,"field",void 0),e([t({type:j,json:{write:!0}})],n.prototype,"legendOptions",void 0),e([t({type:o.fieldTransformTypeKebabDict.apiValues,json:{type:o.fieldTransformTypeKebabDict.jsonValues,read:o.fieldTransformTypeKebabDict.read,write:o.fieldTransformTypeKebabDict.write}})],n.prototype,"fieldTransformType",void 0),e([t({type:[P],json:{write:{isRequired:!0}}})],n.prototype,"colorClassBreakInfos",void 0),n=v=e([l("esri.renderers.PointCloudClassBreaksRenderer")],n);var w;let p=w=class extends o{constructor(i){super(i),this.type="point-cloud-stretch",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.stops=null}clone(){return new w({...this.cloneProperties(),field:r(this.field),fieldTransformType:r(this.fieldTransformType),stops:r(this.stops),legendOptions:r(this.legendOptions)})}};e([h({pointCloudStretchRenderer:"point-cloud-stretch"})],p.prototype,"type",void 0),e([t({json:{write:{isRequired:!0}},type:String})],p.prototype,"field",void 0),e([t({type:j,json:{write:!0}})],p.prototype,"legendOptions",void 0),e([t({type:o.fieldTransformTypeKebabDict.apiValues,json:{type:o.fieldTransformTypeKebabDict.jsonValues,read:o.fieldTransformTypeKebabDict.read,write:o.fieldTransformTypeKebabDict.write}})],p.prototype,"fieldTransformType",void 0),e([t({type:[D],json:{write:{isRequired:!0}}})],p.prototype,"stops",void 0),p=w=e([l("esri.renderers.PointCloudStretchRenderer")],p);var V;let a=V=class extends y{constructor(){super(...arguments),this.description=null,this.label=null,this.values=null,this.color=null}clone(){return new V({description:this.description,label:this.label,values:r(this.values),color:r(this.color)})}};e([t({type:String,json:{write:!0}})],a.prototype,"description",void 0),e([t({type:String,json:{write:!0}})],a.prototype,"label",void 0),e([t({type:[String],json:{write:{isRequired:!0}}})],a.prototype,"values",void 0),e([t({type:C,json:{type:[q],write:{isRequired:!0}}})],a.prototype,"color",void 0),a=V=e([l("esri.renderers.support.pointCloud.ColorUniqueValueInfo")],a);const k=a;var g;let u=g=class extends o{constructor(i){super(i),this.type="point-cloud-unique-value",this.field=null,this.fieldTransformType=null,this.colorUniqueValueInfos=null,this.legendOptions=null}clone(){return new g({...this.cloneProperties(),field:r(this.field),fieldTransformType:r(this.fieldTransformType),colorUniqueValueInfos:r(this.colorUniqueValueInfos),legendOptions:r(this.legendOptions)})}};e([h({pointCloudUniqueValueRenderer:"point-cloud-unique-value"})],u.prototype,"type",void 0),e([t({json:{write:{isRequired:!0}},type:String})],u.prototype,"field",void 0),e([t({type:o.fieldTransformTypeKebabDict.apiValues,json:{type:o.fieldTransformTypeKebabDict.jsonValues,read:o.fieldTransformTypeKebabDict.read,write:o.fieldTransformTypeKebabDict.write}})],u.prototype,"fieldTransformType",void 0),e([t({type:[k],json:{write:{isRequired:!0}}})],u.prototype,"colorUniqueValueInfos",void 0),e([t({type:j,json:{write:!0}})],u.prototype,"legendOptions",void 0),u=g=e([l("esri.renderers.PointCloudUniqueValueRenderer")],u);export{n as a,o as c,p as d,u};
