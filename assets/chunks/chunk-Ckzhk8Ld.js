import{bD as p,id as c,eF as u}from"./chunk-CET6Djna.js";import{createMesh as l}from"./chunk-DiREmpVi.js";import"./chunk-BoJEKryr.js";import"./chunk-CG_ciiyT.js";import"./chunk-Bd6uPMP7.js";import"./chunk-Cj6q1fp6.js";import"./chunk-DmUBapnz.js";import"./chunk-DEsgwh2_.js";import"./chunk-qgE_gHoH.js";import"./chunk-DLx6lzEg.js";import"./chunk-HgJmq8b_.js";import"./chunk-B4iOrlbu.js";function $(a,o){const n=new Array,m=p.fromJSON(o.spatialReference);for(const e of o.features){const t=e.metadata,r=c(e.geometry);if(!t||!r){n.push(null);continue}r.spatialReference=m;const s=r.extent,f=l({layerView:a,nodeIndex:t.meta.node.index,featureIndex:t.index,extent:s,spatialReference:m});n.push(f),e.geometry=null}const i=u.fromJSON(o);for(let e=0;e<i.features.length;e++){const t=i.features[e],r=n[e];t.geometry=r}return i}export{$ as processQueryGeometries};
