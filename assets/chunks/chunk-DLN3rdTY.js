import{et as l,ec as y,dP as h,dQ as c,dR as u,dS as f,ed as v,ee as g,e3 as S,aL as w,ef as T,dT as _,eu as n,s as a,el as p,em as I,A as d,en as L,aM as x,aj as i,ak as o,ev as $,ew as b,ex as M,ey as O,eo as A,dV as V,ep as P,am as j}from"./chunk-XGpVqsM_.js";import{n as m}from"./chunk-BXm0hCzd.js";import"./chunk-DyqHK6XP.js";import"./chunk-Dix477Sg.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CrMA_peF.js";import"./chunk-pxLCbLz9.js";let t=class extends l(y(h(c(u(f(v(g(x)))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this.path=null,this.definitionExpression=null}initialize(){this.addHandles(S((()=>this.modifications),"after-changes",(()=>this.modifications=this.modifications),w))}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}readModifications(e,r,s){this._modificationsSource={url:T(e,s),context:s}}set elevationInfo(e){e!=null&&e.mode!=="absolute-height"||this._set("elevationInfo",e),this._validateElevationInfo(e)}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const r=e?.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(s){_(s)}if(await this._fetchService(r),this._modificationsSource!=null){const s=await m.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",s,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,r)}beforeSave(){if(this._modificationsSource!=null)return this.load().then((()=>{}),(()=>{}))}async saveAs(e,r){return this._debouncedSaveOperations(n.SAVE_AS,{...r,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(n.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new a("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new a("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new a("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(e){const r="Integrated mesh layers";p(d.getLogger(this),I(r,"absolute-height",e)),p(d.getLogger(this),L(r,e))}};i([o({type:String,readOnly:!0})],t.prototype,"geometryType",void 0),i([o({type:["show","hide"]})],t.prototype,"listMode",void 0),i([o({type:["IntegratedMeshLayer"]})],t.prototype,"operationalLayerType",void 0),i([o({json:{read:!1},readOnly:!0})],t.prototype,"type",void 0),i([o({type:$,readOnly:!0})],t.prototype,"nodePages",void 0),i([o({type:[b],readOnly:!0})],t.prototype,"materialDefinitions",void 0),i([o({type:[M],readOnly:!0})],t.prototype,"textureSetDefinitions",void 0),i([o({type:[O],readOnly:!0})],t.prototype,"geometryDefinitions",void 0),i([o({readOnly:!0})],t.prototype,"serviceUpdateTimeStamp",void 0),i([o({type:m,clonable:e=>e.clone()}),A({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],t.prototype,"modifications",void 0),i([V(["web-scene","portal-item"],"modifications")],t.prototype,"readModifications",null),i([o(P)],t.prototype,"elevationInfo",null),i([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],t.prototype,"path",void 0),t=i([j("esri.layers.IntegratedMeshLayer")],t);const _e=t;export{_e as default};
