import{Ix as ee,HO as te,K0 as Ee,IH as z,K5 as Re,HN as P,HY as se,HZ as re,H$ as oe,I1 as ie,K7 as ae,K8 as _,JU as ne,af as u,ag as m,ai as O,nD as Pe,b8 as Ce,IY as Oe,IX as Se,rA as xe,j4 as D,q8 as F,Kq as B,Kr as Te,JY as Me,s9 as M,qE as W,q7 as d,Ks as Ne,l$ as Y,xu as De,xv as Fe,Kt as Ie,lX as Ve,lY as ke,ao as le,aG as R,an as N,az as C,a_ as qe,aq as Q,bc as je,V as He,aM as Ge,lA as Ke,$ as Le,bk as Ue,bl as ze,fV as Be,jp as We,b3 as Ye,eU as Qe,jo as Je,ng as Xe,k3 as Ze,jQ as et,b9 as tt,aj as J,kg as st,v as rt,s as ot}from"./chunk-CuaFhuP3.js";import{T as it}from"./chunk-Dpk1TJd9.js";import{t as at}from"./chunk-CqUShxUx.js";import{e as nt}from"./chunk-CY-D7tnl.js";import{fromSpatialReference as lt,fromPolygon as ct,toPolygon as ut}from"./chunk-qOGZTybA.js";import{p as pt,n as mt}from"./chunk-DJV2o6Lc.js";import{_ as ce}from"./chunk-iOPJXyP1.js";import{j as ht}from"./chunk-B3dkooVs.js";import"./chunk-DGmg3LSc.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-B92kdZ15.js";import"./chunk-A9ItisFv.js";import"./chunk-Da9IW-EP.js";import"./chunk-BUVSeX7E.js";import"./chunk-RvJNgVq9.js";import"./chunk-DP7_WWTp.js";import"./chunk-BoBj9ZcI.js";import"./chunk-DGkpYqI6.js";import"./chunk-Bp0h8fOB.js";import"./chunk-BvxomRZN.js";import"./chunk-Ci_uqM5T.js";import"./chunk-DZlnYJxS.js";import"./chunk-CpdoPF2G.js";import"./chunk-DpLds6Zo.js";import"./chunk-DwTaIoG6.js";import"./chunk-H1mfGIcU.js";var w;(function(e){e[e.BRIGHT=0]="BRIGHT",e[e.DARK=1]="DARK"})(w||(w={}));let I=class extends ee{constructor(){super(...arguments),this.effect=w.BRIGHT}};function ue(){const e=new te;return e.include(Ee),e.outputs.add("fragColor","vec4",0),e.fragment.uniforms.add(new z("colorTexture",(t=>t.color)),new z("focusArea",(t=>t.focusArea)),new Re("focusAreaEffectMode",(t=>t.effect))).main.add(P`
      float mask = texture( focusArea, uv, 0.0 ).r;
      vec4 color = texture( colorTexture, uv, 0.0 );
      vec4 colorDeSaturate = vec4(color.r * 0.25 + color.g * 0.5 + color.b * 0.25);
      if (focusAreaEffectMode == ${P.int(w.BRIGHT)}) {
        fragColor = mask > 0.0 ? color : 0.55 * colorDeSaturate + 0.45;
      } else {
        fragColor = mask > 0.0 ? color : 0.33 * mix(color, colorDeSaturate, 0.);
      }
  `),e}const dt=Object.freeze(Object.defineProperty({__proto__:null,FocusAreaColorPassParameters:I,build:ue},Symbol.toStringTag,{value:"Module"}));class X extends se{constructor(t,s){super(t,s,new re(dt,(()=>ce(()=>Promise.resolve().then(()=>At),void 0))))}initializePipeline(){return oe({colorWrite:ie})}}let f=class extends ae{constructor(e){super({...e,view:e.focusAreasView.view}),this.consumes={required:[_.FOCUSAREA_COLOR,_.FOCUSAREA]},this.produces=_.FOCUSAREA_COLOR,this._passParameters=new I}precompile(){this.techniques.precompile(X)}render(e){const t=this.techniques.get(X),s=e.find((({name:p})=>p===this.produces));if(!t.compiled)return this.requestRender(),s;const a=this.focusAreasView.style,i=this.bindParameters,n=i.camera,r=n.fullViewport[2],o=n.fullViewport[3],l=e.find((({name:p})=>p===_.FOCUSAREA)),h=this.fboCache.acquire(r,o,this.produces),c=this.renderingContext;return c.bindFramebuffer(h.fbo),this._passParameters.color=s.getTexture(),this._passParameters.focusArea=l.getTexture(),this._passParameters.effect=ft[a],c.bindTechnique(t,i,this._passParameters),c.screen.draw(),h.attachDepth(s.getAttachment(ne)),h}};u([m()],f.prototype,"consumes",void 0),u([m()],f.prototype,"produces",void 0),u([m({constructOnly:!0})],f.prototype,"focusAreasView",void 0),f=u([O("esri.views.3d.webgl-engine.effects.focusArea.FocusAreaColorNode")],f);const ft={bright:w.BRIGHT,dark:w.DARK};class V extends ee{constructor(){super(...arguments),this.origin=Pe}}function pe(){const e=new te;return e.attributes.add(Ce.POSITION,"vec3"),e.outputs.add("fragColor","vec4",0),e.vertex.uniforms.add(new Oe("proj",(t=>t.camera.projectionMatrix)),new Se("view",((t,s)=>xe(gt,s.camera.viewMatrix,t.origin)))).main.add(P`gl_Position = proj * view * vec4(position, 1.0);
gl_Position.z = min(gl_Position.z, gl_Position.w);`),e.fragment.main.add(P`fragColor = vec4(1., 0., 0., 0.);`),e}const gt=D(),_t=Object.freeze(Object.defineProperty({__proto__:null,FocusAreaMaskDrawParameters:V,build:pe},Symbol.toStringTag,{value:"Module"}));class Z extends se{constructor(t,s){super(t,s,new re(_t,(()=>ce(()=>Promise.resolve().then(()=>yt),void 0))))}initializePipeline(){return oe({colorWrite:ie,depthTest:{func:F.LEQUAL}})}}let g=class extends ae{constructor(e){super({...e,view:e.focusAreasView.view}),this.consumes={required:[B.TRANSPARENT]},this.produces=_.FOCUSAREA,this._vaos=new Array,this._counts=new Array,this._origins=new Array,this._maskParameters=new V}initialize(){this.updateGeometries()}destroy(){this._vaos.forEach((e=>e.dispose())),this._vaos.length=this._counts.length=this._origins.length=0}precompile(){this.techniques.precompile(Z)}render(e){const t=this.techniques.get(Z),s=this.bindParameters,a=s.camera,i=a.fullViewport[2],n=a.fullViewport[3];if(!t.compiled||!this._vaos)return void this.requestRender();const r=e.find((({name:c})=>c===B.TRANSPARENT)),o=this.renderingContext,l=this.fboCache.acquire(i,n,_.FOCUSAREA,Te.RG8UNORM);this.view.stage.renderer.occludedRequiresStencil?(l.acquireDepth(Me.DEPTH24_STENCIL8),o.blitFramebuffer(r.fbo,l.fbo,M.DEPTH)):l.attachDepth(r.getAttachment(ne)),o.bindFramebuffer(l.fbo),o.setClearColor(0,0,0,1),o.clear(M.COLOR|M.STENCIL),o.setViewport(0,0,i,n);const h=o.bindTechnique(t,s);o.setFaceCullingEnabled(!1),o.setStencilTestEnabled(!0),o.setStencilOpSeparate(W.FRONT,d.KEEP,d.INCR_WRAP,d.KEEP),o.setStencilOpSeparate(W.BACK,d.KEEP,d.DECR_WRAP,d.KEEP),o.setDepthWriteEnabled(!1);for(let c=0;c<this._vaos.length;c++){const p=this._vaos[c],v=this._counts[c];this._maskParameters.origin=this._origins[c],h.bindDraw(s,Ne,this._maskParameters),o.bindVAO(p),o.setDepthTestEnabled(!0),o.setStencilWriteMask(255),o.setStencilFunction(F.ALWAYS,0,255),o.setColorMask(!1,!1,!1,!1),o.drawArrays(Y.TRIANGLES,0,v),o.setDepthTestEnabled(!1),o.setStencilWriteMask(0),o.setStencilFunction(F.NOTEQUAL,0,255),o.setColorMask(!0,!0,!0,!0),o.drawArrays(Y.TRIANGLES,0,v)}return l}updateGeometries(){this.view.stage&&(this._vaos.forEach((e=>e.dispose())),this._vaos.length=this._counts.length=this._origins.length=0,this.focusAreasView.volumes.forEach((e=>e.forEach((t=>{const s=new Array,a=t.indicesBottom;for(let r=0;r<a.length;r++)s.push(t.positions[3*(a[r]-1)]),s.push(t.positions[3*(a[r]-1)+1]),s.push(t.positions[3*(a[r]-1)+2]);const i=t.indicesExtruded;for(let r=0;r<i.length;r++)s.push(t.positions[3*i[r]]),s.push(t.positions[3*i[r]+1]),s.push(t.positions[3*i[r]+2]);const n=new De(this.renderingContext,Fe,new Map([["geometry",Ie]]),new Map([["geometry",Ve.createVertex(this.renderingContext,ke.STATIC_DRAW,new Float32Array(s))]]));this._vaos.push(n),this._counts.push(a.length+i.length),this._origins.push(t.origin)})))),this.requestRender())}};u([m()],g.prototype,"consumes",void 0),u([m()],g.prototype,"produces",void 0),u([m({constructOnly:!0})],g.prototype,"focusAreasView",void 0),g=u([O("esri.views.3d.webgl-engine.effects.focusArea.FocusAreaMaskNode")],g);class wt{constructor(t,s,a,i,n){this.positions=t,this.indicesBottom=s,this.indicesExtruded=a,this.height=i,this.origin=n}}let y=class extends le{constructor(e){super(e)}initialize(){this.addHandles([R((()=>this.area.enabled),(()=>this._ensureElement()),N),R((()=>this.area.outline?.color),(e=>this._updateColor(e)),N),R((()=>this.area.geometries),(e=>this._updateGeometries(e)),N)])}destroy(){this.removeAllHandles(),this._outlineElement=C(this._outlineElement)}_ensureElement(){this.area.enabled&&this.area.outline?.color?this._outlineElement??=new ht({view:this.view,geometry:this._mergePolygons(this.area.geometries),isDraped:!0,attached:!0,isDecoration:!1,color:Q.toUnitRGBA(this.area.outline?.color),renderOccluded:qe.OccludeAndTransparent,width:3}):this._outlineElement=C(this._outlineElement)}_updateGeometries(e){this._ensureElement(),this._outlineElement&&(this._outlineElement.geometry=this._mergePolygons(e))}_updateColor(e){this._ensureElement(),this._outlineElement&&e&&(this._outlineElement.color=Q.toUnitRGBA(e))}_mergePolygons(e){if(!e||e.length===0)return null;const t=e.at(0).clone();return e.forEach((s=>{t.rings.push(...s.rings)})),t}};u([m({constructOnly:!0})],y.prototype,"view",void 0),u([m({constructOnly:!0})],y.prototype,"area",void 0),y=u([O("esri.views.3d.webgl-engine.effects.focusArea.FocusAreaOutlineItem")],y);const vt=2e4;let E=class extends le{constructor(e){super(e),this._volumes=new Map,this._elevationContext=new je,this._outlineMap=new He}initialize(){this.addHandles([R((()=>this.polygons),(e=>this._updateVolumes(e)),Ge)]),this._outlineMap=Ke((()=>this.areas?.areas),(e=>new y({area:e,view:this.view})),{recycleItems:!0})}destroy(){this.removeAllHandles(),this._outlineMap.destroy()}get areas(){return this.view.map?.focusAreas}get enabledAreas(){return this.areas?.areas.toArray().filter((({enabled:e})=>e))??[]}get style(){return this.areas?.style??"bright"}get polygons(){return this.enabledAreas.reduce(((e,t)=>e.concat(t.geometries.toArray())),new Array)}containsGeometry(e){if(this.polygons.length===0)return!0;const t=new Le(e);return this.polygons.some((s=>s.contains(t)))}_updateVolumes(e){this._extrude(e),this._ensureRenderNodes()}_extrude(e){if(!this.view.renderCoordsHelper||it(Array.from(this._volumes.keys()),e))return;const t=this.view.renderCoordsHelper,s=Ye(),a=t.viewingMode===Ue.Global,i=D(),n=D(),r=this.view.spatialReference,o=lt(r),l=ze(r).radius/Be.radius,h=We(5e5*l,"meters",r,!0);a||t.worldUpAtPosition([0,0,0],s);const c=new Map;for(const p of e){const v=this._volumes.get(p);if(v)c.set(p,v);else try{const A=r.equals(p.spatialReference)?p:Qe(p,r),me=Math.max(A.extent.width,A.extent.height),he=Je(me,r,"meters",!0),S=Math.max(5*he,vt*l),de=a?l/10:l,k=this._reduceGeometryHeight(A,S,de),x=Xe(k);if(x==null)continue;const q=ct(k),fe=nt(q,o,!1)??q,ge=at(fe,h,0,0),j=ut(ge,r);if(j==null)continue;Ze(r,[x.x,x.y,0],i,t.spatialReference),n[12]=-i[12],n[13]=-i[13],n[14]=-i[14];const _e=pt(j,this.view.elevationProvider,t,this._elevationContext),{polygons:we,mapPositions:ve,position:Ae}=_e,H=new Array;for(const $ of we){const ye=$.count,T=et($.mapPositions,$.holeIndices,3);if(T.length===0)continue;const G=T.length,K=6*ye,$e=K+G,b=tt(3*K),L=J($e),U=J(G);mt(Ae,ve,T,$,b,null,null,null,L,U,S,s,a),st(b,b,n);const be=new wt(b,U,L,S,[i[12],i[13],i[14]]);H.push(be)}c.set(p,H)}catch(A){rt.getLogger(this).error(new ot("focusareasview:projection-failed","Failed to project focus area geometry to view spatial reference",{geometry:p,error:A}))}}this._volumes=c,this._maskRenderNode?.updateGeometries()}_ensureRenderNodes(){this.view.stage&&(this.volumes.size===0?(this._maskRenderNode=C(this._maskRenderNode),this._colorRenderNode=C(this._colorRenderNode)):(this._maskRenderNode??=new g({focusAreasView:this}),this._colorRenderNode??=new f({focusAreasView:this}),this.view.stage.renderView.requestRender()))}_reduceGeometryHeight(e,t,s){const a=-12e5*s,i=Math.max(-t/2,a),n=e.rings.map((o=>o.map((l=>[l[0],l[1],i])))),r=e.clone();return r.rings=n,r.hasZ=!0,r}get volumes(){return this._volumes}};u([m()],E.prototype,"_volumes",void 0),u([m({constructOnly:!0})],E.prototype,"view",void 0),E=u([O("esri.views.3d.FocusAreasView")],E);const At=Object.freeze(Object.defineProperty({__proto__:null,FocusAreaColorPassParameters:I,build:ue},Symbol.toStringTag,{value:"Module"})),yt=Object.freeze(Object.defineProperty({__proto__:null,FocusAreaMaskDrawParameters:V,build:pe},Symbol.toStringTag,{value:"Module"}));export{E as FocusAreasView};
