import{ar as e,as as t,au as a,aq as h,oL as f,vH as q,vI as $,O as o,vJ as z,i9 as I,kk as C,aA as S,vK as R,vL as k}from"./chunk-DM6Pdl6C.js";var b;let c=b=class extends h{constructor(){super(...arguments),this.field=null,this.minValue=0,this.maxValue=255}clone(){return new b({field:this.field,minValue:this.minValue,maxValue:this.maxValue})}};e([t({type:String,json:{write:{isRequired:!0}}})],c.prototype,"field",void 0),e([t({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}})],c.prototype,"minValue",void 0),e([t({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}})],c.prototype,"maxValue",void 0),c=b=e([a("esri.renderers.support.pointCloud.ColorModulation")],c);const K=c;var v;let y=v=class extends q{constructor(){super(...arguments),this.type="fixed-size",this.size=0,this.useRealWorldSymbolSizes=null}clone(){return new v({size:this.size,useRealWorldSymbolSizes:this.useRealWorldSymbolSizes})}};e([f({pointCloudFixedSizeAlgorithm:"fixed-size"})],y.prototype,"type",void 0),e([t({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}})],y.prototype,"size",void 0),e([t({type:Boolean,json:{write:!0}})],y.prototype,"useRealWorldSymbolSizes",void 0),y=v=e([a("esri.renderers.support.pointCloud.PointSizeFixedSizeAlgorithm")],y);const O=y,D={key:"type",base:q,typeMap:{"fixed-size":O,splat:$}},m=z()({pointCloudClassBreaksRenderer:"point-cloud-class-breaks",pointCloudRGBRenderer:"point-cloud-rgb",pointCloudStretchRenderer:"point-cloud-stretch",pointCloudUniqueValueRenderer:"point-cloud-unique-value"});let i=class extends h{constructor(x){super(x),this.type=void 0,this.pointSizeAlgorithm=null,this.colorModulation=null,this.pointsPerInch=10}clone(){return console.warn(".clone() is not implemented for "+this.declaredClass),null}cloneProperties(){return{pointSizeAlgorithm:o(this.pointSizeAlgorithm),colorModulation:o(this.colorModulation),pointsPerInch:o(this.pointsPerInch)}}};e([t({type:m.apiValues,readOnly:!0,nonNullable:!0,json:{type:m.jsonValues,read:!1,write:{writer:m.write,isRequired:!0}}})],i.prototype,"type",void 0),e([t({types:D,json:{write:!0}})],i.prototype,"pointSizeAlgorithm",void 0),e([t({type:K,json:{write:!0}})],i.prototype,"colorModulation",void 0),e([t({json:{write:!0},nonNullable:!0,type:Number})],i.prototype,"pointsPerInch",void 0),i=e([a("esri.renderers.PointCloudRenderer")],i),function(s){s.fieldTransformTypeKebabDict=new I({none:"none",lowFourBit:"low-four-bit",highFourBit:"high-four-bit",absoluteValue:"absolute-value",moduloTen:"modulo-ten"})}(i||(i={}));const r=i;var T;let l=T=class extends h{constructor(){super(...arguments),this.description=null,this.label=null,this.minValue=0,this.maxValue=0,this.color=null}clone(){return new T({description:this.description,label:this.label,minValue:this.minValue,maxValue:this.maxValue,color:o(this.color)})}};e([t({type:String,json:{write:!0}})],l.prototype,"description",void 0),e([t({type:String,json:{write:!0}})],l.prototype,"label",void 0),e([t({type:Number,json:{read:{source:"classMinValue"},write:{target:"classMinValue",isRequired:!0}}})],l.prototype,"minValue",void 0),e([t({type:Number,json:{read:{source:"classMaxValue"},write:{target:"classMaxValue",isRequired:!0}}})],l.prototype,"maxValue",void 0),e([t({type:S,json:{type:[C],write:{isRequired:!0}}})],l.prototype,"color",void 0),l=T=e([a("esri.renderers.support.pointCloud.ColorClassBreakInfo")],l);const P=l;var w;let n=w=class extends r{constructor(s){super(s),this.type="point-cloud-class-breaks",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.colorClassBreakInfos=null}clone(){return new w({...this.cloneProperties(),field:this.field,fieldTransformType:this.fieldTransformType,colorClassBreakInfos:o(this.colorClassBreakInfos),legendOptions:o(this.legendOptions)})}};e([f({pointCloudClassBreaksRenderer:"point-cloud-class-breaks"})],n.prototype,"type",void 0),e([t({json:{write:{isRequired:!0}},type:String})],n.prototype,"field",void 0),e([t({type:R,json:{write:!0}})],n.prototype,"legendOptions",void 0),e([t({type:r.fieldTransformTypeKebabDict.apiValues,json:{type:r.fieldTransformTypeKebabDict.jsonValues,read:r.fieldTransformTypeKebabDict.read,write:r.fieldTransformTypeKebabDict.write}})],n.prototype,"fieldTransformType",void 0),e([t({type:[P],json:{write:{isRequired:!0}}})],n.prototype,"colorClassBreakInfos",void 0),n=w=e([a("esri.renderers.PointCloudClassBreaksRenderer")],n);const U=n;var V;let u=V=class extends r{constructor(s){super(s),this.type="point-cloud-stretch",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.stops=null}clone(){return new V({...this.cloneProperties(),field:o(this.field),fieldTransformType:o(this.fieldTransformType),stops:o(this.stops),legendOptions:o(this.legendOptions)})}};e([f({pointCloudStretchRenderer:"point-cloud-stretch"})],u.prototype,"type",void 0),e([t({json:{write:{isRequired:!0}},type:String})],u.prototype,"field",void 0),e([t({type:R,json:{write:!0}})],u.prototype,"legendOptions",void 0),e([t({type:r.fieldTransformTypeKebabDict.apiValues,json:{type:r.fieldTransformTypeKebabDict.jsonValues,read:r.fieldTransformTypeKebabDict.read,write:r.fieldTransformTypeKebabDict.write}})],u.prototype,"fieldTransformType",void 0),e([t({type:[k],json:{write:{isRequired:!0}}})],u.prototype,"stops",void 0),u=V=e([a("esri.renderers.PointCloudStretchRenderer")],u);const A=u;var g;let d=g=class extends h{constructor(){super(...arguments),this.description=null,this.label=null,this.values=null,this.color=null}clone(){return new g({description:this.description,label:this.label,values:o(this.values),color:o(this.color)})}};e([t({type:String,json:{write:!0}})],d.prototype,"description",void 0),e([t({type:String,json:{write:!0}})],d.prototype,"label",void 0),e([t({type:[String],json:{write:{isRequired:!0}}})],d.prototype,"values",void 0),e([t({type:S,json:{type:[C],write:{isRequired:!0}}})],d.prototype,"color",void 0),d=g=e([a("esri.renderers.support.pointCloud.ColorUniqueValueInfo")],d);const B=d;var j;let p=j=class extends r{constructor(s){super(s),this.type="point-cloud-unique-value",this.field=null,this.fieldTransformType=null,this.colorUniqueValueInfos=null,this.legendOptions=null}clone(){return new j({...this.cloneProperties(),field:o(this.field),fieldTransformType:o(this.fieldTransformType),colorUniqueValueInfos:o(this.colorUniqueValueInfos),legendOptions:o(this.legendOptions)})}};e([f({pointCloudUniqueValueRenderer:"point-cloud-unique-value"})],p.prototype,"type",void 0),e([t({json:{write:{isRequired:!0}},type:String})],p.prototype,"field",void 0),e([t({type:r.fieldTransformTypeKebabDict.apiValues,json:{type:r.fieldTransformTypeKebabDict.jsonValues,read:r.fieldTransformTypeKebabDict.read,write:r.fieldTransformTypeKebabDict.write}})],p.prototype,"fieldTransformType",void 0),e([t({type:[B],json:{write:{isRequired:!0}}})],p.prototype,"colorUniqueValueInfos",void 0),e([t({type:R,json:{write:!0}})],p.prototype,"legendOptions",void 0),p=j=e([a("esri.renderers.PointCloudUniqueValueRenderer")],p);const F=p;export{A as a,U as b,r as c,F as d};
