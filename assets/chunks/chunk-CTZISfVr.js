import{gV as d,A as h,dv as l,Y as S,eF as g,bD as D,z as N}from"./chunk-CET6Djna.js";import{q as E}from"./chunk-CG_ciiyT.js";import{n as F,i as M}from"./chunk-B4iOrlbu.js";import{n as T,i as I}from"./chunk-D-zMxhrk.js";import"./chunk-BoJEKryr.js";import"./chunk-Bd6uPMP7.js";import"./chunk-Cj6q1fp6.js";import"./chunk-DmUBapnz.js";import"./chunk-DEsgwh2_.js";import"./chunk-qgE_gHoH.js";import"./chunk-DLx6lzEg.js";import"./chunk-HgJmq8b_.js";const b=()=>h.getLogger("esri.rest.support.meshFeatureSet");function B(e,s,t){const r=t.features;t.features=[],delete t.geometryType;const n=g.fromJSON(t);if(n.geometryType="mesh",!t.assetMaps)return n;const o=O(s,t.assetMaps),u=e.sourceSpatialReference??D.WGS84,f=t.globalIdFieldName,{outFields:a}=e,p=a!=null&&a.length>0?w(a.includes("*")?null:new Set(a)):()=>({});for(const i of r){const c=L(i,f,u,s,o);n.features.push(new N({geometry:c,attributes:p(i)}))}return n}function w(e){return({attributes:s})=>{if(!s)return{};if(!e)return s;for(const t in s)e.has(t)||delete s[t];return s}}function L(e,s,t,r,n){const o=e.attributes[s],u=n.get(o);if(u==null||!e.geometry)return null;const f=T(e.attributes,t,r.transformFieldRoles),a=S.fromJSON(e.geometry);a.spatialReference=t;const p=I(e.attributes,r.transformFieldRoles),i=t.isGeographic?"local":"georeferenced",c=$(u);return c?E.createWithExternalSource(f,c,{extent:a,transform:p,vertexSpace:i,unitConversionDisabled:!0}):E.createIncomplete(f,{extent:a,transform:p,vertexSpace:i})}var m;function O(e,s){const t=new Map;for(const r of s){const n=r.parentGlobalId;if(n==null)continue;const o=r.assetName,u=r.assetType,f=r.assetHash,a=r.assetURL,p=r.conversionStatus,i=r.seqNo,c=d(u,e.supportedFormats);if(!c){b().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${u}, but it does not list it as a supported type`);continue}const y=l(t,n,(()=>({files:new Map})));l(y.files,o,(()=>({name:o,type:u,mimeType:c,status:v(p),parts:[]}))).parts[i]={hash:f,url:a}}return t}function $(e){const s=Array.from(e.files.values()),t=new Array;for(const r of s){if(r.status!==m.COMPLETED)return null;const n=new Array;for(const o of r.parts){if(!o)return null;n.push(new F(o.url,o.hash))}t.push(new M(r.name,r.mimeType,n))}return{type:"service",assets:t}}function v(e){switch(e){case"COMPLETED":case"SUBMITTED":return m.COMPLETED;case"INPROGRESS":return m.PENDING;default:return m.FAILED}}(function(e){e[e.FAILED=0]="FAILED",e[e.PENDING=1]="PENDING",e[e.COMPLETED=2]="COMPLETED"})(m||(m={}));export{O as assetMapFromAssetMapsJSON,L as extractMesh,B as meshFeatureSetFromJSON};
