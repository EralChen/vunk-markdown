import{aI as p,ay as s,aJ as a,aK as m,ar as i,as as o,au as c}from"./chunk-DYmUVOBN.js";import{x as h}from"./chunk-BWqfdmeB.js";import"./chunk-DODhI9iV.js";import"./chunk-DdHotv1K.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-SqlbPPT2.js";import"./chunk-B-elfpcV.js";import"./chunk-CX-7Bn_1.js";import"./chunk-D990cIAf.js";import"./chunk-DOJBrK8k.js";import"./chunk-DbklFfP6.js";import"./chunk-64zEE_Ni.js";let t=class extends p.IdentifiableMixin(s){constructor(r){super(r),this.processor=null,this.slicePlaneEnabled=!1,this.layer=new n,this.suspended=!1}initialize(){this._set("processor",new h({owner:this}))}destroy(){this._set("processor",a(this.processor))}get graphics(){return this.view?.graphics}get loadedGraphics(){return this.graphics}get updating(){return!!this.processor?.updating}get symbolUpdateType(){return this.processor.graphicsCore.symbolUpdateType}getHit(r){return this.processor.getHit(r)}whenGraphicBounds(r,e){return this.processor.whenGraphicBounds(r,e)}graphicChanged(r){this.processor.graphicsCore.graphicUpdateHandler(r)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}async queryGraphics(){return this.loadedGraphics}highlight(r,e){return this.processor.highlight(r,e?.name??m)}maskOccludee(r){return this.processor.maskOccludee(r)}get test(){return{graphics3DProcessor:this.processor}}};i([o({readOnly:!0})],t.prototype,"graphics",null),i([o()],t.prototype,"loadedGraphics",null),i([o({readOnly:!0})],t.prototype,"updating",null),i([o({constructOnly:!0})],t.prototype,"view",void 0),i([o()],t.prototype,"processor",void 0),i([o({type:Boolean})],t.prototype,"slicePlaneEnabled",void 0),i([o()],t.prototype,"layer",void 0),i([o()],t.prototype,"suspended",void 0),t=i([c("esri.views.3d.layers.GraphicsView3D")],t);class n extends p{constructor(){super(),this.type="graphics-view-3d-dummy",this.id=this.uid}}const pr=t;export{pr as default};
