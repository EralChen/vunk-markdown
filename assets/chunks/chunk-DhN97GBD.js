import{aG as t,an as o,Y as p,eQ as m,af as a,ai as s}from"./chunk-CuaFhuP3.js";import"./chunk-Dpk1TJd9.js";import{d as l}from"./chunk-DIHMukqi.js";import"./chunk-iOPJXyP1.js";import"./chunk-DGmg3LSc.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */let e=class extends l{constructor(r){super(r),this.enablePolygons=!1}initialize(){t((()=>this.enabled),(r=>this.view.basemapTerrain.renderPatchBorders=r),o)}getTiles(){const r=this.view.basemapTerrain.spatialReference!=null?this.view.basemapTerrain.spatialReference:null;return this.view.basemapTerrain.test.getRenderedTiles().map((i=>({...i,lij:i.lij,level:i.level,geometry:p.fromExtent(m(i.extent,r))})))}};e=a([s("esri.views.3d.layers.support.TerrainTileTree3DDebugger")],e);export{e as TerrainTileTree3DDebugger};
