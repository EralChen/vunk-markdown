import{p as V}from"./chunk-DP-W1Fhs.js";import{_ as c,a5 as U,a4 as j,a6 as Z,a7 as q,an as H,am as J,l as W,g as K,az as Q,aR as X,aT as Y,a9 as tt,as as et,aB as rt,aU as y,aV as at,aW as z}from"./chunk-nfIRNwjd.js";import{p as it}from"./chunk-Bk5wSqQv.js";import{d as O}from"./chunk-DaGxNk8z.js";import{o as ot}from"./chunk-CJRrgpyc.js";/* empty css              *//* empty css              */import"./chunk-D3Fu2eSY.js";import"./chunk-Crt2IEHJ.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-Qt79CxtN.js";import"./chunk-EcDbAKtw.js";import"./chunk-szfzbYUS.js";import"./chunk-Gi6I4Gst.js";function nt(t,r){return r<t?-1:r>t?1:r>=t?0:NaN}function st(t){return t}function lt(){var t=st,r=nt,h=null,s=y(0),m=y(z),x=y(0);function o(e){var a,l=(e=at(e)).length,u,A,v=0,p=new Array(l),i=new Array(l),g=+s.apply(this,arguments),w=Math.min(z,Math.max(-z,m.apply(this,arguments)-g)),f,T=Math.min(Math.abs(w)/l,x.apply(this,arguments)),$=T*(w<0?-1:1),d;for(a=0;a<l;++a)(d=i[p[a]=a]=+t(e[a],a,e))>0&&(v+=d);for(r!=null?p.sort(function(S,C){return r(i[S],i[C])}):h!=null&&p.sort(function(S,C){return h(e[S],e[C])}),a=0,A=v?(w-l*$)/v:0;a<l;++a,g=f)u=p[a],d=i[u],f=g+(d>0?d*A:0)+$,i[u]={data:e[u],index:a,value:d,startAngle:g,endAngle:f,padAngle:T};return i}return o.value=function(e){return arguments.length?(t=typeof e=="function"?e:y(+e),o):t},o.sortValues=function(e){return arguments.length?(r=e,h=null,o):r},o.sort=function(e){return arguments.length?(h=e,r=null,o):h},o.startAngle=function(e){return arguments.length?(s=typeof e=="function"?e:y(+e),o):s},o.endAngle=function(e){return arguments.length?(m=typeof e=="function"?e:y(+e),o):m},o.padAngle=function(e){return arguments.length?(x=typeof e=="function"?e:y(+e),o):x},o}var pt=rt.pie,F={sections:new Map,showData:!1},M=F.sections,G=F.showData,ct=structuredClone(pt),mt=c(()=>structuredClone(ct),"getConfig"),ut=c(()=>{M=new Map,G=F.showData,et()},"clear"),dt=c(({label:t,value:r})=>{M.has(t)||(M.set(t,r),W.debug(`added new section: ${t}, with value: ${r}`))},"addSection"),gt=c(()=>M,"getSections"),ft=c(t=>{G=t},"setShowData"),ht=c(()=>G,"getShowData"),P={getConfig:mt,clear:ut,setDiagramTitle:J,getDiagramTitle:H,setAccTitle:q,getAccTitle:Z,setAccDescription:j,getAccDescription:U,addSection:dt,getSections:gt,setShowData:ft,getShowData:ht},vt=c((t,r)=>{V(t,r),r.setShowData(t.showData),t.sections.map(r.addSection)},"populateDb"),St={parse:c(async t=>{const r=await it("pie",t);W.debug(r),vt(r,P)},"parse")},yt=c(t=>`
  .pieCircle{
    stroke: ${t.pieStrokeColor};
    stroke-width : ${t.pieStrokeWidth};
    opacity : ${t.pieOpacity};
  }
  .pieOuterCircle{
    stroke: ${t.pieOuterStrokeColor};
    stroke-width: ${t.pieOuterStrokeWidth};
    fill: none;
  }
  .pieTitleText {
    text-anchor: middle;
    font-size: ${t.pieTitleTextSize};
    fill: ${t.pieTitleTextColor};
    font-family: ${t.fontFamily};
  }
  .slice {
    font-family: ${t.fontFamily};
    fill: ${t.pieSectionTextColor};
    font-size:${t.pieSectionTextSize};
    // fill: white;
  }
  .legend text {
    fill: ${t.pieLegendTextColor};
    font-family: ${t.fontFamily};
    font-size: ${t.pieLegendTextSize};
  }
`,"getStyles"),xt=yt,At=c(t=>{const r=[...t.entries()].map(s=>({label:s[0],value:s[1]})).sort((s,m)=>m.value-s.value);return lt().value(s=>s.value)(r)},"createPieArcs"),wt=c((t,r,h,s)=>{W.debug(`rendering pie chart
`+t);const m=s.db,x=K(),o=Q(m.getConfig(),x.pie),e=40,a=18,l=4,u=450,A=u,v=X(r),p=v.append("g");p.attr("transform","translate("+A/2+","+u/2+")");const{themeVariables:i}=x;let[g]=Y(i.pieOuterStrokeWidth);g??(g=2);const w=o.textPosition,f=Math.min(A,u)/2-e,T=O().innerRadius(0).outerRadius(f),$=O().innerRadius(f*w).outerRadius(f*w);p.append("circle").attr("cx",0).attr("cy",0).attr("r",f+g/2).attr("class","pieOuterCircle");const d=m.getSections(),S=At(d),C=[i.pie1,i.pie2,i.pie3,i.pie4,i.pie5,i.pie6,i.pie7,i.pie8,i.pie9,i.pie10,i.pie11,i.pie12],D=ot(C);p.selectAll("mySlices").data(S).enter().append("path").attr("d",T).attr("fill",n=>D(n.data.label)).attr("class","pieCircle");let R=0;d.forEach(n=>{R+=n}),p.selectAll("mySlices").data(S).enter().append("text").text(n=>(n.data.value/R*100).toFixed(0)+"%").attr("transform",n=>"translate("+$.centroid(n)+")").style("text-anchor","middle").attr("class","slice"),p.append("text").text(m.getDiagramTitle()).attr("x",0).attr("y",-400/2).attr("class","pieTitleText");const b=p.selectAll(".legend").data(D.domain()).enter().append("g").attr("class","legend").attr("transform",(n,k)=>{const E=a+l,L=E*D.domain().length/2,_=12*a,B=k*E-L;return"translate("+_+","+B+")"});b.append("rect").attr("width",a).attr("height",a).style("fill",D).style("stroke",D),b.data(S).append("text").attr("x",a+l).attr("y",a-l).text(n=>{const{label:k,value:E}=n.data;return m.getShowData()?`${k} [${E}]`:k});const I=Math.max(...b.selectAll("text").nodes().map(n=>n?.getBoundingClientRect().width??0)),N=A+e+a+l+I;v.attr("viewBox",`0 0 ${N} ${u}`),tt(v,u,N,o.useMaxWidth)},"draw"),Ct={draw:wt},Ie={parser:St,db:P,renderer:Ct,styles:xt};export{Ie as diagram};
