import{e,o as a,u as n}from"./chunk-DpmArOPE.js";import{fromGeometry as m,toGeometry as i,fromGeometries as s}from"./chunk-DjrwEoDI.js";import"./chunk-B92kdZ15.js";import"./chunk-BUVSeX7E.js";import"./chunk-DSTRjkE3.js";import"./chunk-Da9IW-EP.js";import"./chunk-RvJNgVq9.js";import"./chunk-XGpVqsM_.js";import"./chunk-DyqHK6XP.js";import"./chunk-Dix477Sg.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CrMA_peF.js";import"./chunk-DP7_WWTp.js";function it(r){const t=m(r),o=t.getSpatialReference();return i(e(t.getGeometry(),o,!1),o)}function pt(r){const[t,o]=s(r);return a(t,o,!1).map((p=>i(p,o)))}function et(r){const t=m(r);return n(t.getGeometry(),t.getSpatialReference(),!1)}export{it as execute,pt as executeMany,et as isSimple};
