import{ae as a,fx as l,ao as h,fy as n,af as t,ag as o,$ as p,ef as r,bd as u,ai as f}from"./chunk-CuaFhuP3.js";import{c as v,b as y}from"./chunk-NDm1DwyJ.js";import"./chunk-Dpk1TJd9.js";let i=class extends a.JSONSupportMixin(l.ClonableMixin(h)){constructor(e){super(e),this.position=null,this.elevationInfo=null,this.feature=null}equals(e){return n(this.position,e.position)&&n(this.elevationInfo,e.elevationInfo)&&v(this.feature,e.feature)}};t([o({type:p,json:{write:{isRequired:!0}}})],i.prototype,"position",void 0),t([o({type:u}),r()],i.prototype,"elevationInfo",void 0),t([o(y)],i.prototype,"feature",void 0),i=t([f("esri.analysis.LineOfSightAnalysisObserver")],i);const x=i;let s=class extends a.JSONSupportMixin(l){constructor(e){super(e),this.position=null,this.elevationInfo=null,this.feature=null}equals(e){return n(this.position,e.position)&&n(this.elevationInfo,e.elevationInfo)&&v(this.feature,e.feature)}};t([o({type:p,json:{write:!0,origins:{"web-scene":{write:{isRequired:!0}}}}}),r()],s.prototype,"position",void 0),t([o({type:u}),r()],s.prototype,"elevationInfo",void 0),t([o(y)],s.prototype,"feature",void 0),s=t([f("esri.analysis.LineOfSightAnalysisTarget")],s);export{s as l,x as u};
