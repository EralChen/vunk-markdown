import{m$ as R,n0 as b,oX as q,fX as k,bg as W,bu as Y,bn as X,bf as I,bp as D,aF as Z,aH as B,aO as J,c4 as T,e_ as K,aJ as C,A as E,$ as H,oY as Q,nN as ee,bY as N,oZ as te,n as _,fS as ie,dv as ae,o_ as O,nP as P,o$ as se,gR as z,kF as re,p0 as v,be as ne,p1 as oe,di as le,aj as g,ak as w,am as F,fK as he,c2 as de,de as ue,dc as ce,aD as ge,dg as me}from"./chunk-XGpVqsM_.js";import{p as pe}from"./chunk-BS6MVtAd.js";import{_ as we}from"./chunk-BoY5tY6Y.js";import{l as fe}from"./chunk-CTxi0THw.js";function ye(t,e,i){const s=R(t)/b(t),a={width:i,height:i};return s>1.0001?a.height=i/s:s<.9999&&(a.width=i*s),a.width=Math.round(a.width/(R(t)/R(e))),a.height=Math.round(a.height/(b(t)/b(e))),a}function U(t,e){return q(t,[[e[0],e[1],-1],[e[2],e[1],-1],[e[2],e[3],-1],[e[0],e[3],-1]])}function xe(t,e,i){if(!k(e,i))return U(t,i);const s=[e[1]-i[1],Math.min(e[3],i[3])-Math.max(e[1],i[1]),i[3]-e[3],123456],a=[e[0]-i[0],Math.min(e[2],i[2])-Math.max(e[0],i[0]),i[2]-e[2],123456],n=i[2]-i[0],l=i[3]-i[1],r=a[0]>0&&a[2]>0?3:2,h=s[0]>0&&s[2]>0?3:2,o=(h+1)*(r+1),d=W(3*o),u=Y(2*o),c=new Array(6*(h*r-1));let A=0,M=0,V=0,p=0,f=0;for(let y=0;y<4;y++){const G=s[y];if(G<=0)continue;let $=0;for(let x=0;x<4;x++){const L=a[x];L<=0||(d[M++]=i[0]+$,d[M++]=i[1]+A,d[M++]=-1,u[V++]=$/n,u[V++]=A/l,x<3&&y<3&&(x!==1||y!==1)&&(c[f++]=p,c[f++]=p+1,c[f++]=p+r+1,c[f++]=p+1,c[f++]=p+r+2,c[f++]=p+r+1),p++,$+=L)}A+=G}const j=new Array(c.length);return new X(t,[[I.POSITION,new D(d,c,3,!0)],[I.NORMAL,new D(_e,j,3,!0)],[I.UV0,new D(u,c,2,!0)]])}const _e=[0,0,1];let S=class extends pe{constructor(t){super(t),this.drapeSourceType=Z.RasterImage,this.updatePolicy=B.SYNC,this.type="draped",this.maximumDataResolution=null,this._images=new Array,this._extents=new Array,this._overlays=new Array,this._drapeSourceRenderer=null}initialize(){this._drapeSourceRenderer=this.view.basemapTerrain.overlayManager.registerGeometryDrapeSource(this),this.addHandles(J((()=>this.view.basemapTerrain.overlayManager.unregisterDrapeSource(this))))}setDrapingExtent(t,e){this._spatialReference=e,t.forEach(((i,s)=>{this._overlays[s]=i,this._updateImageExtent(i,s)}))}destroy(){this.clear()}get spatialReference(){return this._spatialReference}_updateImageExtent(t,e){const i=this._clippedExtent(t.extent,ve);if(i==null)return;const s=ye(t.extent,i,t.resolution);let a=t.pixelRatio*this.view.state.pixelRatio;const{layer:n}=this;if("imageMaxWidth"in n&&n.imageMaxWidth!=null||"imageMaxHeight"in n&&n.imageMaxHeight!=null){const r=n.imageMaxWidth,h=n.imageMaxHeight;if(s.width>r){const o=r/s.width;s.height=Math.floor(s.height*o),s.width=r,a*=o}if(s.height>h){const o=h/s.height;s.width=Math.floor(s.width*o),s.height=h,a*=o}}const l=this._extents[e];l&&K(l.extent,i)&&this._imageSizeEquals(i,l.imageSize,s)||(this._extents[e]={extent:T(i),imageSize:s,pixelRatio:a},this.suspended||this._fetch(e).catch((r=>{C(r)||E.getLogger(this).error(r)})))}clear(){for(let t=0;t<this._images.length;t++)this._clearImage(t)}async doRefresh(t){const e=[];for(let i=0;i<this._extents.length;i++)this._extents[i]&&e.push(this._fetch(i,t));await Promise.allSettled(e)}async processResult(t,e,i){(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement)&&(t.image=e)}findExtentInfoAt(t){for(const e of this._extents){const i=e.extent;if(new H(i[0],i[1],i[2],i[3],this._spatialReference).contains(t))return e}return null}async redraw(t,e){await Q(this._images,(async(i,s)=>{i&&(await t(i,e),await this._createStageObjects(s,i.image,e))}))}_imageSizeEquals(t,e,i){if(!this.maximumDataResolution)return!1;const s=R(t)/this.maximumDataResolution.x,a=b(t)/this.maximumDataResolution.y,n=s/e.width,l=a/e.height,r=s/i.width,h=a/i.height,o=Math.abs(n-r),d=Math.abs(l-h),u=ee.TESTS_DISABLE_OPTIMIZATIONS?0:1.5;return o<=u&&d<=u}async _fetch(t,e){if(this.suspended)return;const i=this._extents[t],s=i.extent;this._images[t]||(this._images[t]={texture:null,material:null,renderGeometry:null,loadingPromise:null,loadingAbortController:null,image:null,pixelData:null,renderExtent:T(s)});const a=this._images[t];a.loadingAbortController=N(a.loadingAbortController);const n=new H(s[0],s[1],s[2],s[3],this._spatialReference);if(n.width===0||n.height===0)return void this._clearImage(t);const l=new AbortController;a.loadingAbortController=l,te(e,(()=>l.abort()));const r=l.signal,h=this._waitFetchReady(r).then((async()=>{_(r);const o={requestAsImageElement:!0,pixelRatio:this._overlays[t].pixelRatio,...this.layerView.getFetchOptions(),signal:r},{height:d,width:u}=i.imageSize;return this.layer?this.layer.type==="imagery"?this.layer.internalFetchImage(n,u,d,o):this.layer.fetchImage(n,u,d,o):null})).then((o=>{if(ie(r))throw E.getLogger(this).warnOnce("A call to fetchImage resolved even though the request was aborted. fetchImage should not resolve if options.signal.aborted is true."),ae();return this.processResult(a,o)})).then((()=>{O(a.renderExtent,s)}));a.loadingPromise=h,await this.updatingHandles.addPromise(h.then((async()=>{_(r),await this._createStageObjects(t,a.image,r)})).catch((o=>{throw o&&!C(o)&&E.getLogger(this).error(o),o})).finally((()=>{h===a.loadingPromise&&(a.loadingPromise=null,a.loadingAbortController=null)})))}_clearImage(t){const e=this._images[t];if(e){e.renderGeometry!=null&&(this._drapeSourceRenderer.removeGeometries([e.renderGeometry],P.UPDATE),e.renderGeometry=null);const i=this.view.stage,s=e.texture;s?.unload(),i.removeTexture(s),e.texture=null,e.material=null,e.loadingAbortController=N(e.loadingAbortController),e.loadingPromise=null,e.image=null,e.pixelData=null}}async _createStageObjects(t,e,i){const s=this.view.stage,a=this._images[t],n=()=>{a.texture?.unload(),s.removeTexture(a.texture),a.texture=null,a.renderGeometry&&(this._drapeSourceRenderer.removeGeometries([a.renderGeometry],P.UPDATE),a.renderGeometry=null)};if(e){const l=new se(e,{width:e.width,height:e.height,preMultiplyAlpha:!0,wrap:{s:z.CLAMP_TO_EDGE,t:z.CLAMP_TO_EDGE}});if(await re(this._images[t===v.INNER?v.OUTER:v.INNER].loadingPromise),_(i),n(),await s.schedule((()=>l.load(s.renderView.renderingContext)),i),!l.loaded)return void n();let r;if(s.addTexture(l),a.texture=l,a.material??=new we({draped:!0,texture:l}),a.material.setParameters({texture:l}),t===v.INNER)r=U(a.material,a.renderExtent);else{const h=this._images[0].renderExtent;if(!h)return void n();r=xe(a.material,h,a.renderExtent)}a.renderGeometry=new ne(r),a.renderGeometry.localOrigin=this._overlays[t].renderLocalOrigin,this._drapeSourceRenderer.addGeometries([a.renderGeometry],P.UPDATE)}else n(),a.material=null}_clippedExtent(t,e){if(this.view.viewingMode!=="local")return O(e,t);const i=this.view.basemapTerrain;return i.ready?oe(t,i.extent,e):O(e,t)}async _waitFetchReady(t){await le((()=>this.view.stationary),t),_(t)}};g([w()],S.prototype,"type",void 0),S=g([F("esri.views.3d.layers.DrapedSubView3D")],S);const ve=T();let m=class extends he(fe(me)){constructor(){super(...arguments),this.fullExtentInLocalViewSpatialReference=null,this.refreshDebounced=de((async t=>{this.destroyed||await this._doRefresh(t).catch((e=>{C(e)||E.getLogger(this).error(e)}))}),2e3)}get visibleAtCurrentScale(){const t=this.layer,e="effectiveScaleRange"in t?t.effectiveScaleRange:null;return ue(e,this.view.scale)}isUpdating(){return super.isUpdating()||this.subView?.updating}initialize(){this._initSubView(),this.view.viewingMode==="local"&&this.addResolvingPromise((async()=>this.fullExtentInLocalViewSpatialReference=await ce(this.layer.fullExtent,this.view.spatialReference))()),this._updatingHandles.add((()=>this.suspended),(()=>this._suspendedChangeHandler()))}destroy(){this.subView=ge(this.subView)}_initSubView(){this.subView=new S({layerView:this})}async doRefresh(){return this._doRefresh()}async _doRefresh(t){this.suspended||await this.subView.doRefresh(t)}getFetchOptions(){}_suspendedChangeHandler(){this.suspended?this.subView.clear():this.refreshDebounced()}get test(){}};g([w()],m.prototype,"layer",void 0),g([w()],m.prototype,"suspended",void 0),g([w()],m.prototype,"fullExtentInLocalViewSpatialReference",void 0),g([w({readOnly:!0})],m.prototype,"visibleAtCurrentScale",null),g([w()],m.prototype,"updating",void 0),g([w()],m.prototype,"subView",void 0),m=g([F("esri.views.3d.layers.DynamicLayerView3D")],m);export{S as C,m as h};
