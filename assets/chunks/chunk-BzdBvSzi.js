import{af as s,ag as r,x as n,ah as o,ai as p}from"./chunk-BLrLWCUc.js";import{b as h}from"./chunk-B0nwe0ge.js";import"./chunk-CWUYlh1e.js";import"./chunk-BDqMgIU1.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.1.0 */const m=o`:host{display:block}:host([hidden]){display:none}[hidden]{display:none}`;class d extends s{constructor(){super(...arguments),this.mutationObserver=h("mutation",()=>{this.ensureTextContentDependentProps(),this.calciteInternalOptionChange.emit()}),this.disabled=!1,this.calciteInternalOptionChange=r({cancelable:!1})}static{this.properties={disabled:7,label:1,selected:7,value:1}}static{this.styles=m}connectedCallback(){super.connectedCallback(),this.ensureTextContentDependentProps(),this.mutationObserver?.observe(this.el,{attributeFilter:["label","value"],characterData:!0,childList:!0,subtree:!0})}willUpdate(t){t.has("disabled")&&(this.hasUpdated||this.disabled!==!1)&&this.handlePropChange(this.disabled,t.get("disabled"),"disabled"),t.has("label")&&this.handlePropChange(this.label,t.get("label"),"label"),t.has("selected")&&this.handlePropChange(this.selected,t.get("selected"),"selected"),t.has("value")&&this.handlePropChange(this.value,t.get("value"),"value")}disconnectedCallback(){super.disconnectedCallback(),this.mutationObserver?.disconnect()}handlePropChange(t,i,e){(e==="label"||e==="value")&&this.ensureTextContentDependentProps(),this.calciteInternalOptionChange.emit()}ensureTextContentDependentProps(){const{el:{textContent:t},internallySetLabel:i,internallySetValue:e,label:a,value:l}=this;(!a||a===i)&&(this.label=t,this.internallySetLabel=t),(l==null||l===e)&&(this.value=t,this.internallySetValue=t)}render(){return n`<slot>${this.label}</slot>`}}p("calcite-option",d);export{d as Option};
